node_1|node_2|edge|chunk_id
applicationevents|cargowashandled|interface provides a way to let other parts of the system know about events that have occurred, including handling events|2300abb7618545e8bbd2f8eb30ad5c21
applicationevents|cargowasmisdirected|interface provides a way to let other parts of the system know about events that have occurred, including misdirected cargo|2300abb7618545e8bbd2f8eb30ad5c21
applicationevents|cargohasarrived|interface provides a way to let other parts of the system know about events that have occurred, including cargo arrival|2300abb7618545e8bbd2f8eb30ad5c21
bookingservice|cargo booking service.|service for booking cargo|2300abb7618545e8bbd2f8eb30ad5c21
org.eclipse.cargotracker.domain.model.cargo.trackingid|applicationevents.cargowashandled(handlingevent event)|event handling for tracking IDs|2300abb7618545e8bbd2f8eb30ad5c21
org.eclipse.cargotracker.domain.model.cargo.trackingid|applicationevents.cargowasmisdirected(cargo cargo)|event handling for misdirected cargo|2300abb7618545e8bbd2f8eb30ad5c21
org.eclipse.cargotracker.domain.model.location.unlocode|applicationevents.cargowashandled(handlingevent event)|event handling for UnLocodes|2300abb7618545e8bbd2f8eb30ad5c21
java.time.localdate|applicationevents.receivedhandlingeventregistrationattempt(handlingeventregistrationattempt attempt)|handling event registration attempt for LocalDates|2300abb7618545e8bbd2f8eb30ad5c21
org.eclipse.cargotracker.domain.model.cargo.itinerary|bookingservice|use of cargo itineraries in booking service|2300abb7618545e8bbd2f8eb30ad5c21
bookingservice|cargo|A Cargo is registered in the BookingService using the BookingService.bookNewCargo() method.|548d2237b01e45ac924c03a94c7ab850
unlocode|origin|The Origin of a cargo is represented by an UnLocode.|548d2237b01e45ac924c03a94c7ab850
unlocode|destination|The Destination of a cargo is represented by an UnLocode.|548d2237b01e45ac924c03a94c7ab850
trackingid|cargo|A TrackingId is assigned to a Cargo during the BookingService.bookNewCargo() method.|548d2237b01e45ac924c03a94c7ab850
localdate|arrivaldeadline|The ArrivalDeadline for a cargo is represented by a LocalDate.|548d2237b01e45ac924c03a94c7ab850
bookingservice|itinerary|A List of possible routes for a cargo can be requested from the BookingService using the BookingService.requestPossibleRoutesForCargo() method.|548d2237b01e45ac924c03a94c7ab850
bookingservice|assigncargotoroute|A cargo can be assigned to a specific route using the BookingService.assignCargoToRoute() method.|548d2237b01e45ac924c03a94c7ab850
itinerary|trackingid|A TrackingId is associated with an Itinerary during the BookingService.assignCargoToRoute() method.|548d2237b01e45ac924c03a94c7ab850
unlocode|changedestination|The Destination of a cargo can be changed using the CargoInspectionService.changeDestination() method.|548d2237b01e45ac924c03a94c7ab850
localdate|changedeadline|The ArrivalDeadline for a cargo can be changed using the BookingService.changeDeadline() method.|548d2237b01e45ac924c03a94c7ab850
cargoinspectionservice|trackingid|The CargoInspectionService is used to inspect cargo with a specific TrackingId.|54a8d1ee737a4bdd87e8c46c85303902
cargoinspectionservice|cargo|The CargoInspectionService inspects cargo.|54a8d1ee737a4bdd87e8c46c85303902
handlingeventservice|handlingevent|The HandlingEventService handles HandlingEvents.|54a8d1ee737a4bdd87e8c46c85303902
handlingeventservice|unlocode|The HandlingEventService creates HandlingEvents at specific UnLocodes.|54a8d1ee737a4bdd87e8c46c85303902
handlingeventservice|voyagenumber|The HandlingEventService creates HandlingEvents for specific VoyageNumbers.|54a8d1ee737a4bdd87e8c46c85303902
defaultbookingservice|cargorepository|dependency relationship between DefaultBookingService and CargoRepository|75527b59f6b1452ca921c60e357c0eab
bookingservice|defaultbookingservice|implements relationship between BookingService and DefaultBookingService|75527b59f6b1452ca921c60e357c0eab
cargorepository|cargo|accesses relationship between CargoRepository and Cargo|75527b59f6b1452ca921c60e357c0eab
cargorepository|location|accesses relationship between CargoRepository and Location|75527b59f6b1452ca921c60e357c0eab
cargo|itinerary|has relationship between Cargo and Itinerary|75527b59f6b1452ca921c60e357c0eab
itinerary|routespecification|refers to relationship between Itinerary and RouteSpecification|75527b59f6b1452ca921c60e357c0eab
trackingid|cargo|belongs to relationship between TrackingId and Cargo|75527b59f6b1452ca921c60e357c0eab
localdate|cargo|has relationship between LocalDate and Cargo for expiry date|75527b59f6b1452ca921c60e357c0eab
trackingid|cargorepository|The 'TrackingId' is stored in the 'cargoRepository'.|0cde8ee3640f45af805352680d1d451a
unlocode|location|Both 'UnLocode' and 'Location' are used to identify places where cargo can be delivered or picked up. A 'Location' is identified by its 'UnLocode'. In this context, the 'OriginUnLocode' and 'DestinationUnLocode' parameters of the 'bookNewCargo' method take 'UnLocode' as input and pass it on to the 'LocationRepository' to retrieve the corresponding 'Location'.|0cde8ee3640f45af805352680d1d451a
routespecification|cargo|A 'RouteSpecification' is a set of instructions for moving cargo from one 'Location' to another. It contains the origin, destination, and deadline for delivery. This object is passed to the constructor of the 'Cargo' object during the 'bookNewCargo' method.|0cde8ee3640f45af805352680d1d451a
routingservice|bookingservice|The 'RoutingService' is used by the 'BookingService' to find possible routes for a given cargo. The 'routingService' dependency is injected into both classes.|0cde8ee3640f45af805352680d1d451a
locationrepository|locationrepository|Both 'LocationRepository' and 'locationRepository' are used to retrieve the details of a location based on its 'UnLocode'. They are both dependency injected into the class.|0cde8ee3640f45af805352680d1d451a
cargorepository|cargorepository|Both 'CargoRepository' and 'cargoRepository' are used to store and retrieve cargo objects. They are both dependency injected into the class.|0cde8ee3640f45af805352680d1d451a
cargo|routespecification|The cargo is associated with a routeSpecification through the method getRouteSpecification() in Cargo class.|c2b210b275974950912956df420c2957
routingservice|cargo|The routingService fetches routes for a given cargo using the cargo's routeSpecification.|c2b210b275974950912956df420c2957
trackingid|cargo|A tracking ID is used to locate a specific Cargo object in the repository.|c2b210b275974950912956df420c2957
unlocode|location|An UNLOCode code identifies a particular location.|c2b210b275974950912956df420c2957
newdestination|location|The new destination for cargo is identified using its Location object.|c2b210b275974950912956df420c2957
cargo|origin|Each Cargo object has an origin location.|c2b210b275974950912956df420c2957
location|routespecification|A RouteSpecification represents a journey between two locations.|c2b210b275974950912956df420c2957
localdate|routespecification|The arrival deadline for the cargo's new route is specified using a LocalDate object.|c2b210b275974950912956df420c2957
defaultcargoinspectionservice|cargoinspectionservice|is a specific implementation of CargoInspectionService interface|772c71436c9a45d9a905f0de3a432849
cargorepository|cargorepository|represents the repository for storing cargo objects|772c71436c9a45d9a905f0de3a432849
trackingid|trackingid|is a unique identifier assigned to each cargo object|772c71436c9a45d9a905f0de3a432849
cargo|cargo|represents the actual cargo being tracked|772c71436c9a45d9a905f0de3a432849
handlingeventrepository|handlingeventrepository|maintains a history of handling events for each cargo object|772c71436c9a45d9a905f0de3a432849
handlinghistory|handlinghistory|is the collection of handling events associated with a specific cargo object|772c71436c9a45d9a905f0de3a432849
level|level.info|specifies the severity level for logging messages|772c71436c9a45d9a905f0de3a432849
logger|logger|provides a mechanism for recording information, debugging output, and error messages|772c71436c9a45d9a905f0de3a432849
applicationevents|applicationevents|is used to notify listeners of application-specific events|772c71436c9a45d9a905f0de3a432849
defaulthandlingeventservice|applicationevents|The DefaultHandlingEventService class uses the ApplicationEvents instance to publish an event stating that a cargo has been handled.|9e57532429b9487e8fdaa10302439de9
defaulthandlingeventservice|handlingeventrepository|The DefaultHandlingEventService class stores the new handling event in the HandlingEventRepository instance, which updates the persistent state of the handling event aggregate.|9e57532429b9487e8fdaa10302439de9
defaulthandlingeventservice|handlingeventfactory|The DefaultHandlingEventService class uses the HandlingEventFactory instance to create a new HandlingEvent object.|9e57532429b9487e8fdaa10302439de9
localdatetime|completiontime|The 'completionTime' parameter of the 'registerHandlingEvent' method is an instance of the LocalDateTime class, which represents a point in time.|9e57532429b9487e8fdaa10302439de9
localdatetime|registrationtime|The 'registrationTime' variable of the 'registerHandlingEvent' method is an instance of the LocalDateTime class, which represents a point in time.|9e57532429b9487e8fdaa10302439de9
trackingid|trackingid|The 'trackingId' parameter of the 'registerHandlingEvent' method is an instance of the TrackingId class, which represents a unique identifier for a cargo unit.|9e57532429b9487e8fdaa10302439de9
voyagenumber|voyagenumber|The 'voyageNumber' parameter of the 'registerHandlingEvent' method is an instance of the VoyageNumber class, which represents a unique identifier for a voyage.|9e57532429b9487e8fdaa10302439de9
unlocode|unlocode|The 'unLocode' parameter of the 'registerHandlingEvent' method is an instance of the UnLocode class, which represents a unique identifier for a location.|9e57532429b9487e8fdaa10302439de9
handlingevent.type|type|The 'type' parameter of the 'registerHandlingEvent' method is an instance of the HandlingEvent.Type enum, which represents the type of handling event.|9e57532429b9487e8fdaa10302439de9
registered handling event|event|The string 'Registered handling event' contains the term 'event', which is a type of activity or occurrence that happens in a specific context. This event is related to the concept of handling, implying that something is being transferred or managed.|aa7e96513f484508b56157d361022afa
handler|event|The concept of handling is directly associated with events, as it refers to the process of managing or processing a specific occurrence.|aa7e96513f484508b56157d361022afa
logger|handler|In this context, 'Logger' is used to refer to an object that handles logging operations. This handler is related to the concept of handling, as it manages the process of recording events or messages.|aa7e96513f484508b56157d361022afa
info|event|The string 'Registered handling event' also includes the keyword 'info', which is a type of event that provides additional details or status updates. This info event is related to the concept of handling, as it suggests that some action has been taken with respect to this event.|aa7e96513f484508b56157d361022afa
applicationsettings|sampleloaded|The class 'ApplicationSettings' contains a boolean variable called 'sampleLoaded', which indicates whether a specific sample has been loaded. This boolean value is related to the concept of settings, as it allows users to customize certain aspects of the application.|aa7e96513f484508b56157d361022afa
applicationsettings|id|The class 'ApplicationSettings' also includes a primary key called 'id', which uniquely identifies each instance of this entity in the database. This id is related to the concept of persistence, as it enables data to be stored and retrieved over time.|aa7e96513f484508b56157d361022afa
entity|applicationsettings|The annotation '@Entity' is used to indicate that 'ApplicationSettings' is a persistent object in the database. This entity annotation is related to the concept of persistence, as it allows data to be mapped between Java objects and relational tables.|aa7e96513f484508b56157d361022afa
id|applicationsettings.id|The '@Id' annotation is used to specify that 'id' is a primary key for 'ApplicationSettings'. This id annotation is related to the concept of persistence, as it enables unique identification and retrieval of specific entities.|aa7e96513f484508b56157d361022afa
serializable|applicationsettings|The interface 'Serializable' is implemented by 'ApplicationSettings', indicating that this class can be serialized into a stream of bytes for storage or transmission. This serializable interface is related to the concept of persistence, as it enables data to be transferred between different formats or locations.|aa7e96513f484508b56157d361022afa
localdate|dateconverter.date_formatter|The class 'LocalDate' is used to represent dates in the Java time library, while 'DateConverter.DATE_FORMATTER' is a formatter that converts dates into a specific format based on the system default zone. Both of these classes are related to the concept of date and time manipulation.|aa7e96513f484508b56157d361022afa
localdatetime|dateconverter.date_time_formatter|The class 'LocalDateTime' is used to represent combined dates and times in the Java time library, while 'DateConverter.DATE_TIME_FORMATTER' is a formatter that converts date-times into a specific format based on the system default zone. Both of these classes are related to the concept of date and time manipulation.|aa7e96513f484508b56157d361022afa
loadsampledata|context|is a method in the SampleDataGenerator class that loads sample data for demonstration purposes. It checks if sample data has already been loaded and skips loading if it has already been done. If not, it proceeds to load the sample data.|0b74607a2b854596953796fe34bb3fb8
context|samplelocations|is used as a container for storing location names that are used in the simulation. These locations are persisted into the database using the EntityManager class.|0b74607a2b854596953796fe34bb3fb8
samplelocations.hongkong|context|is a constant string that represents the name of one of the sample locations stored in the SampleLocations container.|0b74607a2b854596953796fe34bb3fb8
samplelocations.melbourne|context|is a constant string that represents the name of another sample location stored in the SampleLocations container.|0b74607a2b854596953796fe34bb3fb8
samplelocations.stockholm|context|is a constant string that represents the name of yet another sample location stored in the SampleLocations container.|0b74607a2b854596953796fe34bb3fb8
samplelocations.helsinki|context|is a constant string that represents the final sample location stored in the SampleLocations container.|0b74607a2b854596953796fe34bb3fb8
samplelocations.hongkong|samplevoyages.hongkong_to_new_york|is departure location|771eb6192ae44c6f8d57c6f64d8e4511
samplelocations.newyork|samplevoyages.hongkong_to_new_yor|is arrival location|771eb6192ae44c6f8d57c6f64d8e4511
samplelocations.helsinki|dallastohelsinkialt|is destination location in alternative route specification|771eb6192ae44c6f8d57c6f64d8e4511
trackingid trackingid1|cargo abc123|is cargo with tracking ID trackingId1|771eb6192ae44c6f8d57c6f64d8e4511
localdate.now().plusdays(15)|routespecification routespecification1|specifies expected arrival date at destination location in RouteSpecification for Cargo abc123|771eb6192ae44c6f8d57c6f64d8e4511
samplelocations.helsinki|routespecification routespecification1|specifies intermediate stopover location in RouteSpecification for Cargo abc123|771eb6192ae44c6f8d57c6f64d8e4511
handlingevent|event2|is a subclass of HandlingEvent|fb45298db3554cd4b057072bb76d83a7
handlingevent|event3|is a subclass of HandlingEvent|fb45298db3554cd4b057072bb76d83a7
samplelocations.hongkong|handlingevent|belongs to SampleLocations.HONGKONG during event loading|fb45298db3554cd4b057072bb76d83a7
samplevoyages.hongkong_to_new_york|handlingevent|is involved in the handling event for SampeLocations.HONGKONG during loading|fb45298db3554cd4b057072bb76d83a7
localdatetime|handlingevent|occurs at specific LocalDateTime instance|fb45298db3554cd4b057072bb76d83a7
localdatetime|handlingevent|ends at specific LocalDateTime instance|fb45298db3554cd4b057072bb76d83a7
trackingid|cargo|represents the tracking ID for a particular Cargo object|fb45298db3554cd4b057072bb76d83a7
routespecification|cargo|specifies the itinerary of the Cargo from source location to destination location|fb45298db3554cd4b057072bb76d83a7
samplelocations.hangzou|cargo|is loaded onto cargo at SampleLocations.HANGZOU|fb45298db3554cd4b057072bb76d83a7
samplelocations.newyork|cargo|is unloaded from cargo at SampleLocations.NEWYORK|fb45298db3554cd4b057072bb76d83a7
trackingid|cargo|represents the tracking ID for a particular Cargo object|fb45298db3554cd4b057072bb76d83a7
routespecification|cargo|specifies the itinerary of the Cargo from source location to destination location|fb45298db3554cd4b057072bb76d83a7
samplelocations.hangzou|cargo|is loaded onto cargo at SampleLocations.HANGZOU|fb45298db3554cd4b057072bb76d83a7
samplevoyages.new_york_to_dallas|leg|is a part of the itinerary represented by SampleVoyages.NEW_YORK_TO_DALLAS|fb45298db3554cd4b057072bb76d83a7
samplelocations.newyork|leg|originates from SampleLocations.NEWYORK during the Leg represented by SampleVoyages.NEW_YORK_TO_DALLAS|fb45298db3554cd4b057072bb76d83a7
samplelocations.dallas|leg|ends at SampleLocations.DALLAS during the Leg represented by SampleVoyages.NEW_YORK_TO_DALLAS|fb45298db3554cd4b057072bb76d83a7
localdatetime|leg|occurs at specific LocalDateTime instance during the Leg represented by SampleVoyages.NEW_YORK_TO_DALLAS|fb45298db3554cd4b057072bb76d83a7
localdatetime|leg|ends at specific LocalDateTime instance during the Leg represented by SampleVoyages.NEW_YORK_TO_DALLAS|fb45298db3554cd4b057072bb76d83a7
samplevoyages.dallas_to_helsinki|samplelocations.dallas|starting location of the voyage named SampleVoyages.DALLAS_TO_HELSINKI is SampleLocations.DALLAS|27b48a8cd855499abab140a93738bfd5
samplevoyages.dallas_to_helsinki|samplelocations.stockholm|end location of the voyage named SampleVoyages.DALLAS_TO_HELSINKI is SampleLocations.STOCKHOLM|27b48a8cd855499abab140a93738bfd5
localdatetime.now().plusdays(6).minushours(11).minusminutes(38)|samplevoyages.dallas_to_helsinki|the voyage named SampleVoyages.DALLAS_TO_HELSINKI is scheduled to arrive at this datetime|27b48a8cd855499abab140a93738bfd5
localdatetime.now().plusdays(15).minushours(4).minusminutes(1)|samplevoyages.dallas_to_helsinki|the voyage named SampleVoyages.DALLAS_TO_HELSINKI is scheduled to depart at this datetime|27b48a8cd855499abab140a93738bfd5
jkl567|itinerary2|the vessel named jkl567 has this itinerary named itinerary2|27b48a8cd855499abab140a93738bfd5
handlingevent event1|localdatetime.now().minushours(2).minusminutes(44)|this handling event named HandlingEvent event1 occurred at this datetime|27b48a8cd855499abab140a93738bfd5
handlingevent event1|samplelocations.hangzou.getunlocode()|the handling event named HandlingEvent event1 took place at the location with unlocode SampleLocations.HANGZOU.getUnLocode()|27b48a8cd855499abab140a93738bfd5
handlingevent event2|samplevoyages.hongkong_to_new_york.getvoyagenumber()|the handling event named HandlingEvent event2 is related to the voyage named SampleVoyages.HONGKONG_TO_NEW_YORK.getVoyageNumber()|27b48a8cd855499abab140a93738bfd5
handlingevent event3|samplelocations.newyork.getunlocode()|the handling event named HandlingEvent event3 occurred at the location with unlocode SampleLocations.NEWYORK.getUnLocode()|27b48a8cd855499abab140a93738bfd5
trackingid2|samplevoyages.hongkong_to_new_york|is associated with|d1e6b25261954966ae0a3e9255083020
event3|trackingid2|belongs to|d1e6b25261954966ae0a3e9255083020
handlingevent.type.unload|event3|has operation type|d1e6b25261954966ae0a3e9255083020
samplevoyages.hongkong_to_new_york|samplelocations.newyork|ends at|d1e6b25261954966ae0a3e9255083020
handlingevent event3|samplevoyages.hongkong_to_new_york|is handled for|d1e6b25261954966ae0a3e9255083020
handlinghistory2|trackingid2|represents handling history of|d1e6b25261954966ae0a3e9255083020
jkl567|handlinghistory2|is derived from|d1e6b25261954966ae0a3e9255083020
trackingid3|def789|is same as|d1e6b25261954966ae0a3e9255083020
routespecification3|samplelocations.hongkong|starts at|d1e6b25261954966ae0a3e9255083020
routespecification3|samplelocations.melbourne|transits through|d1e6b25261954966ae0a3e9255083020
cargo def789|trackingid3|represents cargo with definition|d1e6b25261954966ae0a3e9255083020
routespecification4|samplelocations.newyork|originates from|d1e6b25261954966ae0a3e9255083020
routespecification4|samplelocations.dallas|ends at with a delay of 3 days|d1e6b25261954966ae0a3e9255083020
cargo mno456|trackingid4|represents cargo with definition|d1e6b25261954966ae0a3e9255083020
handlingevent|localdatetime|time stamp of handling event|7b855901f0e849e29d10015a8e5970d8
trackingid4|handlinghistory3|tracking number of cargo related to handling history|7b855901f0e849e29d10015a8e5970d8
samplelocations.dallas|handlingevent|location where handling event occurred|7b855901f0e849e29d10015a8e5970d8
handlingevent.type|handlingevent|type of handling event|7b855901f0e849e29d10015a8e5970d8
cargo|mno456|cargo related to mno456|7b855901f0e849e29d10015a8e5970d8
trackingid4|cargo|tracking number of cargo|7b855901f0e849e29d10015a8e5970d8
cargo|entity|Cargo is a type of Entity in the domain model.|09c33688a4864c23a7a81bd5a5d92877
cargo|root|Cargo is the central class and root aggregate of the Cargo-Itinerary-Leg-Delivery-RouteSpecification hierarchy in the domain model.|09c33688a4864c23a7a81bd5a5d92877
cargo|aggregate|Cargo is a distinct and cohesive unit of behavior that encapsulates other objects, state, and operations within its boundary, following the Aggregate Pattern.|09c33688a4864c23a7a81bd5a5d92877
cargo|serializable|Cargo implements the Serializable interface, making it possible to transmit Cargos over networks or store them in persistent data storage systems such as databases.|09c33688a4864c23a7a81bd5a5d92877
cargo|class|Cargo is a Java class defined using the @Entity annotation, which indicates that it is a persistent entity managed by the JPA framework.|09c33688a4864c23a7a81bd5a5d92877
cargo|namedquery|The Cargo class has a NamedQuery annotated with the name 'Cargo.findAll', which can be used to retrieve all Cargos.|09c33688a4864c23a7a81bd5a5d92877
cargo|trackingid|The Cargo class has a @Embedded and @NotNull annotated field called 'trackingId', which is a unique identifier for the Cargo.|09c33688a4864c23a7a81bd5a5d92877
cargo|location|The Cargo class has a @ManyToOne and @JoinColumn annotated field called 'origin', which is a Location where the Cargo originates from.|09c33688a4864c23a7a81bd5a5d92877
cargo|routespecification|The Cargo class has an @Embedded and @NotNull annotated field called 'routeSpecification', which specifies the route that the Cargo follows.|09c33688a4864c23a7a81bd5a5d92877
cargo|itinerary|The Cargo class has an @Embedded and @NotNull annotated field called 'itinerary', which is a plan for the movement of the Cargo along its route.|09c33688a4864c23a7a81bd5a5d92877
cargo|delivery|The Cargo class has an @Embedded and @NotNull annotated field called 'delivery', which represents the completion of transportation for a specific delivery.|09c33688a4864c23a7a81bd5a5d92877
trackingid|identifier|The TrackingId class is used to uniquely identify Cargos and is a type of Identifier.|09c33688a4864c23a7a81bd5a5d92877
cargo|trackingid|Cargo has a TrackingId which is required.|4f60d53c4a894b1cabc963992c6871ea
cargo|routespecification|Cargo's origin can be derived from the initial RouteSpecification at creation.|4f60d53c4a894b1cabc963992c6871ea
routespecification|origin|RouteSpecification has an Origin which cannot be null.|4f60d53c4a894b1cabc963992c6871ea
cargorepository|cargo|CargoRepository provides a method to find a specific Cargo by its TrackingId and a method to store new Cargos. It also has methods for finding all Cargos and generating the next available TrackingId.|65c3e0b3f4c3460f81a6927093480919
cargo|trackingid|A Cargo is identified by its unique TrackingId, which can be obtained using the CargoRepository's nextTrackingId() method.|65c3e0b3f4c3460f81a6927093480919
cargo|delivery|A Cargo may have an associated Delivery, which is represented by the interface Delivery.|65c3e0b3f4c3460f81a6927093480919
routingstatus|misrouted|The RoutingStatus of a Cargo can take on the value MISROUTED, indicating that it has been misrouted.|65c3e0b3f4c3460f81a6927093480919
routingstatus|not_routed|The RoutingStatus of a Cargo can also take on the value NOT_ROUTED, meaning it has not yet been routed.|65c3e0b3f4c3460f81a6927093480919
routingstatus|routed|Alternatively, the RoutingStatus of a Cargo can be ROUTED, indicating that it has successfully been routed.|65c3e0b3f4c3460f81a6927093480919
transportstatus|claimed|The TransportStatus of a Cargo can have the value CLAIMED when it has been claimed by the recipient.|65c3e0b3f4c3460f81a6927093480919
transportstatus|in_port|Alternatively, the TransportStatus of a Cargo can be IN_PORT, indicating that it is currently in a port.|65c3e0b3f4c3460f81a6927093480919
transportstatus|not_received|The TransportStatus of a Cargo may also take on the value NOT_RECEIVED, meaning it has not yet been received by its destination.|65c3e0b3f4c3460f81a6927093480919
transportstatus|onboard_carrier|Lastly, the TransportStatus of a Cargo can be ONBOARD_CARRIER when it is currently being transported by a carrier.|65c3e0b3f4c3460f81a6927093480919
transportstatus|unknown|When the TransportStatus of a Cargo cannot be determined, it is considered UNKNOWN.|65c3e0b3f4c3460f81a6927093480919
delivery|transportstatus|the attribute 'transportStatus' of Delivery is related to TransportStatus|8307f264bda04b6e839d096dac00ee03
delivery|location|the attribute 'lastKnownLocation' of Delivery is related to Location|8307f264bda04b6e839d096dac00ee03
delivery|handlinghistory|DerivedFrom relationship between Delivery and HandlingHistory, as specified in the derivedFrom() constructor method.|05d477c599244da5b91cef7672bdf121
delivery|routespecification|Requires RouteSpecification to be created during initialization, as mentioned in Delivery constructor.|05d477c599244da5b91cef7672bdf121
delivery|itinerary|Is initialized with Itinerary during constructor invocation.|05d477c599244da5b91cef7672bdf121
handlingevent|lastevent|Represents the 'lastEvent' field in Delivery class, as defined during class instantiation.|05d477c599244da5b91cef7672bdf121
delivery|routingstatus|Is assigned an Enum value of RoutingStatus type via @Enumerated annotation.|05d477c599244da5b91cef7672bdf121
delivery|calculatedat|Is initialized with LocalDateTime type during constructor invocation.|05d477c599244da5b91cef7672bdf121
handlingevent|lastevent|Has a reference to HandlingEvent object via the 'lastEvent' field in Delivery class, as defined during class instantiation.|05d477c599244da5b91cef7672bdf121
delivery|transportstatus|Is of type TransportStatus and is initialized to null during constructor invocation.|05d477c599244da5b91cef7672bdf121
location|lastknownlocation|Has a reference to Location object via the 'lastKnownLocation' field in Delivery class, as defined during class instantiation.|05d477c599244da5b91cef7672bdf121
voyage|currentvoyage|Has a reference to Voyage object via the 'currentVoyage' field in Delivery class, as defined during class instantiation.|05d477c599244da5b91cef7672bdf121
boolean|isunloadedatdestination|Is of Boolean type and is initialized to null during constructor invocation.|05d477c599244da5b91cef7672bdf121
handlingactivity|nextexpectedactivity|Has a reference to HandlingActivity object via the 'nextExpectedActivity' field in Delivery class, as defined during class instantiation.|05d477c599244da5b91cef7672bdf121
delivery|handlingevent|Delivery is created as a result of handlingEvent|b7d9e3fa7f334c0abefb489aa70217e9
delivery|itinerary|Delivery is associated with Itinerary|b7d9e3fa7f334c0abefb489aa70217e9
routespecification|delivery|Delivery reflects changes in RouteSpecification|b7d9e3fa7f334c0abefb489aa70217e9
transportstatus|delivery|TransportStatus is associated with Delivery|b7d9e3fa7f334c0abefb489aa70217e9
location|delivery|LastKnownLocation of Delivery is a Location|b7d9e3fa7f334c0abefb489aa70217e9
voyage|delivery|CurrentVoyage of Delivery is a Voyage|b7d9e3fa7f334c0abefb489aa70217e9
localdatetime|delivery|EstimatedTimeOfArrival of Delivery is a LocalDateTime|b7d9e3fa7f334c0abefb489aa70217e9
handlingactivity|delivery|NextExpectedActivity of Delivery is a HandlingActivity|b7d9e3fa7f334c0abefb489aa70217e9
calculatetransportstatus|lastevent|is used to calculate the TransportStatus based on the type of event in lastEvent|3ac9f0454d1f46f1a9bd4e5b06e4fc70
onboard_carrier|calculatetransportstatus|is returned when the lastEvent is of LOAD type|3ac9f0454d1f46f1a9bd4e5b06e4fc70
in_port|calculatetransportstatus|is returned when the lastEvent is of UNLOAD, RECEIVE, CUSTOMS or CLAIM type|3ac9f0454d1f46f1a9bd4e5b06e4fc70
unknown|calculatetransportstatus|is returned when the type of event in lastEvent is not LOAD, UNLOAD, RECEIVE, CUSTOMS or CLAIM|3ac9f0454d1f46f1a9bd4e5b06e4fc70
lastevent|calculatedat|is used to calculate the calculatedAt time based on the last event|3ac9f0454d1f46f1a9bd4e5b06e4fc70
not_received|isunloadedatdestination|indicates that the cargo has not been unloaded at the final destination|3ac9f0454d1f46f1a9bd4e5b06e4fc70
routingstatus|calculatetransportstatus|affects the calculation of TransportStatus based on its value|3ac9f0454d1f46f1a9bd4e5b06e4fc70
is_unloaded|routingstatus|is returned when the routingStatus is IS_UNLOADED|3ac9f0454d1f46f1a9bd4e5b06e4fc70
in_transit|routingstatus|is returned when the routingStatus is IN_TRANSIT|3ac9f0454d1f46f1a9bd4e5b06e4fc70
onboard_carrier|calculatelastknownlocation|indicates that the current location of the cargo is onboard the carrier|3ac9f0454d1f46f1a9bd4e5b06e4fc70
gettransportstatus|transportstatus|is a method to get the current TransportStatus of the cargo|3ac9f0454d1f46f1a9bd4e5b06e4fc70
lastevent|calculatelastknownlocation|is used to calculate the last known location based on the event type and location in the lastEvent|3ac9f0454d1f46f1a9bd4e5b06e4fc70
currentvoyage|calculatecurrentvoyage|indicates that the voyage is calculated based on the current transport status and last event|3ac9f0454d1f46f1a9bd4e5b06e4fc70
calculatelastknownlocation|getlastknownlocation|is a method to get the last known location of the cargo|3ac9f0454d1f46f1a9bd4e5b06e4fc70
calculatemisdirectionstatus|itinerary|is called with an Itinerary object as an argument and returns a boolean value indicating whether the last event in the itinerary is null or not|c87c346d49234282875158633446ef77
lastevent|itinerary|is accessed from the Itinerary object to retrieve the most recent event in the sequence of events for a specific voyage|c87c346d49234282875158633446ef77
calculateeta|itinerary|takes an Itinerary object as an argument and returns a LocalDateTime object representing the estimated time of arrival (ETA) for the final leg of the voyage|c87c346d49234282875158633446ef77
ontrack|null|is called to check whether the vessel is currently following the planned route specified by the RouteSpecification object|c87c346d49234282875158633446ef77
lastevent|calculatenextexpectedactivity|is passed as a parameter to the calculateNextExpectedActivity method to determine the next expected handling activity based on the type of the last event|c87c346d49234282875158633446ef77
routespecification|calculatenextexpectedactivity|is used in conjunction with the itinerary to identify the origin location for the next handling activity|c87c346d49234282875158633446ef77
lastevent|calculateeta|is accessed from within a nested loop iterating through the legs of the itinerary in order to find the first leg following the final unload location specified by the last event|c87c346d49234282875158633446ef77
nextleg|calculateeta|is accessed from within a nested loop iterating through the legs of the itinerary in order to find the first leg following the final unload location specified by the last event|c87c346d49234282875158633446ef77
receive|not_routed|If itinerary is null or itinerary equals Itinerary.EMPTY_ITINERARY, then routing status is NOT_ROUTED.|ccdbb163b6be49a4ab5264167f12c4f1
receive|routed|If itinerary is not null and itinerary is not Itinerary.EMPTY_ITINERARY, and routeSpecification is satisfied by itinerary, then routing status is ROUTED.|ccdbb163b6be49a4ab5264167f12c4f1
receive|misrouted|If itinerary is not null and itinerary is not Itinerary.EMPTY_ITINERARY, but routeSpecification is not satisfied by itinerary, then routing status is MISROUTED.|ccdbb163b6be49a4ab5264167f12c4f1
claim|routed|If itinerary is not null and itinerary is not Itinerary.EMPTY_ITINERARY, and routeSpecification is satisfied by itinerary, then routing status is ROUTED.|ccdbb163b6be49a4ab5264167f12c4f1
claim|not_routed|If lastEvent is null or lastEvent's type is not HandlingEvent.Type.UNLOAD and routeSpecification's destination does not have the same identity as lastEvent's location, then routing status is NOT_ROUTED.|ccdbb163b6be49a4ab5264167f12c4f1
unloaded_at_destination|routed|If lastEvent is not null and lastEvent's type is HandlingEvent.Type.UNLOAD and routeSpecification's destination has the same identity as lastEvent's location, then routing status is ROUTED.|ccdbb163b6be49a4ab5264167f12c4f1
on_track|routed|If routingStatus equals ROUTED and misdirected does not equal true, then onTrack is true.|ccdbb163b6be49a4ab5264167f12c4f1
ontrack|routed|The method 'onTrack' returns true if the object's routingStatus is 'ROUTED' and misdirected is false.|a3dd6f7c8ce74a70ab6ebd2a9e20fa8c
samevalueas|delivery|The method 'sameValueAs' compares two Delivery objects based on their transportStatus, lastKnownLocation, currentVoyage, misdirected, eta, nextExpectedActivity, isUnloadedAtDestination, routingStatus, calculatedAt, and lastEvent properties using an EqualsBuilder.|a3dd6f7c8ce74a70ab6ebd2a9e20fa8c
delivery|handlingactivity|The classes 'Delivery' and 'HandlingActivity' are both embedded in the package 'org.eclipse.cargotracker.domain.model.cargo'.|a3dd6f7c8ce74a70ab6ebd2a9e20fa8c
handlingevent.type|type|is a specific type of handling event|f6a9957a59e14c2ca4a8bcdd1c1eccae
location|location|indicates the physical place where the handling activity is being carried out|f6a9957a59e14c2ca4a8bcdd1c1eccae
voyage|voyage|represents a sequence of transportation events for moving goods from one location to another|f6a9957a59e14c2ca4a8bcdd1c1eccae
node_1|node_2|edge|chunk_id
handlingactivity|handlingevent.type|is required for creating a HandlingActivity object, as indicated by the @ManyToOne and @JoinColumn annotations.|341620f2c3c54275b85c1a9aa9d44c6c
handlingactivity|location|is required for creating a HandlingActivity object, as indicated by the constructor parameters.|341620f2c3c54275b85c1a9aa9d44c6c
handlingactivity|voyage|is required for creating a HandlingActivity object and is also associated with it through the 'voyage' field, as indicated by the @ManyToOne and @JoinColumn annotations.|341620f2c3c54275b85c1a9aa9d44c6c
handlingactivity|handlingevent.type|is associated with HandlingActivity through the 'type' field, as indicated by the constructor parameters.|341620f2c3c54275b85c1a9aa9d44c6c
handlingactivity|location|is associated with HandlingActivity through the 'location' field, as indicated by the constructor parameters.|341620f2c3c54275b85c1a9aa9d44c6c
handlingactivity|voyage|is associated with HandlingActivity through the 'voyage' field, as indicated by the constructor parameters and the @ManyToOne and @JoinColumn annotations.|341620f2c3c54275b85c1a9aa9d44c6c
itinerary|legs|The Itinerary contains a list of Legs, which are the specific journeys or transportation routes that make up the overall itinerary.|f96d1a8d7e144c5c867c65c686de6da7
legs|cargo|Each Leg is associated with a specific cargo being transported during that leg of the journey.|f96d1a8d7e144c5c867c65c686de6da7
itinerary|handlingevent|An Itinerary may include HandlingEvents, which represent various handling or processing activities performed on the cargo during its transportation.|f96d1a8d7e144c5c867c65c686de6da7
handlingactivity|object|The HandlingActivity class in this context is used to represent various handling and transportation activities, which may be applied to different objects or entities within the system.|f96d1a8d7e144c5c867c65c686de6da7
handlingevent|handlingactivity|A HandlingEvent represents a specific instance of a HandlingActivity being performed on a cargo, at a certain location and time.|f96d1a8d7e144c5c867c65c686de6da7
location|itinerary|The Itinerary is associated with one or more Locations representing the starting point, intermediate stops, and destination of the overall transportation journey.|f96d1a8d7e144c5c867c65c686de6da7
location|handlingevent|Each HandlingEvent within an Itinerary may also be associated with a specific Location where the handling activity is being performed.|f96d1a8d7e144c5c867c65c686de6da7
itinerary|legs|composition relationship between Itinerary and Legs|ae9319c9f99d44538f70b13864265d7b
itinerary|legs|contains relationship between Itinerary and list of legs|ae9319c9f99d44538f70b13864265d7b
leg|loadlocation|attribute relationship between Leg and LoadLocation|ae9319c9f99d44538f70b13864265d7b
handlingevent|location|attribute relationship between HandlingEvent and Location|ae9319c9f99d44538f70b13864265d7b
leg|unloadlocation|attribute relationship between Leg and UnloadLocation|ae9319c9f99d44538f70b13864265d7b
handlingevent|voyage|attribute relationship between HandlingEvent and Voyage|ae9319c9f99d44538f70b13864265d7b
leg|voyage|attribute relationship between Leg and Voyage|ae9319c9f99d44538f70b13864265d7b
handlingevent|isexpected|method relationship between HandlingEvent and boolean value returned by isExpected method|ae9319c9f99d44538f70b13864265d7b
leg|getinitialdeparturelocation|method relationship between Leg and Location returned by getInitialDepartureLocation method|ae9319c9f99d44538f70b13864265d7b
leg|getfinalarrivallocation|method relationship between Leg and Location returned by getFinalArrivalLocation method|ae9319c9f99d44538f70b13864265d7b
legs|itinerary|Legs is a property of Itinerary, as specified in the class hierarchy.|7e31b80d3ed342c7aea5b74e7f119aa1
legs|cargotracker|CargoTracker is the package containing the Legs class.|7e31b80d3ed342c7aea5b74e7f119aa1
legs|java|Java is the programming language used to implement the Legs class in Cargotracker.|7e31b80d3ed342c7aea5b74e7f119aa1
location.unknown|unknown|Location.UNKNOWN and Unknown are both constants representing unknown locations.|7e31b80d3ed342c7aea5b74e7f119aa1
legs|location|Each leg in an itinerary has a load location and an unload location, represented by the Location class.|7e31b80d3ed342c7aea5b74e7f119aa1
localdatetime|date|The final arrival date of a cargo is represented as a LocalDateTime object, which can be converted to a Date object if needed.|7e31b80d3ed342c7aea5b74e7f119aa1
legs|localdatetime|Each leg in an itinerary has a load time and an unload time, represented by the LocalDateTime class.|7e31b80d3ed342c7aea5b74e7f119aa1
legs|chronounit|The ChronoUnit class is used to measure time durations between legs in an itinerary.|7e31b80d3ed342c7aea5b74e7f119aa1
legs|localdatetime|The load time and unload time of each leg can be converted to the corresponding ChronoUnit duration for calculation purposes.|7e31b80d3ed342c7aea5b74e7f119aa1
itinerary|legs|Each itinerary consists of one or more legs, as represented in the Itinerary class.|7e31b80d3ed342c7aea5b74e7f119aa1
itinerary|equality|Two Itineraries are considered equal if they have identical sets of legs.|7e31b80d3ed342c7aea5b74e7f119aa1
leg|voyage|Leg is a part of Voyage|f6c3efc58eec4f969086ef46b2450d01
leg|load location|Leg has Load Location for loading cargo|f6c3efc58eec4f969086ef46b2450d01
leg|unload location|Leg has Unload Location for unloading cargo|f6c3efc58eec4f969086ef46b2450d01
leg|load time|Cargo is loaded onto Leg at Load Time|f6c3efc58eec4f969086ef46b2450d01
leg|unload time|Cargo is unloaded from Leg at Unload Time|f6c3efc58eec4f969086ef46b2450d01
leg|voyage|Leg belongs to a specific Voyage|d0e3748647194702a2ffc5d9d4b282a1
leg|loadlocation|Leg involves loading of goods at a particular Location|d0e3748647194702a2ffc5d9d4b282a1
leg|unloadlocation|Leg ends with unloading of goods at a specific Location|d0e3748647194702a2ffc5d9d4b282a1
leg|loadtime|Loading operation in Leg occurs at the specified time|d0e3748647194702a2ffc5d9d4b282a1
leg|unloadtime|Unloading operation in Leg takes place at the given time|d0e3748647194702a2ffc5d9d4b282a1
routespecification|location|hasOrigin or hasDestination|0625aad18ce74e03979de5874c2fd52d
routespecification|localdate|hasArrivalDeadline|0625aad18ce74e03979de5874c2fd52d
routespecification|location|A RouteSpecification has an origin and a destination, both of which are Locations.|c29fa61d8bc744da89d09358eb89cfd5
origin|location|The Origin is a specific Location.|c29fa61d8bc744da89d09358eb89cfd5
destination|location|The Destination is a specific Location.|c29fa61d8bc744da89d09358eb89cfd5
arrivaldeadline|localdate|The ArrivalDeadline is a specific LocalDate.|c29fa61d8bc744da89d09358eb89cfd5
routingstatus|routingstatus|both represent the status of routing for a cargo, with possible values NOT_ROUTED, ROUTED, and MISROUTED|da496683cc7b46cba1660c798df20959
routespecification|routespecification|both represent specific routes for transporting a cargo, defined by an origin, destination, and arrival deadline|da496683cc7b46cba1660c798df20959
trackingid|trackingid|both uniquely identify a particular cargo, automatically generated by the application|da496683cc7b46cba1660c798df20959
transportstatus|not_received|TransportStatus is an enum that represents the status of a cargo during transportation. One possible value for this enum is NOT_RECEIVED.|71a3f4a2ca4049099bd86a98931ba222
transportstatus|in_port|TransportStatus is an enum that represents the status of a cargo during transportation. Another possible value for this enum is IN_PORT.|71a3f4a2ca4049099bd86a98931ba222
transportstatus|onboard_carrier|TransportStatus is an enum that represents the status of a cargo during transportation. Yet another possible value for this enum is ONBOARD_CARRIER.|71a3f4a2ca4049099bd86a98931ba222
transportstatus|claimed|TransportStatus is an enum that represents the status of a cargo during transportation. One more possible value for this enum is CLAIMED.|71a3f4a2ca4049099bd86a98931ba222
transportstatus|unknown|TransportStatus is an enum that represents the status of a cargo during transportation. The last possible value for this enum is UNKNOWN.|71a3f4a2ca4049099bd86a98931ba222
org.eclipse.cargotracker.domain.model.cargo.transportstatus|org.eclipse.cargotracker.domain.model.handling.cannotcreatehandlingeventexception|The class org.eclipse.cargotracker.domain.model.cargo.TransportStatus is related to the exception class org.eclipse.cargotracker.domain.model.handling.CannotCreateHandlingEventException, possibly due to handling events not being able to be created for cargos with an unknown transportation status ( TransportStatus.UNKNOWN ).|71a3f4a2ca4049099bd86a98931ba222
org.eclipse.cargotracker.domain.model.handling.cannotcreatehandlingeventexception|transportstatus.unknown|The exception class org.eclipse.cargotracker.domain.model.handling.CannotCreateHandlingEventException is related to the enum value TransportStatus.UNKNOWN, possibly due to handling events not being able to be created for cargos with an unknown transportation status ( TransportStatus.UNKNOWN ).|71a3f4a2ca4049099bd86a98931ba222
org.eclipse.cargotracker.domain.model.handling.cannotcreatehandlingeventexception|org.eclipse.cargotracker.domain.model.cargo.transportstatus|The exception class org.eclipse.cargotracker.domain.model.handling.CannotCreateHandlingEventException is related to the class org.eclipse.cargotracker.domain.model.cargo.TransportStatus, possibly due to handling events not being able to be created for cargos with any of its possible transportation status values ( TransportStatus.NOT_RECEIVED, TransportStatus.IN_PORT, TransportStatus.ONBOARD_CARRIER, TransportStatus.CLAIMED, TransportStatus.UNKNOWN ).|71a3f4a2ca4049099bd86a98931ba222
org.eclipse.cargotracker.domain.model.handling.cannotcreatehandlingeventexception|org.eclipse.cargotracker.domain.model.cargo.transportstatus|The exception class org.eclipse.cargotracker.domain.model.handling.CannotCreateHandlingEventException is related to the class org.eclipse.cargotracker.domain.model.cargo.TransportStatus, possibly due to handling events not being able to be created for cargos with any of its possible transportation status values ( TransportStatus.NOT_RECEIVED, TransportStatus.IN_PORT, TransportStatus.ONBOARD_CARRIER, TransportStatus.CLAIMED, TransportStatus.UNKNOWN ).|71a3f4a2ca4049099bd86a98931ba222
cannotcreatehandlingeventexception|exception|is a special case exception that can occur during normal program execution. It is handled by the application to provide specific error handling for creating HandlingEvents from given parameters.|cbd7a939123f4f4fa7ffb08faa9ce9e0
handlingevent|model|is a class in the domain model package org.eclipse.cargotracker.domain.model.handling in the CargoTracker project.|cbd7a939123f4f4fa7ffb08faa9ce9e0
localdatetime|java.time.localdatetime|is a class used to represent local date-times without time zone or offset information, found in package java.time.|cbd7a939123f4f4fa7ffb08faa9ce9e0
chronounit|java.time.chrono|is an enum type defined in package java.time.chrono that provides methods for converting between different chronological units, such as days, weeks, and years.|cbd7a939123f4f4fa7ffb08faa9ce9e0
column|jakarta.persistence.column|is an annotation defined in package jakarta.persistence that is used to provide metadata for columns in a table, including the column's name and data type.|cbd7a939123f4f4fa7ffb08faa9ce9e0
enumtype|jakarta.persistence.enumtype|is an annotation defined in package jakarta.persistence that is used to specify how enum types are persisted, including whether they should be treated as separate columns or stored as string values.|cbd7a939123f4f4fa7ffb08faa9ce9e0
entity|jakarta.persistence.entity|is an annotation defined in package jakarta.persistence that is used to indicate that a class represents a persistent entity, and provides metadata for the entity's table, primary key, and other properties.|cbd7a939123f4f4fa7ffb08faa9ce9e0
generatedvalue|jakarta.persistence.generatedvalue|is an annotation defined in package jakarta.persistence that is used to generate the value of a primary key or a foreign key column, either by assigning it automatically or by using a database sequence.|cbd7a939123f4f4fa7ffb08faa9ce9e0
id|jakarta.persistence.id|is an annotation defined in package jakarta.persistence that is used to indicate that a field or method represents the primary key of a persistent entity.|cbd7a939123f4f4fa7ffb08faa9ce9e0
joincolumn|jakarta.persistence.joincolumn|is an annotation defined in package jakarta.persistence that is used to provide metadata for join columns, which are used to link tables in a many-to-one or one-to-many relationship.|cbd7a939123f4f4fa7ffb08faa9ce9e0
manytoone|jakarta.persistence.manytoone|is an annotation defined in package jakarta.persistence that is used to indicate a many-to-one relationship between two persistent entities.|cbd7a939123f4f4fa7ffb08faa9ce9e0
namedquery|jakarta.persistence.namedquery|is an annotation defined in package jakarta.persistence that is used to define a named query for searching for entities, using the JPQL (Java Persistence Query Language).|cbd7a939123f4f4fa7ffb08faa9ce9e0
notnull|javax.validation.constraints.notnull|is an annotation defined in package javax.validation.constraints that is used to indicate that a field or method must not be null.|cbd7a939123f4f4fa7ffb08faa9ce9e0
serializable|java.io.serializable|is an interface defined in package java.io that indicates that a class can be serialized and deserialized by the Java serialization mechanism.|cbd7a939123f4f4fa7ffb08faa9ce9e0
transient|jakarta.persistence.transient|is an annotation defined in package jakarta.persistence that is used to indicate that a field or method should not be persisted, but rather stored in memory.|cbd7a939123f4f4fa7ffb08faa9ce9e0
cargo|trackingid|In Cargo class, a TrackingId is associated for tracking purposes.|faa24cf0f2d04692991b61dbb7f09e7f
cargo|location|A Cargo can have an associated Location where it is currently present.|faa24cf0f2d04692991b61dbb7f09e7f
voyage|cargo|Multiple Cargos can be a part of a Voyage during transportation.|faa24cf0f2d04692991b61dbb7f09e7f
domainobjectutils|equalsbuilder|In DomainObjectUtils, an EqualsBuilder is used to implement deep equality for domain objects.|faa24cf0f2d04692991b61dbb7f09e7f
domainobjectutils|hashcodebuilder|Similarly, a HashCodeBuilder is utilized in DomainObjectUtils to generate hash codes for domain objects.|faa24cf0f2d04692991b61dbb7f09e7f
handlingevent|aggregate|HandlingEvent is the only member and consequently the root of the HandlingEvent aggregate.|8389bffcb5134b729bceee575c78b829
type|handlingevent|HandlingEvent's could contain information about a Type (LOAD or UNLOAD for Voyage events, RECEIVE, CLAIM, or CUSTOMS for other events).|8389bffcb5134b729bceee575c78b829
voyage|handlingevent|HandlingEvent's may contain information about a Voyage (if applicable) and the event type must be either LOAD or UNLOAD.|8389bffcb5134b729bceee575c78b829
location|handlingevent|HandlingEvents are associated with a specific Location at the time of completion.|8389bffcb5134b729bceee575c78b829
completiontime|handlingevent|The HandlingEvent's completionTime attribute represents the time stamp of the event's completion.|8389bffcb5134b729bceee575c78b829
handlingevent|cargo|HandlingEvent has a reference to Cargo through the cargo field.|21517b74a2de42618730d29ba0abfb47
handlingevent|localdatetime|HandlingEvent contains a LocalDateTime object for completionTime and registrationTime fields.|21517b74a2de42618730d29ba0abfb47
type|handlingevent|HandlingEvent is associated with Type through the type field.|21517b74a2de42618730d29ba0abfb47
location|handlingevent|HandlingEvent contains a Location object for the location field.|21517b74a2de42618730d29ba0abfb47
voyage|handlingevent|HandlingEvent is associated with Voyage through the voyage field, unless the event type prohibits voyages.|21517b74a2de42618730d29ba0abfb47
handlingevent|cargo|An instance of HandlingEvent is associated with a specific Cargo.|ec64738e4c424af4a2a38e2465d9a5f9
handlingevent|completiontime|The completion time of an instance of HandlingEvent is a LocalDateTime value.|ec64738e4c424af4a2a38e2465d9a5f9
handlingevent|registrationtime|The registration time of an instance of HandlingEvent is a LocalDateTime value.|ec64738e4c424af4a2a38e2465d9a5f9
handlingevent|type|An instance of HandlingEvent is associated with a specific Type.|ec64738e4c424af4a2a38e2465d9a5f9
handlingevent|location|An instance of HandlingEvent is associated with a specific Location.|ec64738e4c424af4a2a38e2465d9a5f9
type|prohibitsvoyage|A Type may or may not prohibit the use of Voyage.|ec64738e4c424af4a2a38e2465d9a5f9
type|requiresvoyage|A Type may or may not require the use of Voyage.|ec64738e4c424af4a2a38e2465d9a5f9
gettype|handlingevent|Is a type of HandlingEvent|015ec6faec6f41588ca9d2505a249055
getvoyage|handlingevent|Has a voyage associated with it (optional)|015ec6faec6f41588ca9d2505a249055
voyage|none|Is a possible value for the voyage field in HandlingEvent|015ec6faec6f41588ca9d2505a249055
getcompletiontime|handlingevent|Contains a completion time|015ec6faec6f41588ca9d2505a249055
getregistrationtime|handlingevent|Contains a registration time|015ec6faec6f41588ca9d2505a249055
location|getname|Provides the name of a location|015ec6faec6f41588ca9d2505a249055
getcargo|handlingevent|Carries cargo|015ec6faec6f41588ca9d2505a249055
type|none|Is a possible value for the type field in HandlingEvent|015ec6faec6f41588ca9d2505a249055
localdatetime|truncatedto|Can be truncated to a specific chrono unit (seconds)|015ec6faec6f41588ca9d2505a249055
handlingevent|o|precondition for handling event comparison|201e50a864624b20a16d2da16b4c968b
handlingevent|event|handling event being referred to in method|201e50a864624b20a16d2da16b4c968b
handlingevent|other|comparison of handling events based on cargo, voyage, completionTime, location, and type|201e50a864624b20a16d2da16b4c968b
cargo|handlingevent.cargo|handling event's cargo being referred to in method|201e50a864624b20a16d2da16b4c968b
voyage|handlingevent.voyage|handling event's voyage being referred to in method, if not null|201e50a864624b20a16d2da16b4c968b
completiontime|handlingevent.completiontime|handling event's completion time being compared in method|201e50a864624b20a16d2da16b4c968b
location|handlingevent.location|handling event's location being referred to in method|201e50a864624b20a16d2da16b4c968b
type|handlingevent.type|handling event's type being compared in method|201e50a864624b20a16d2da16b4c968b
handlingeventfactory|handlingevent|The class HandlingEventFactory is responsible for creating instances of the HandlingEvent class.|b306cbead91c4686a19baf88d630df98
handlingevent|type|The Type enum within the HandlingEvent class determines whether a voyage association is required or prohibited for specific event types.|b306cbead91c4686a19baf88d630df98
cargorepository|cargo|The CargoRepository class manages access to cargo data, while the Cargo class represents individual items being transported.|b306cbead91c4686a19baf88d630df98
trackingid|cargo|Each Cargo object is uniquely identified by a TrackingId.|b306cbead91c4686a19baf88d630df98
cargorepository|cargo|CargoRepository is a repository to handle Cargo entities.|a8b8391e5fa94915abbe4834a9f2c980
voyagerepository|voyage|VoyageRepository is a repository to handle Voyage entities.|a8b8391e5fa94915abbe4834a9f2c980
locationrepository|location|LocationRepository is a repository to handle Location entities.|a8b8391e5fa94915abbe4834a9f2c980
trackingid|cargo|A Cargo can be identified by its TrackingId.|a8b8391e5fa94915abbe4834a9f2c980
voyagenumber|voyage|A Voyage is identified by its VoyageNumber.|a8b8391e5fa94915abbe4834a9f2c980
unlocode|location|A Location can be represented by a unique UnLocode code.|a8b8391e5fa94915abbe4834a9f2c980
handlingeventrepository|handlingevent|The HandlingEventRepository provides an interface to store and retrieve HandlingEvents.|e75c0b2cafd2482a8a1ad06a6f522f85
trackingid|cargo|A TrackingId is associated with a specific Cargo through the findCargo method in the CargoServiceImpl class.|e75c0b2cafd2482a8a1ad06a6f522f85
locationrepository|location|The LocationRepository provides an interface to retrieve Locations using their UnLocode.|e75c0b2cafd2482a8a1ad06a6f522f85
voyagenumber|voyage|A VoyageNumber is associated with a specific Voyage through the findVoyage method in the CargoServiceImpl class.|e75c0b2cafd2482a8a1ad06a6f522f85
handlinghistory|cargo|The HandlingHistory class provides a way to retrieve a collection of HandlingEvents associated with a specific Cargo.|e75c0b2cafd2482a8a1ad06a6f522f85
handlinghistory|handlingevent|HandlingHistory contains a list of HandlingEvent objects.|a2f2cf8e5be749a08cd7482c80136b7d
handlinghistory|collection<handlingevent>|HandlingHistory is initialized with a Collection<HandlingEvent> argument in its constructor.|a2f2cf8e5be749a08cd7482c80136b7d
handlingevent|handlinghistory.empty|HandlingEvent is a null object pattern instance EMPTY belonging to HandlingHistory class.|a2f2cf8e5be749a08cd7482c80136b7d
handlinghistory|getallhandlingevents()|getAllHandlingEvents() method of HandlingHistory returns the list of handling events stored in it.|a2f2cf8e5be749a08cd7482c80136b7d
handlinghistory|getdistincteventsbycompletiontime()|getDistinctEventsByCompletionTime() method of HandlingHistory returns a distinct list (no duplicate registrations) of handling events ordered by completion time.|a2f2cf8e5be749a08cd7482c80136b7d
handlinghistory|getmostrecentlycompletedevent()|getMostRecentlyCompletedEvent() method of HandlingHistory returns the most recently completed event or null if delivery history is empty.|a2f2cf8e5be749a08cd7482c80136b7d
handlinghistory.empty|collection<handlingevent>|HandlingHistory.EMPTY argument passed to HandlingHistory constructor is a Collection<HandlingEvent> object.|a2f2cf8e5be749a08cd7482c80136b7d
handlinghistory|handlingevents|HandlingHistory's handlingEvents member variable stores a list of HandlingEvent objects.|a2f2cf8e5be749a08cd7482c80136b7d
distinctevents|null|relation between distinctEvents and null when distinctEvents is empty|7ad1b86afb434af692010c5e179f53d4
distinctevents|distinctevents.get(distinctevents.size()-1)|relation between distinctEvents and the last event in distinctEvents list|7ad1b86afb434af692010c5e179f53d4
handlinghistory|other|equality check between HandlingHistory objects using sameValueAs method|7ad1b86afb434af692010c5e179f53d4
handlinghistory|o|equality check between HandlingHistory object and another object using equals method|7ad1b86afb434af692010c5e179f53d4
handlingevents|null|relation between handlingEvents and null when there is no handling event list|7ad1b86afb434af692010c5e179f53d4
handlingevents|other.handlingevents|comparison of handling event lists using equals method|7ad1b86afb434af692010c5e179f53d4
trackingid|unknowncargoexception.trackingid|relation between TrackingId object and the tracking ID passed to UnknownCargoException constructor|7ad1b86afb434af692010c5e179f53d4
unknownlocationexception|unlocode|Exception is thrown when no location with a specific UN locode exists in the system.|ff5cc3d4686241eab9b66c1b5e658faa
unknownvoyageexception|voyagenumber|Exception is thrown when trying to register an event with an unknown carrier movement id, specifically for a voyage with that number.|ff5cc3d4686241eab9b66c1b5e658faa
location|unlocode|A location has a specific UN locode associated with it.|ff5cc3d4686241eab9b66c1b5e658faa
location|unlocode|A Location object has an associated UnLocode code.|60e9643c5e604df98a6d8289d959c5b1
location|name|Each Location object has a name, e.g. 'Stockholm'.|60e9643c5e604df98a6d8289d959c5b1
locationrepository|find|The LocationRepository interface provides a method to find a specific Location object by its UnLocode code.|60e9643c5e604df98a6d8289d959c5b1
locationrepository|findall|The LocationRepository interface also provides a method to retrieve a list of all available Location objects.|60e9643c5e604df98a6d8289d959c5b1
samplelocations|location object(s)|The SampleLocations class contains one or more predefined Location objects for test purposes.|60e9643c5e604df98a6d8289d959c5b1
un/locode|valid pattern for un/locode|A UN/LOCODE consists of a country code (two letters) and a location code (usually three letters, may contain numbers 2-9).|b96866b702e04bd2b370fe5e433302ad
un/locode|unece organization|UN/LOCODE is used in the context of UNECE organization for location coding.|b96866b702e04bd2b370fe5e433302ad
commons lang library|validate method|The Validate method from the Commons Lang library is used to validate the UN/LOCODE input.|b96866b702e04bd2b370fe5e433302ad
unlocode|voyage/carriermovement|The UnLocode object is associated with the CarrierMovement entity in Cargotracker's domain model for voyage management.|583a9b3b806c4585a09e2422abd74933
unlocode|location/location|The UnLocode object is related to the Location class in Cargotracker's location module through its getIdString() method, which concatenates and returns the country code and location code as a single string in uppercase.|583a9b3b806c4585a09e2422abd74933
carriermovement|location|CarrierMovement is associated with one or more Location objects through the departureLocation and arrivalLocation fields.|88a7809c779f4b8eaa5e0cca1f69a394
departurelocation|location|The departureLocation field of a CarrierMovement object refers to a specific Location object.|88a7809c779f4b8eaa5e0cca1f69a394
arrivallocation|location|The arrivalLocation field of a CarrierMovement object refers to a specific Location object.|88a7809c779f4b8eaa5e0cca1f69a394
departuretime|localdatetime|The departureTime field of a CarrierMovement object contains a specific LocalDateTime value.|88a7809c779f4b8eaa5e0cca1f69a394
arrivaltime|localdatetime|The arrivalTime field of a CarrierMovement object contains a specific LocalDateTime value.|88a7809c779f4b8eaa5e0cca1f69a394
carriermovement|departurelocation|CarrierMovement has a departureLocation|8b33bc7a7ac44984aebbb71eef7b0492
carriermovement|departuretime|CarrierMovement has a departureTime|8b33bc7a7ac44984aebbb71eef7b0492
carriermovement|arrivallocation|CarrierMovement has an arrivalLocation|8b33bc7a7ac44984aebbb71eef7b0492
carriermovement|arrivaltime|CarrierMovement has an arrivalTime|8b33bc7a7ac44984aebbb71eef7b0492
localdatetime|departuretime|CarrierMovement's departureTime is of type LocalDateTime|8b33bc7a7ac44984aebbb71eef7b0492
localdatetime|arrivaltime|CarrierMovement's arrivalTime is of type LocalDateTime|8b33bc7a7ac44984aebbb71eef7b0492
samplevoyages|org.eclipse.cargotracker.domain.model.voyage|"""SampleVoyages"" is a class that belongs to the package ""org.eclipse.cargotracker.domain.model.voyage"""|3a4f6e71453544439e923fb685a49ade
org.eclipse.cargotracker.domain.model|voyage|"""voyage"" is a sub-package of ""org.eclipse.cargotracker.domain.model"""|3a4f6e71453544439e923fb685a49ade
samplelocations|location|"""SampleLocations"" and ""Location"" are both classes that can be found in the same project."|3a4f6e71453544439e923fb685a49ade
localdatetime|java.time.localdatetime|"""LocalDateTime"" is a class from the package ""java.time"""|3a4f6e71453544439e923fb685a49ade
list|java.util.list|"""List"" is a Java interface that can be found in the package ""java.util"""|3a4f6e71453544439e923fb685a49ade
map|java.util.map|"""Map"" is a Java interface that can be found in the package ""java.util"""|3a4f6e71453544439e923fb685a49ade
field|java.lang.reflect.field|"""Field"" is a class from the package ""java.lang.reflect"""|3a4f6e71453544439e923fb685a49ade
node_1|node_2|edge|chunk_id|node_3
cm001|stockholm|CM001 is a voyage that starts from STOCKHOLM|446342eb50b14d2896bf4b8feac049a1|
cm001|hamburg|CM001 ends at HAMBURG|446342eb50b14d2896bf4b8feac049a1|
cm002|hamburg|CM002 starts from HAMBURG|446342eb50b14d2896bf4b8feac049a1|
cm002|hongkong|CM002 ends at HONGKONG|446342eb50b14d2896bf4b8feac049a1|
cm003|hongkong|CM003 starts from HONGKONG|446342eb50b14d2896bf4b8feac049a1|
cm003|newyork|CM003 ends at NEWYORK|446342eb50b14d2896bf4b8feac049a1|
cm004|newyork|CM004 starts from NEWYORK|446342eb50b14d2896bf4b8feac049a1|
cm004|chicago|CM004 ends at CHICAGO|446342eb50b14d2896bf4b8feac049a1|
cm005|chicago|CM005 starts from CHICAGO|446342eb50b14d2896bf4b8feac049a1|
cm005|hamburg|CM005 ends at HAMBURG|446342eb50b14d2896bf4b8feac049a1|
cm006|hamburg|CM006 starts from HAMBURG|446342eb50b14d2896bf4b8feac049a1|
cm006|hangzou|CM006 ends at HANGZOU|446342eb50b14d2896bf4b8feac049a1|
v100|hongkong|v100 starts from HONGKONG|446342eb50b14d2896bf4b8feac049a1|
v100|tokyo|v100 moves to TOKYO at a specific time|446342eb50b14d2896bf4b8feac049a1|
v100|newyork|v100 moves to NEWYORK at a specific time|446342eb50b14d2896bf4b8feac049a1|
v200|tokyo|v200 starts from TOKYO|446342eb50b14d2896bf4b8feac049a1|
v200|newyork|v200 moves to NEWYORK at a specific time|446342eb50b14d2896bf4b8feac049a1|
v200|chicago|v200 ends at CHICAGO|446342eb50b14d2896bf4b8feac049a1|
localdatetime.now().minusyears(1).plusmonths(3).plusdays(10)|localdatetime.now().minusyears(1).plusmonths(3).plusdays(14)|Relates to the departure time of a voyage, which is 10 days and 3 hours before the arrival time, which is 14 days and some hours before|7a67f2c51ec34cddb533b2025e293b8b|
localdatetime.now().minusyears(1).plusmonths(3).plusdays(14)|localdatetime.now().minusyears(1).plusmonths(3).plusdays(16)|Relates to the second location (STOCKHOLM) of a voyage, which is reached at 14 days and some hours before the third location (AMSTERDAM) is reached at 16 days and some hours before|7a67f2c51ec34cddb533b2025e293b8b|
localdatetime.now().minusyears(1).plusmonths(3).plusdays(14)|samplelocations.stockholm|Represents the location Stockholm that is visited during the voyage, which takes place at 14 days and some hours before|7a67f2c51ec34cddb533b2025e293b8b|
localdatetime.now().minusyears(1).plusmonths(3).plusdays(16)|samplelocations.amsterdam|Represents the location Amsterdam that is visited during the voyage, which takes place at 16 days and some hours before|7a67f2c51ec34cddb533b2025e293b8b|
localdatetime.now().minusyears(1).plusmonths(3).plusdays(8)|samplelocations.rotterdam|Represents the location Rotterdam that is visited during the voyage, which takes place at 8 days and some hours before|7a67f2c51ec34cddb533b2025e293b8b|
localdatetime.now().minusyears(1).plusmonths(3).plusdays(11)|samplelocations.hamburg|Represents the location Hamburg that is visited during the voyage, which takes place at 11 days and some hours before|7a67f2c51ec34cddb533b2025e293b8b|
localdatetime.now().minusyears(1).plusmonths(3).plusdays(14)|samplelocations.melbourne|Represents the location Melbourne that is visited during the voyage, which takes place at 14 days and some hours before|7a67f2c51ec34cddb533b2025e293b8b|
localdatetime.now().minusyears(1).plusmonths(3).plusdays(19)|samplelocations.tokyo|Represents the location Tokyo that is visited during the voyage, which takes place at 19 days and some hours before|7a67f2c51ec34cddb533b2025e293b8b|
v300|samplelocations.tokyo|Represents the final destination of the voyage v300, which is Tokyo|7a67f2c51ec34cddb533b2025e293b8b|
v400|samplelocations.hamburg|Represents the starting location of the voyage v400, which is Hamburg|7a67f2c51ec34cddb533b2025e293b8b|
voyagenumber|samplelocations.hongkong|The voyage with number '0100S' starts from the location 'Hongkong'|8fb087d2fc9a4a158e924a6a8c6f2e06|
samplelocations.hongkong|samplelocations.hangzou|The vessel travels from 'Hongkong' to 'Hangzou'|8fb087d2fc9a4a158e924a6a8c6f2e06|
samplelocations.hangzou|localdatetime.now().minusyears(1).plusmonths(10).plusdays(3).plushours(14).plusminutes(30)|The vessel reaches 'Hangzou' at the specified time|8fb087d2fc9a4a158e924a6a8c6f2e06|
localdatetime.now().minusyears(1).plusmonths(10).plusdays(4).plushours(21)|samplelocations.tokyo|The vessel travels from 'Hangzou' to 'Tokyo'|8fb087d2fc9a4a158e924a6a8c6f2e06|
localdatetime.now().minusyears(1).plusmonths(10).plusdays(6).plushours(6).plusminutes(15)|samplelocations.tokyo|The vessel reaches 'Tokyo' at the specified time|8fb087d2fc9a4a158e924a6a8c6f2e06|
samplelocations.melbourne|localdatetime.now().minusyears(1).plusmonths(10).plusdays(9).plushours(11)|The vessel travels from 'Tokyo' to 'Melbourne'|8fb087d2fc9a4a158e924a6a8c6f2e06|
localdatetime.now().minusyears(1).plusmonths(10).plusdays(12).plushours(11).plusminutes(30)|samplelocations.melbourne|The vessel reaches 'Melbourne' at the specified time|8fb087d2fc9a4a158e924a6a8c6f2e06|
localdatetime.now().minusyears(1).plusmonths(10).plusdays(14).plushours(12)|samplelocations.newyork|The vessel travels from 'Melbourne' to 'New York'|8fb087d2fc9a4a158e924a6a8c6f2e06|
localdatetime.now().minusyears(1).plusmonths(10)|samplelocations.newyork|The voyage with number '0100S' reaches its final destination 'New York' at the specified time|8fb087d2fc9a4a158e924a6a8c6f2e06|
new_york|chicago|movement between New York and Chicago, mentioned in the context|36f319d5cac143c98df64306de59c357|
chicago|dallas|movement between Chicago and Dallas, mentioned in the context|36f319d5cac143c98df64306de59c357|
dallas|hamburg|voyage from Dallas to Hamburg, mentioned in the context|36f319d5cac143c98df64306de59c357|
hamburg|stockholm|movement between Hamburg and Stockholm, mentioned in the context|36f319d5cac143c98df64306de59c357|
stockholm|helsinki|movement between Stockholm and Helsinki, mentioned in the context|36f319d5cac143c98df64306de59c357|
voyagenumber|0301s|is associated with voyage number|30b55b0c259b48eda14a228c8d0c8b52|
voyagenumber|0400s|are different voyage numbers|30b55b0c259b48eda14a228c8d0c8b52|
voyagenumber|samplelocations.dallas|starts from Dallas as per voyage number|30b55b0c259b48eda14a228c8d0c8b52|
voyagenumber|samplelocations.helsinki|reaches Helinski as per voyage number|30b55b0c259b48eda14a228c8d0c8b52|
samplelocations.dallas|localdatetime.now() .minusyears(1) .plusmonths(10) .plusdays(29) .plushours(3) .plusminutes(30)|is visited during the voyage from Dallas to Helinski|30b55b0c259b48eda14a228c8d0c8b52|
samplelocations.helsinki|localdatetime.now() .minusyears(1) .plusmonths(10) .plusdays(29)|is left from during the voyage from Dallas to Helinski|30b55b0c259b48eda14a228c8d0c8b52|
samplelocations.helsinki|localdatetime.now() .minusyears(1) .plusmonths(11) .plusdays(5)|is visited during the voyage from Helinski to Hongkong|30b55b0c259b48eda14a228c8d0c8b52|
samplelocations.rotterdam|localdatetime.now() .minusyears(1) .plusmonths(11) .plusdays(4)|is visited during the voyage from Helinski to Hongkong|30b55b0c259b48eda14a228c8d0c8b52|
samplelocations.shanghai|localdatetime.now() .minusyears(1) .plusmonths(11) .plusdays(10)|is visited during the voyage from Helinski to Hongkong|30b55b0c259b48eda14a228c8d0c8b52|
samplelocations.shanghai|localdatetime.now() .minusyears(1) .plusmonths(11) .plusdays(22)|is left from during the voyage from Helinski to Hongkong|30b55b0c259b48eda14a228c8d0c8b52|
samplelocations.hongkong|localdatetime.now().minusyears(1).plusmonths(11).plusdays(24)|is visited during the voyage from Helinski to Hongkong|30b55b0c259b48eda14a228c8d0c8b52|
samplelocations.hongkong|localdatetime.now() .minusyears(1) .plusmonths(11) .plusdays(28)|is left from during the voyage from Helinski to Hongkong|30b55b0c259b48eda14a228c8d0c8b52|
all|voyagenumber|ALL is a Map where the key is a VoyageNumber and the value is the corresponding Voyage.|0465b4cee9244c81aa45f80de6684436|
createvoyage|voyagenumber|createVoyage takes a String id, Location from, Location to as arguments and returns a new Voyage with the given VoyageNumber.|0465b4cee9244c81aa45f80de6684436|
getall|all|getAll returns a List containing all the Values in ALL.|0465b4cee9244c81aa45f80de6684436|
lookup|voyagenumber|lookup takes a VoyageNumber as an argument and returns the corresponding Voyage from ALL.|0465b4cee9244c81aa45f80de6684436|
schedule|carriermovement|A Schedule contains one or more CarrierMovements.|0465b4cee9244c81aa45f80de6684436|
schedule|voyage|A Voyage has a Schedule.|0465b4cee9244c81aa45f80de6684436|
schedule|voyage|A Schedule is a component of a Voyage in the context of cargo tracking. A Schedule represents the journey or transportation plan for a carrier to transport goods between two locations.|a67e7fcfbabf4e6fa9e19fe77b6fbfa9|
carriermovement|schedule|A List of CarrierMovements is associated with a Schedule in the context of cargo tracking. Each CarrierMovement represents the transportation of goods by a carrier between two locations during a specific time period as part of the Schedule.|a67e7fcfbabf4e6fa9e19fe77b6fbfa9|
list|schedule|The attribute carrierMovements of Schedule is of type List<CarrierMovement> in the context of cargo tracking. This list contains a collection of CarrierMovements for a specific Schedule.|a67e7fcfbabf4e6fa9e19fe77b6fbfa9|
voyage|entity|Voyage is a type of Entity as defined by the Java Persistence API.|4aa02c30a7fb4c27a5441176e0dac0ff|
voyage|serializable|Voyage implements the Serializable interface, which allows it to be serialized and deserialized.|4aa02c30a7fb4c27a5441176e0dac0ff|
long|id|The Voyage class has a Long type id field, which is annotated with @GeneratedValue for automatic generation.|4aa02c30a7fb4c27a5441176e0dac0ff|
voyagenumber|voyagenumber|The Voyage class contains a VoyageNumber object, which represents the unique identifier for the voyage.|4aa02c30a7fb4c27a5441176e0dac0ff|
schedule|schedule|The Voyage class also contains a Schedule object, which represents the schedule for the voyage.|4aa02c30a7fb4c27a5441176e0dac0ff|
voyagenumber|string|The VoyageNumber class is defined as a String type, representing the unique identifier for the voyage.|4aa02c30a7fb4c27a5441176e0dac0ff|
schedule|list<containermovement>|The Schedule class contains a List of ContainerMovements, which represents the movements of containers during the voyage.|4aa02c30a7fb4c27a5441176e0dac0ff|
localdatetime|departuredate|The VoyageNumber class also contains a LocalDateTime type departureDate field, representing the date and time of departure.|4aa02c30a7fb4c27a5441176e0dac0ff|
location|portofloading|The VoyageNumber class has a Location type portOfLoading field, representing the port from which the voyage is departing.|4aa02c30a7fb4c27a5441176e0dac0ff|
location|portofdischarge|The VoyageNumber class also contains a Location type portOfDischarge field, representing the port to which the voyage is discharging.|4aa02c30a7fb4c27a5441176e0dac0ff|
voyage|voyagenumber|Voyage is associated with its voyageNumber.|8dbfc9bedcb84dc9bb8217f181090d95|
voyage|schedule|Voyage contains its schedule.|8dbfc9bedcb84dc9bb8217f181090d95|
this.voyagenumber|voyagenumber|This object's voyageNumber is equivalent to the Voyage's voyageNumber.|8dbfc9bedcb84dc9bb8217f181090d95|
voyage|equals|Two Voyages are considered equal if they have the same voyageNumber.|8dbfc9bedcb84dc9bb8217f181090d95|
voyage|tostring|The string representation of a Voyage includes its voyageNumber.|8dbfc9bedcb84dc9bb8217f181090d95|
builder|voyagenumber|A Builder's voyageNumber is used to initialize the corresponding Voyage object.|8dbfc9bedcb84dc9bb8217f181090d95|
location|departurelocation|The departure location of a CarrierMovement is specified when building a Voyage.|8dbfc9bedcb84dc9bb8217f181090d95|
builder.carriermovement|arrivallocation|The arrival location of a CarrierMovement can be added to the corresponding Builder's list of movements.|8dbfc9bedcb84dc9bb8217f181090d95|
builder.carriermovement|departuretime|The departure time of a CarrierMovement can be added to the corresponding Builder's list of movements.|8dbfc9bedcb84dc9bb8217f181090d95|
builder.carriermovement|arrivaltime|The arrival time of a CarrierMovement can be added to the corresponding Builder's list of movements.|8dbfc9bedcb84dc9bb8217f181090d95|
voyagenumber|voyage|A voyage has a unique VoyageNumber assigned to it.|6f71b786fbe54e25ab482e41eff7b582|
voyagenumber|voyage|A VoyageNumber is associated with a specific voyage.|6f71b786fbe54e25ab482e41eff7b582|
abstractspecification|specification|is a specific type of Specification, as indicated by their shared interface.|78211de129a8475283dd2a103710fe10|
routingservice|voyagerepository|Both are interfaces used to interact with data in the cargo tracker domain model. VoyageRepository is used to find specific voyages, while RoutingService is used to find itineraries that satisfy a route specification.|78211de129a8475283dd2a103710fe10|
voyagenumber|voyage|A VoyageNumber is used to identify a specific voyage, which can be retrieved using the VoyageRepository interface.|78211de129a8475283dd2a103710fe10|
number|voyage|[{'type': 'hasAttribute'}, {'type': 'isA'}]|78211de129a8475283dd2a103710fe10|String
routingservice|routespecification|The RoutingService interface is used to find itineraries that satisfy a route specification, which is represented by the RouteSpecification class.|78211de129a8475283dd2a103710fe10|
itinerary|routespecification|[{'type': 'hasAttribute'}, {'type': 'returns'}]|78211de129a8475283dd2a103710fe10|List<Itinerary>
andspecification|abstractspecification|subclass relationship between AndSpecification and AbstractSpecification|bc2ec3caa2644c859a33a1abafff4bd1|
spec1|andspecification|association between spec1 and AndSpecification in the method signature of AndSpecification constructor|bc2ec3caa2644c859a33a1abafff4bd1|
spec2|andspecification|association between spec2 and AndSpecification in the method signature of AndSpecification constructor|bc2ec3caa2644c859a33a1abafff4bd1|
spec1|t|isSatisfiedBy relationship between spec1 and T in the isSatisfiedBy method of AbstractSpecification|bc2ec3caa2644c859a33a1abafff4bd1|
spec2|t|isSatisfiedBy relationship between spec2 and T in the isSatisfiedBy method of AbstractSpecification|bc2ec3caa2644c859a33a1abafff4bd1|
t|andspecification|composition relationship between T and AndSpecification in the isSatisfiedBy method of AndSpecification|bc2ec3caa2644c859a33a1abafff4bd1|
domainobjectutils|singleton|The code snippet 'private DomainObjectUtils() {}' indicates that this class is not intended to be instantiated and can potentially be replaced with a singleton using CDI.|b908309eaf5f49e5bf96e6735e66fc93|
nullsafe|domainobjectutils|This method 'nullSafe' is defined within the class 'DomainObjectUtils'|b908309eaf5f49e5bf96e6735e66fc93|
notspecification|specification|The constructor of 'NotSpecification' accepts a parameter of type 'Specification'. This indicates a relationship between 'NotSpecification' and 'Specification', where 'NotSpecification' is dependent on 'Specification'.|b908309eaf5f49e5bf96e6735e66fc93|
orspecification|specification|The constructor of 'OrSpecification' accepts a parameter of type 'List<Specification>'. This indicates a many-to-many relationship between 'OrSpecification' and 'Specification', where multiple instances of both classes can have relationships with each other.|b908309eaf5f49e5bf96e6735e66fc93|
orspecification|abstractspecification|OrSpecification is a subclass of AbstractSpecification|7c344f26bedc47e7acb56e345263a420|
orspecification|specification|OrSpecification is a type of Specification|7c344f26bedc47e7acb56e345263a420|
spec1|t|The argument T for the specification method is satisfied by both spec1 and spec2 in OrSpecification|7c344f26bedc47e7acb56e345263a420|
spec2|t|The argument T for the specification method is satisfied by both spec1 and spec2 in OrSpecification|7c344f26bedc47e7acb56e345263a420|
loggerproducer|extractloggername|is a method of LoggerProducer class|b8da156aaa1a4f8caf716d79299c27e8|
injectionpoint|getbean|is used in extractLoggerName method to retrieve the bean that invokes the LoggerProducer's produceLogger method|b8da156aaa1a4f8caf716d79299c27e8|
extractloggername|getmember|is accessed in extractLoggerName method to obtain the member being injected with the Logger instance produced by LoggerProducer class|b8da156aaa1a4f8caf716d79299c27e8|
cargohandledconsumer|cargoinspectionservice|depends on CargoInspectionService to handle cargo events|b8da156aaa1a4f8caf716d79299c27e8|
messagedriven|jmsexception|is used by MessageDriven annotation to handle JMS exceptions during message consumption|b8da156aaa1a4f8caf716d79299c27e8|
textmessage|messagelistener|extends Message interface and is consumed by MessageListener, which is implemented in CargoHandledConsumer class|b8da156aaa1a4f8caf716d79299c27e8|
level|logger|is used to specify logging levels for Logger instances in LoggerProducer class|b8da156aaa1a4f8caf716d79299c27e8|
cargohandledconsumer|messagelistener|CargoHandledConsumer is a class that implements the MessageListener interface, which allows it to consume JMS messages.|ef658f022c6848e7a9100bdd9cb3df90|
jakarta.jms.queue|destinationtype|The activationConfig property 'destinationType' is set to jakarta.jms.Queue, indicating that the consumer will receive messages from a queue.|ef658f022c6848e7a9100bdd9cb3df90|
java:app/jms/cargohandledqueue|destinationlookup|The activationConfig property 'destinationLookup' is set to java:app/jms/CargoHandledQueue, specifying the destination queue for this consumer.|ef658f022c6848e7a9100bdd9cb3df90|
textmessage|message|The message object in the onMessage() method is of type TextMessage, which contains a text payload.|ef658f022c6848e7a9100bdd9cb3df90|
trackingid|new trackingid(trackingidstring)|The cargo inspection service is called with the tracking ID extracted from the message payload.|ef658f022c6848e7a9100bdd9cb3df90|
cargoinspectionservice|cargoinspectionservice|The cargoInspectionService field is annotated with @Inject, indicating it will be automatically injected by the CDI container.|ef658f022c6848e7a9100bdd9cb3df90|
logger|logger|The Logger field is also annotated with @Inject, allowing us to log messages using Java's built-in logging framework.|ef658f022c6848e7a9100bdd9cb3df90|
deliveredcargoconsumer|logger|The DeliveredCargoConsumer class uses the Logger class to log message delivery information.|d32bf999905f42aaaf1167fd7490f196|
messagelistener|deliveredcargoconsumer|The DeliveredCargoConsumer class implements the MessageListener interface, which allows it to receive and process messages in a message-driven bean.|d32bf999905f42aaaf1167fd7490f196|
jakarta.ejb.messagedriven|deliveredcargoconsumer|The DeliveredCargoConsumer class is annotated with the @MessageDriven annotation, which specifies that it is a message-driven bean.|d32bf999905f42aaaf1167fd7490f196|
jakarta.jms.queue|deliveredcargoconsumer|The DeliveredCargoConsumer class is configured to listen for messages on a JMS queue using the @ActivationConfigProperty annotation.|d32bf999905f42aaaf1167fd7490f196|
java:app/jms/deliveredcargoqueue|deliveredcargoconsumer|The DeliveredCargoConsumer class is configured to listen for messages on the 'DeliveredCargoQueue' queue using the @ActivationConfigProperty annotation.|d32bf999905f42aaaf1167fd7490f196|
handlingeventregistrationattemptconsumer|objectmessage|The HandlingEventRegistrationAttemptConsumer class receives handling event registration attempts in the form of ObjectMessages.|d32bf999905f42aaaf1167fd7490f196|
jakarta.ejb.messagedriven|handlingeventregistrationattemptconsumer|The HandlingEventRegistrationAttemptConsumer class is annotated with the @MessageDriven annotation, which specifies that it is a message-driven bean.|d32bf999905f42aaaf1167fd7490f196|
jakarta.jms.queue|handlingeventregistrationattemptconsumer|The HandlingEventRegistrationAttemptConsumer class is configured to listen for messages on a JMS queue using the @ActivationConfigProperty annotation.|d32bf999905f42aaaf1167fd7490f196|
java:app/jms/handlingeventregistrationqueue|handlingeventregistrationattemptconsumer|The HandlingEventRegistrationAttemptConsumer class is configured to listen for messages on the 'HandlingEventRegistrationQueue' queue using the @ActivationConfigProperty annotation.|d32bf999905f42aaaf1167fd7490f196|
handlingeventservice|handlingeventregistrationattemptconsumer|The HandlingEventRegistrationAttemptConsumer class uses the HandlingEventService to process handling event registration attempts.|d32bf999905f42aaaf1167fd7490f196|
cannotcreatehandlingeventexception|handlingeventservice|The HandlingEventService can throw a CannotCreateHandlingEventException when trying to create a new handling event.|d32bf999905f42aaaf1167fd7490f196|
handlingeventregistrationattemptconsumer|messagelistener|implements|3bc4986b9c874e38ad4c5a26ac660f40|
handlingeventservice|handlingeventservice|assignment|3bc4986b9c874e38ad4c5a26ac660f40|
objectmessage|message|variable|3bc4986b9c874e38ad4c5a26ac660f40|
handlingeventregistrationattempt|attempt|variable|3bc4986b9c874e38ad4c5a26ac660f40|
jmsapplicationevents|jmsapplicationevents.java|sourceFile|3bc4986b9c874e38ad4c5a26ac660f40|
org|cargotracker|package|3bc4986b9c874e38ad4c5a26ac660f40|
import||keyword|3bc4986b9c874e38ad4c5a26ac660f40|
org.eclipse.cargotracker.domain.model.handling|cannotcreatehandlingeventexception|import|3bc4986b9c874e38ad4c5a26ac660f40|
org.eclipse.cargotracker.interfaces.handling|handlingeventregistrationattempt|import|3bc4986b9c874e38ad4c5a26ac660f40|
activationconfigproperty||keyword|3bc4986b9c874e38ad4c5a26ac660f40|
@messagedriven||annotation|3bc4986b9c874e38ad4c5a26ac660f40|
@activationconfigproperty||annotation|3bc4986b9c874e38ad4c5a26ac660f40|
jmsapplicationevents|applicationevents|JmsApplicationEvents is an implementation of the ApplicationEvents interface, which allows event publishing and subscribing in the CargoTracker application. This interface handles events related to cargo handling, delivery, and misdirection.|a5fca5d8cd354dedb641070cea540c1b|
jmscontext|jmscontext|JMSContext is a resource provided by the Java Message Service (JMS) API that provides access to JMS resources such as connections, sessions, and message producers and consumers. It allows sending and receiving messages using various messaging models like point-to-point or publish-subscribe.|a5fca5d8cd354dedb641070cea540c1b|
destination|cargohandledqueue|A Destination is a named entity that specifies the location where messages are sent or received using the JMS messaging model. In this context, cargoHandledQueue is a specific destination used to send messages related to cargo handling.|a5fca5d8cd354dedb641070cea540c1b|
destination|misdirectedcargoqueue|Similar to cargoHandledQueue, misdirectedCargoQueue is a specific destination used to send messages related to misdirected cargos.|a5fca5d8cd354dedb641070cea540c1b|
destination|deliveredcargoqueue|Similar to cargoHandledQueue and misdirectedCargoQueue, deliveredCargoQueue is a specific destination used to send messages related to delivered cargos.|a5fca5d8cd354dedb641070cea540c1b|
destination|handlingeventregistrationattemptqueue|This queue is used for registering handling event registration attempts, which allows entities to register for handling events. This helps in tracking the history of handling events.|a5fca5d8cd354dedb641070cea540c1b|
cargo|cargohandledqueue|Cargos are handled during cargo transportation, which can result in them being handled, misdirected, or delivered. Cargos sent to the cargoHandledQueue represent cargo handling events.|a5fca5d8cd354dedb641070cea540c1b|
handlingeventregistrationattempt|handlingeventregistrationattemptqueue|HandlingEventRegistrationAttempt is an interface provided by CargoTracker that allows entities to register for handling events. The messages sent to the handlingEventRegistrationAttemptQueue represent registration attempts.|a5fca5d8cd354dedb641070cea540c1b|
receivedhandlingeventregistrationattempt|handlingeventqueue|The method receivedHandlingEventRegistrationAttempt is called to send a HandlingEventRegistrationAttempt object to the handlingEventQueue using a JMS producer.|87e886e108be48fba4111d92f19c0000|
logger|cargo|In the cargoWasHandled method, the logger is used to log information about the handled cargo.|87e886e108be48fba4111d92f19c0000|
cargo|handlingeventqueue|The handled cargo's trackingId is sent to the handlingEventQueue using a JMS producer in the cargoWasHandled method.|87e886e108be48fba4111d92f19c0000|
cargo|misdirectedcargoqueue|The misdirected cargo's trackingId is sent to the misdirectedCargoQueue using a JMS producer in the cargoWasMisdirected method.|87e886e108be48fba4111d92f19c0000|
logger|cargo|In the cargoWasMisdirected method, the logger is used to log information about the misdirected cargo.|87e886e108be48fba4111d92f19c0000|
jmscontext|handlingeventqueue|The handlingEventRegistrationAttempt object is sent to the handlingEventQueue using a JMS producer in the receivedHandlingEventRegistrationAttempt method.|87e886e108be48fba4111d92f19c0000|
logger|cargo|In the cargoHasArrived method, the logger is used to log information about the arrived cargo.|87e886e108be48fba4111d92f19c0000|
jmscontext|deliveredcargoqueue|The arrived cargo's trackingId is sent to the deliveredCargoQueue using a JMS producer in the cargoHasArrived method.|87e886e108be48fba4111d92f19c0000|
misdirectedcargoconsumer|misdirectedcargoqueue|The MisdirectedCargoConsumer listens to messages from the MisdirectedCargoQueue.|79f593e988974884b4584e0eb74e290f|
rejectedregistrationattemptsconsumer|jms/rejectedregistrationattemptsqueue|The RejectedRegistrationAttemptsConsumer listens to messages from the jms/RejectedRegistrationAttemptsQueue.|79f593e988974884b4584e0eb74e290f|
misdirectedcargoconsumer|message|The MisdirectedCargoConsumer receives a Message with a tracking ID from the MisdirectedCargoQueue.|79f593e988974884b4584e0eb74e290f|
logger|level.info|The Logger is used to log messages at Level.INFO in the MisdirectedCargoConsumer.|79f593e988974884b4584e0eb74e290f|
messagelistener|misdirectedcargoconsumer|The MisdirectedCargoConsumer implements the MessageListener interface.|79f593e988974884b4584e0eb74e290f|
logger|level.warning|The Logger is used to log messages at Level.WARNING in the RejectedRegistrationAttemptsConsumer when processing a message fails.|79f593e988974884b4584e0eb74e290f|
messagedriven|misdirectedcargoconsumer|The MisdirectedCargoConsumer is annotated with the @MessageDriven annotation to define a message-driven bean.|79f593e988974884b4584e0eb74e290f|
activationconfigproperty|destinationlookup|The @ActivationConfigProperty annotation is used to specify the destinationLookup property for the MisdirectedCargoConsumer.|79f593e988974884b4584e0eb74e290f|
activationconfigproperty|destinationtype|The @ActivationConfigProperty annotation is used to specify the destinationType property for the MisdirectedCargoConsumer.|79f593e988974884b4584e0eb74e290f|
jakarta.ejb|messagedriven|The MessageDriven interface is defined in the jakarta.ejb package.|79f593e988974884b4584e0eb74e290f|
logger|level|The Level and Logger classes are used for logging in Java.|79f593e988974884b4584e0eb74e290f|
cargoupdated|cargo|The CargoUpdated event is fired asynchronously when a cargo is stored, and the cargo is passed as an argument to this event.|c4125bbff5364d45b0a785df3b640d8c|
jpacargorepository|entitymanager|The JpaCargoRepository class has a field named entityManager of type EntityManager, which is used to interact with the database and retrieve or store cargo objects.|c4125bbff5364d45b0a785df3b640d8c|
entitymanager|namedquery|The EntityManager object provides access to named queries, such as 'Cargo.findByTrackingId' and 'Cargo.findAll', which can be used to efficiently retrieve cargo objects based on specific criteria.|c4125bbff5364d45b0a785df3b640d8c|
namedquery|cargo|The named queries 'Cargo.findByTrackingId' and 'Cargo.findAll' are defined to retrieve cargo objects based on their tracking ID or all cargo objects, respectively.|c4125bbff5364d45b0a785df3b640d8c|
legs|cargo|Each cargo object has a list of legs, which represent the different stages and transportation modes that the cargo goes through during its journey.|c4125bbff5364d45b0a785df3b640d8c|
legs|entitymanager|The Legs class is persisted using the EntityManager object to save them into the database.|c4125bbff5364d45b0a785df3b640d8c|
trackingid|cargo|Each cargo object has a unique tracking ID that can be used to identify and retrieve it from the database or other systems.|c4125bbff5364d45b0a785df3b640d8c|
logger|jpacargorepository|The Logger class is used within the JpaCargoRepository class to log informational messages about certain events, such as finding a non-existent cargo tracking ID.|c4125bbff5364d45b0a785df3b640d8c|
handlingeventrepository|jpahandlingeventrepository|is a specific implementation of HandlingEventRepository using Java Persistence API (JPA) for handling events in CargoTracker.|4017dba3c2f646b5a0d39767de87cfdc|
handlingeventrepository|handlingevent|is an interface for storing and retrieving handling events in CargoTracker. JpaHandlingEventRepository implements this interface using JPA.|4017dba3c2f646b5a0d39767de87cfdc|
trackingid|cargo|is a unique identifier for a specific cargo being tracked in CargoTracker. It is passed to the nextTrackingId() method of this class to generate new tracking IDs.|4017dba3c2f646b5a0d39767de87cfdc|
jpahandlingeventrepository|entitymanager|is a managed persistent context provided by JPA for interacting with persistent objects, including HandlingEvents and TrackingIDs in this class.|4017dba3c2f646b5a0d39767de87cfdc|
jpahandlingeventrepository|persistencecontext|is an annotation used by CDI to inject the EntityManager into managed beans, such as JpaHandlingEventRepository in this class.|4017dba3c2f646b5a0d39767de87cfdc|
handlinghistory|handlingevent|is a collection of handling events associated with a specific cargo, retrieved using the findByTrackingId() method of JpaHandlingEventRepository in this class.|4017dba3c2f646b5a0d39767de87cfdc|
cargoupdated.fireasync(cargo);|store(handlingevent event)|is a method for storing new handling events associated with a specific cargo using the EntityManager in JpaHandlingEventRepository in this class.|4017dba3c2f646b5a0d39767de87cfdc|
trackingid|uuid.randomuuid().tostring().touppercase();|is a method for generating new unique tracking IDs based on UUIDs, which are then truncated using the substring() method in this class.|4017dba3c2f646b5a0d39767de87cfdc|
jpalocationrepository|locationrepository|inherits from|f70b73f1981047f994300c1e3a5a0155|
jpalocationrepository|serializable|implements|f70b73f1981047f994300c1e3a5a0155|
entitymanager|entitymanager|member variable|f70b73f1981047f994300c1e3a5a0155|
location|location|class name|f70b73f1981047f994300c1e3a5a0155|
locationrepository|locationrepository|interface name|f70b73f1981047f994300c1e3a5a0155|
unlocode|unlocode|member variable|f70b73f1981047f994300c1e3a5a0155|
location|location|member variable|f70b73f1981047f994300c1e3a5a0155|
namedquery|createnamedquery|method name|f70b73f1981047f994300c1e3a5a0155|
entitymanager|createnamedquery|member function|f70b73f1981047f994300c1e3a5a0155|
location|findbyunlocode|static method name|f70b73f1981047f994300c1e3a5a0155|
locationrepository|jpalocationrepository|class implements interface|f70b73f1981047f994300c1e3a5a0155|
jpavoyagerepository|applicationscoped|implements the ApplicationScoped interface, which is a context qualifier that specifies that an object should be visible to all clients and components in an application.|4e02dcd3ebee4c12bac56caa7f7033e9|
voyagerepository|serializable|implements the Serializable interface, which is used for converting Java objects into a binary representation that can be transmitted over a network or stored in a file.|4e02dcd3ebee4c12bac56caa7f7033e9|
entitymanager|persistencecontext|the @PersistenceContext annotation is used to obtain the EntityManager from the PersistenceContext, which is responsible for managing persistent entities within the scope of a persistence unit.|4e02dcd3ebee4c12bac56caa7f7033e9|
voyagenumber|voyage|the VoyageNumber class represents a unique identifier for a voyage, and the Voyage class represents a persistent entity that contains the details of the voyage. The 'find' method in the JpaVoyageRepository interface is used to retrieve a specific Voyage instance based on its VoyageNumber.|4e02dcd3ebee4c12bac56caa7f7033e9|
externalroutingservice|stateless|the @Stateless annotation is used to define the business logic for the ExternalRoutingService class, which is stateless and can be invoked from multiple threads concurrently.|4e02dcd3ebee4c12bac56caa7f7033e9|
clientbuilder|webtarget|the ClientBuilder class provides a fluent API for creating HTTP clients, while the WebTarget class is used to create a specific resource or service target for making requests.|4e02dcd3ebee4c12bac56caa7f7033e9|
externalroutingservice|stateless|is a type of class in Jakarta EE (formerly known as Java EE) that is designed to have state less operations and methods, making it more suitable for multi-threaded environments.|da5c5844f7c24b2db1b8a1b38530a981|
externalroutingservice|graphtraversalurl|is an environment resource injection mechanism used to retrieve configuration properties in Jakarta EE applications. It is a centralized way of managing configuration data, making it easier to manage and maintain.|da5c5844f7c24b2db1b8a1b38530a981|
externalroutingservice|graphtraversalresource|is a reference to a specific URL or endpoint in the RESTful web service client, which is used for sending HTTP requests to the server and receiving HTTP responses from it. It simplifies the process of making repeated requests to the same endpoint.|da5c5844f7c24b2db1b8a1b38530a981|
locationrepository|location|is a domain model entity that represents a place or geographic point, which can be associated with various properties such as name, address, and coordinates. The LocationRepository is used to interact with this entity and retrieve related information.|da5c5844f7c24b2db1b8a1b38530a981|
locationrepository|unlocode|is a globally unique identifier assigned to locations by the International Maritime Organization (IMO), used for identifying cargo shipments and containers. The LocationRepository can provide access to these identifiers through this entity.|da5c5844f7c24b2db1b8a1b38530a981|
voyagerepository|voyagenumber|is a unique identifier assigned to each voyage, which is used for tracking the shipment of cargo. The VoyageRepository provides access to this entity and related information.|da5c5844f7c24b2db1b8a1b38530a981|
routingservice|locationrepository|is a collaborative dependency between this service and the LocationRepository, which is used for obtaining location-related information during routing operations.|da5c5844f7c24b2db1b8a1b38530a981|
routingservice|voyagerepository|is another collaborative dependency between this service and the VoyageRepository, used for accessing voyage-specific data during routing operations.|da5c5844f7c24b2db1b8a1b38530a981|
fetchroutesforspecification|routespecification|method used to retrieve routes based on a specification|ebc9156acc15442ea6a4cf6ac57532ae|
origin|locationrepository|repository used to access origin location information|ebc9156acc15442ea6a4cf6ac57532ae|
destination|locationrepository|repository used to access destination location information|ebc9156acc15442ea6a4cf6ac57532ae|
graphtraversalresource|clientbuilder|library used for graph traversals|ebc9156acc15442ea6a4cf6ac57532ae|
origin|destination|points of departure and arrival for the route|ebc9156acc15442ea6a4cf6ac57532ae|
routespecification|locationrepository|repository used to access location information during validation of RouteSpecification against retrieved itineraries|ebc9156acc15442ea6a4cf6ac57532ae|
locationrepository|voyagerepository|association between location and voyage information|ebc9156acc15442ea6a4cf6ac57532ae|
transitpath|itinerary|conversion between external API's response format and application's domain model|ebc9156acc15442ea6a4cf6ac57532ae|
location|coordinatesfactory|The Location class is used to represent locations in the context, while CoordinatesFactory is a factory that produces coordinates for those locations.|2cb0fb6798cd4f5190a3597699a74c8a|
location|unlocode|Each Location object has an associated UnLocode code, which is used to identify the location in various contexts.|2cb0fb6798cd4f5190a3597699a74c8a|
location|dallas|The DALLAS constant represents a specific Location object, which can be referenced by name in the code.|2cb0fb6798cd4f5190a3597699a74c8a|
location|gothenburg|Similarly, GOTHENBURG and other constants represent specific Location objects.|2cb0fb6798cd4f5190a3597699a74c8a|
location|hamburg||2cb0fb6798cd4f5190a3597699a74c8a|
location|hangzou||2cb0fb6798cd4f5190a3597699a74c8a|
location|helsinki||2cb0fb6798cd4f5190a3597699a74c8a|
location|hongkong||2cb0fb6798cd4f5190a3597699a74c8a|
location|melbourne||2cb0fb6798cd4f5190a3597699a74c8a|
location|newyork||2cb0fb6798cd4f5190a3597699a74c8a|
location|rotterdam||2cb0fb6798cd4f5190a3597699a74c8a|
location|shanghai||2cb0fb6798cd4f5190a3597699a74c8a|
location|stockholm||2cb0fb6798cd4f5190a3597699a74c8a|
location|tokyo||2cb0fb6798cd4f5190a3597699a74c8a|
coordinates_map|map|COORDINATES_MAP is a Map containing the COORDINATES for different locations represented by UNLocode.|cc9675860e3b47fba43955c581caa604|
find|coordinates_map|The find() method returns the COORDINATES corresponding to a given LOCATION or UNLocode from the COORDINATES_MAP.|cc9675860e3b47fba43955c581caa604|
location|find|A Location can be identified by its UNLocode and the find() method is used to retrieve its corresponding COORDINATES from the COORDINATES_MAP.|cc9675860e3b47fba43955c581caa604|
unlocode|find|A UnLocode is a unique identifier assigned to different locations and the find() method can be used to retrieve its corresponding COORDINATES from the COORDINATES_MAP.|cc9675860e3b47fba43955c581caa604|
string|find|A String containing the UNLocode is passed as an argument to the find() method to retrieve its corresponding COORDINATES from the COORDINATES_MAP.|cc9675860e3b47fba43955c581caa604|
node_1|node_2|edge|chunk_id|node_3|node_4|edge_1
find|coordinates_map|is a method in the given class which returns a Coordinates object corresponding to the UnLocode provided.|0f3d227cb6b74a6a93e4b37a49da50c8|||
map|coordinates_map|COORDINATES_MAP is a variable of type Map, which contains Coordinates objects for various UnLocodes.|0f3d227cb6b74a6a93e4b37a49da50c8|||
string|unlocode|is a parameter passed to the find method, which identifies a specific location.|0f3d227cb6b74a6a93e4b37a49da50c8|||
coordinates|return value of find method|is the object returned by the find method for a given UnLocode.|0f3d227cb6b74a6a93e4b37a49da50c8|||
static|class initialization block|is used to initialize the COORDINATES_MAP variable in the static context.|0f3d227cb6b74a6a93e4b37a49da50c8|||
hashmap|map|map is a variable of type HashMap which is used to store Coordinates objects for different UnLocodes.|0f3d227cb6b74a6a93e4b37a49da50c8|||
getunlocode|hongkong|is a method in an inner class called 'Location' which returns the UnLocode string for that location.|0f3d227cb6b74a6a93e4b37a49da50c8|||
latitude|new coordinates(22, 114)|is a constructor call to create a Coordinates object with latitude and longitude values corresponding to Hong Kong.|0f3d227cb6b74a6a93e4b37a49da50c8|||
longitude|new coordinates(22, 114)|is also a constructor call to create a Coordinates object with latitude and longitude values corresponding to Hong Kong.|0f3d227cb6b74a6a93e4b37a49da50c8|||
coordinates|new coordinates(...)|is a constructor call to create a new instance of the Coordinates class.|0f3d227cb6b74a6a93e4b37a49da50c8|||
double|latitude|is a variable within the Coordinates class which stores latitudinal coordinates.|0f3d227cb6b74a6a93e4b37a49da50c8|||
double|longitude|is another variable within the Coordinates class which stores longitudinal coordinates.|0f3d227cb6b74a6a93e4b37a49da50c8|||
bookingservicefacade|facade|interface for shielding the domain layer from UI and remote communication concerns|751e04e9787643f986827b4f675b1939|||
facesconfiguration|jakarta faces configuration|class for configuring Jakarta Faces components and behavior|751e04e9787643f986827b4f675b1939|||
localdate|java.time.localdate|Java class for representing a date without time or time zone information|751e04e9787643f986827b4f675b1939|||
string|java.lang.string|Java class for representing character sequences|751e04e9787643f986827b4f675b1939|||
list|java.util.list|Java interface for a collection that can contain duplicates|751e04e9787643f986827b4f675b1939|||
location|dto.location|data transfer object (DTO) class for representing geographical locations|751e04e9787643f986827b4f675b1939|||
cargostatus|dto.cargostatus|DTO class for representing the status of a cargo|751e04e9787643f986827b4f675b1939|||
routecandidate|dto.routecandidate|DTO class for representing possible routes for a cargo|751e04e9787643f986827b4f675b1939|||
cargoroute|dto.cargoroute|DTO class for representing the complete route taken by a cargo|751e04e9787643f986827b4f675b1939|||
cargoroute|location|Origin of the cargo is a Location specified in CargoRoute class.|7608462d8ac24511b31c802f517b0a8e|||
cargoroute|finaldestination|Final destination of the cargo is a FinalDestination specified in CargoRoute class.|7608462d8ac24511b31c802f517b0a8e|||
cargoroute|list<leg>|CargoRoute contains a list of Legs representing the route taken by the cargo.|7608462d8ac24511b31c802f517b0a8e|||
location|finaldestination|A FinalDestination is a specific type of Location where the cargo will be delivered.|7608462d8ac24511b31c802f517b0a8e|||
list<routecandidate>|list<location>|The method requestPossibleRoutesForCargo() returns a list of RouteCandidates which contain a list of possible Locations for the cargo to be transported.|7608462d8ac24511b31c802f517b0a8e|||
string|localdate|The method changeDeadline() accepts a tracking ID and an arrival Deadline (represented by a LocalDate object).|7608462d8ac24511b31c802f517b0a8e|||
string|list<string>|The methods listAllTrackingIds() and listAllCargos() return lists of tracking IDs and cargo routes respectively.|7608462d8ac24511b31c802f517b0a8e|||
trackingid|string|"The variable ""trackingId"" is assigned a value of type ""String"""|bd6029dc35c24892a659ee8aa522878d|||
origin|location|"The variable ""origin"" is assigned a value of type ""Location"""|bd6029dc35c24892a659ee8aa522878d|||
finaldestination|location|"The variable ""finalDestination"" is assigned a value of type ""Location"""|bd6029dc35c24892a659ee8aa522878d|||
arrivaldeadline|string|"The variable ""arrivalDeadline"" is assigned a value of type ""String"""|bd6029dc35c24892a659ee8aa522878d|||
misrouted|boolean|"The variable ""misrouted"" is assigned a boolean value"|bd6029dc35c24892a659ee8aa522878d|||
claimed|boolean|"The variable ""claimed"" is assigned a boolean value"|bd6029dc35c24892a659ee8aa522878d|||
lastknownlocation|location|"The variable ""lastKnownLocation"" is assigned a value of type ""Location"""|bd6029dc35c24892a659ee8aa522878d|||
cargostatus|trackingid|CargoStatus object contains the trackingId as one of its attributes|bd3e82dc11104490b3aa1a2abacfa503|||
cargostatus|destination|CargoStatus object contains the destination as one of its attributes|bd3e82dc11104490b3aa1a2abacfa503|||
cargostatus|statustext|CargoStatus object contains the statusText as one of its attributes|bd3e82dc11104490b3aa1a2abacfa503|||
cargostatus|misdirected|CargoStatus object contains a boolean flag called misdirected to indicate whether cargo is misdirected or not|bd3e82dc11104490b3aa1a2abacfa503|||
cargostatus|eta|CargoStatus object contains the eta (expected time of arrival) as one of its attributes|bd3e82dc11104490b3aa1a2abacfa503|||
cargostatus|nextexpectedactivity|CargoStatus object contains a string called nextExpectedActivity that indicates the next expected activity for cargo|bd3e82dc11104490b3aa1a2abacfa503|||
cargostatus|handlingevents|CargoStatus object also contains a list of TrackingEvents called handlingEvents, which contain details about the various handling events occurred during the journey|bd3e82dc11104490b3aa1a2abacfa503|||
trackingevents|handlingevents|Each CargoStatus object contains a list of TrackingEvents called handlingEvents, which are the individual handling events that occurred during the journey of cargo|bd3e82dc11104490b3aa1a2abacfa503|||
trackingevents|eventcode|Each TrackingEvent object contains an eventCode as one of its attributes, which is a unique code assigned to that specific handling event|bd3e82dc11104490b3aa1a2abacfa503|||
trackingevents|eventdate|Each TrackingEvent object also contains the date and time when the handling event occurred as an attribute called eventDate|bd3e82dc11104490b3aa1a2abacfa503|||
trackingevents|eventlocation|Each TrackingEvent object also contains the location where the handling event occurred, which is stored in a string variable called eventLocation|bd3e82dc11104490b3aa1a2abacfa503|||
routecandidate|legs|RouteCandidate contains a list of Leg objects|8173343fb0cb44fe8479ac4f14090642|||
leg|name|Each Leg object has a name attribute|8173343fb0cb44fe8479ac4f14090642|||
leg|unlocode|Some Leg objects also have an unLocode attribute, as seen in the first code snippet|8173343fb0cb44fe8479ac4f14090642|||
routecandidate|trackingevents|A RouteCandidate object is associated with a list of TrackingEvents objects, as described in the third code snippet|8173343fb0cb44fe8479ac4f14090642|||
defaultbookingservicefacade|bookingservicefacade|is a type of facade that provides default implementation for BookingService interface.|dde9fa5b414e48a993f25b666b736389|||
bookingservicefacade|bookingservice|has an instance of BookingService interface for handling booking related operations.|dde9fa5b414e48a993f25b666b736389|||
bookingservicefacade|cargorepository|depends on CargoRepository to access cargo-related data.|dde9fa5b414e48a993f25b666b736389|||
cargorepository|cargo|manages Cargo entities and their attributes such as description, trackingId, itinerary, etc.|dde9fa5b414e48a993f25b666b736389|||
cargo|trackingid|has a unique identifier called TrackingId for identifying the cargo during transportation.|dde9fa5b414e48a993f25b666b736389|||
cargo|itinerary|follows an itinerary represented as a list of locations and their sequences where cargo is transported from one location to another.|dde9fa5b414e48a993f25b666b736389|||
cargo|handlingeventrepository|stores the details of handling events such as loading, unloading, etc. That occurred with the cargo during its transportation.|dde9fa5b414e48a993f25b666b736389|||
handlingeventrepository|handlingevent|maintains HandlingEvent entities that contain information about the handling events such as description, location, etc.|dde9fa5b414e48a993f25b666b736389|||
locationrepository|location|stores Location entities and their attributes such as name, address, unLocode, etc.|dde9fa5b414e48a993f25b666b736389|||
unlocode|location|is used as an identifier for a specific location. Each location has a unique UnLocode associated with it.|dde9fa5b414e48a993f25b666b736389|||
voyagerepository|voyage|manages Voyage entities and their attributes such as name, voyageId, etc.|dde9fa5b414e48a993f25b666b736389|||
bookingservicefacade|cargoroute|provides a high-level view of the route taken by a cargo from its origin to destination based on the itinerary and location information.|dde9fa5b414e48a993f25b666b736389|||
bookingservicefacade|localdate|allows specifying the date of booking or shipment using LocalDate class.|dde9fa5b414e48a993f25b666b736389|||
bookingservicefacade|defaultbookingservicefacade|subclass relationship|b95dd0f3469f4745a995564cb004ae0e|||
org.eclipse.cargotracker.interfaces.booking.facade.dto.location|list<org.eclipse.cargotracker.interfaces.booking.facade.dto.location>|method listShippingLocations() returns a List of Location objects|b95dd0f3469f4745a995564cb004ae0e|||
bookingservice|defaultbookingservicefacade|implementation relationship|b95dd0f3469f4745a995564cb004ae0e|||
locationrepository|locationrepository|field injection relationship|b95dd0f3469f4745a995564cb004ae0e|||
cargorepository|cargorepository|field injection relationship|b95dd0f3469f4745a995564cb004ae0e|||
voyagerepository|voyagerepository|field injection relationship|b95dd0f3469f4745a995564cb004ae0e|||
handlingeventrepository|handlingeventrepository|field injection relationship|b95dd0f3469f4745a995564cb004ae0e|||
cargoroutedtoassembler|cargoroutedtoassembler|field injection relationship|b95dd0f3469f4745a995564cb004ae0e|||
cargostatusdtoassembler|cargostatusdtoassembler|field injection relationship|b95dd0f3469f4745a995564cb004ae0e|||
itinerarycandidatedtoassembler|itinerarycandidatedtoassembler|field injection relationship|b95dd0f3469f4745a995564cb004ae0e|||
locationdtoassembler|locationdtoassembler|field injection relationship|b95dd0f3469f4745a995564cb004ae0e|||
listallcargos|cargorepository|method 'listAllCargos' is called on the CargoTrackerController class to retrieve a list of all cargo objects from the repository|def9d6713d1440c7bcab3784ab258bde|||
listallcargos|cargos|list 'cargos' is assigned the result of the method 'findAll' called on the CargoRepository interface|def9d6713d1440c7bcab3784ab258bde|||
routes|cargos|list 'routes' is assigned the result of mapping each cargo object in 'cargos' to a DTO using the 'CargoRouteDtoAssembler' class|def9d6713d1440c7bcab3784ab258bde|||
listalltrackingids|cargorepository|method 'listAllTrackingIds' is called on the CargoTrackerController class to retrieve a list of all tracking IDs from the repository|def9d6713d1440c7bcab3784ab258bde|||
trackingids|cargos|list 'trackingIds' is initialized with the unique ID strings from each cargo object in 'cargos' via a foreach loop|def9d6713d1440c7bcab3784ab258bde|||
loadcargofortracking|trackingidvalue|parameter 'trackingIdValue' is passed to the 'loadCargoForTracking' method of the CargoTrackerController class to retrieve cargo and its handling events|def9d6713d1440c7bcab3784ab258bde|||
cargo|handlingevents|object 'cargo' is returned by the 'find' method called on the CargoRepository interface with a unique TrackingId object, and its handling events are obtained from the repository through the 'lookupHandlingHistoryOfCargo' method|def9d6713d1440c7bcab3784ab258bde|||
handlingevents|cargo|'handlingEvents' list of HandlingEvent objects is obtained for a specific cargo object using the 'lookupHandlingHistoryOfCargo' method of the HandlingEventRepository interface|def9d6713d1440c7bcab3784ab258bde|||
cargostatusdtoassembler|cargo, handlingevents|'CargoStatusDtoAssembler' class is used to transform the 'cargo' object and its corresponding 'handlingEvents' list into a DTO of type 'CargoStatus'|def9d6713d1440c7bcab3784ab258bde|||
requestpossibleroutesforcargo|trackingid|parameter 'trackingId' is passed to the 'requestPossibleRoutesForCargo' method of the CargoTrackerController class to retrieve candidate itineraries for a specific cargo object|def9d6713d1440c7bcab3784ab258bde|||
itineraries|bookingservice|'itineraries' list of Itinerary objects is returned by the 'requestPossibleRoutesForCargo' method of the BookingService interface|def9d6713d1440c7bcab3784ab258bde|||
routecandidatedtoassembler|itineraries|'RouteCandidateDtoAssembler' class is used to transform each 'Itinerary' object in 'itineraries' list into a DTO of type 'RouteCandidate'|def9d6713d1440c7bcab3784ab258bde|||
cargotrackercontroller|cargotrackerservice|The CargoTrackerController class serves as an entry point for user requests related to cargo tracking, and acts as a facade for the repository, service and assembler classes involved in these operations|def9d6713d1440c7bcab3784ab258bde|||
cargoroutedtoassembler|cargo|CargoRouteDtoAssembler is assembling Cargo to its corresponding DTO|f37262263ede46c58f8467bc44e15342|||
leg|cargoroutedtoassembler|Legs are being mapped to Leg DTOs using CargoRouteDtoAssembler|f37262263ede46c58f8467bc44e15342|||
locationdtoassembler|cargoroutedtoassembler|LocationDtos are being assembled for load and unload locations using LocationDtoAssembler|f37262263ede46c58f8467bc44e15342|||
cargoroute|cargoroutedtoassembler|The CargoRoute is being converted to its corresponding DTO using CargoRouteDtoAssembler|f37262263ede46c58f8467bc44e15342|||
cargo|getroutespecification().getarrivaldeadline()|extracted ontology relation between cargo and its arrival deadline|e5d52a97f408438d8baea6d0b402a716|||
cargo|getdelivery().getroutingstatus()|extracted ontology relation between cargo and its routing status|e5d52a97f408438d8baea6d0b402a716|||
cargo|getdelivery().gettransportstatus()|extracted ontology relation between cargo and its transport status|e5d52a97f408438d8baea6d0b402a716|||
locationdtoassembler|todto(cargo.getdelivery().getlastknownlocation())|extracted ontology relation between locationDtoAssembler and cargo's last known location|e5d52a97f408438d8baea6d0b402a716|||
getdelivery().gettransportstatus()|name()|extracted ontology relation between delivery's transport status and its name|e5d52a97f408438d8baea6d0b402a716|||
cargostatusdtoassembler|todto(cargo, handlingevents)|overall extracted ontology relation between CargoStatusDtoAssembler, cargo, and its handling events|e5d52a97f408438d8baea6d0b402a716|||
trackingevents|cargostatus|extracted ontology relation between tracking events and cargo status|e5d52a97f408438d8baea6d0b402a716|||
cargostatus|destination|The destination of a cargo is specified in its CargoStatus.|ecdbc89d60a5493da5d5d4179a22fff1|||
cargostatus|cargo|A CargoStatus is associated with a specific cargo.|ecdbc89d60a5493da5d5d4179a22fff1|||
delivery|transportstatus|The TransportStatus of a delivery is represented in its CargoStatus.|ecdbc89d60a5493da5d5d4179a22fff1|||
cargostatus|eta|The estimated time of arrival (ETA) for a cargo is included in its CargoStatus.|ecdbc89d60a5493da5d5d4179a22fff1|||
delivery|nextexpectedactivity|The next expected activity for a delivery is represented in the CargoStatus.|ecdbc89d60a5493da5d5d4179a22fff1|||
handlingevent|cargo|Each handling event is associated with a specific cargo.|ecdbc89d60a5493da5d5d4179a22fff1|||
handlingevent|stream|A stream of handling events is generated for each cargo.|ecdbc89d60a5493da5d5d4179a22fff1|||
cargostatus|trackingevents|The list of tracking events for a cargo is included in its CargoStatus.|ecdbc89d60a5493da5d5d4179a22fff1|||
handlingevent|assembler|Each handling event is transformed into a DTO by the assembler.|ecdbc89d60a5493da5d5d4179a22fff1|||
cargostatus|cargoid|The unique identifier for a cargo is included in its CargoStatus.|ecdbc89d60a5493da5d5d4179a22fff1|||
cargostatus|deliveryismisdirected|Whether the delivery for a cargo is misdirected is included in its CargoStatus.|ecdbc89d60a5493da5d5d4179a22fff1|||
delivery|lastknownlocation|The last known location for a delivery is represented by the Delivery object.|ecdbc89d60a5493da5d5d4179a22fff1|||
cargostatus|deliverystatustext|A text representation of the delivery status is included in the CargoStatus.|ecdbc89d60a5493da5d5d4179a22fff1|||
handlingevent|type|Each handling event has a specific type, represented by its HandlingEvent.Type enum value.|ecdbc89d60a5493da5d5d4179a22fff1|||
next expected activity|load cargo onto voyage|The next expected activity is to load cargo onto voyage|16ea41900a374d2b848c286be9222865|||
next expected activity|unload cargo off of voyage|The next expected activity is to unload cargo off of voyage|16ea41900a374d2b848c286be9222865|||
next expected activity|load cargo in|The next expected activity is to load cargo in|16ea41900a374d2b848c286be9222865|||
activity|load|Activity can be either LOAD or UNLOAD|16ea41900a374d2b848c286be9222865|||
activity.gettype()|handlingevent.type|The type of activity is HandlingEvent.Type|16ea41900a374d2b848c286be9222865|||
type.samevalueas(handlingevent.type.load)|load|When the type is LOAD, this condition is met|16ea41900a374d2b848c286be9222865|||
type.samevalueas(handlingevent.type.unload)|unload|When the type is UNLOAD, this condition is met|16ea41900a374d2b848c286be9222865|||
activity|voyage|Activity is associated with a voyage|16ea41900a374d2b848c286be9222865|||
voyage.getvoyagenumber()|voyagenumber|The voyage number can be accessed through the getVoyageNumber() method|16ea41900a374d2b848c286be9222865|||
locationrepository|location|Locations are retrieved using LocationRepository|16ea41900a374d2b848c286be9222865|||
locationrepository.findbyname(string name)|location|A location can be found by its name using the findByName() method of LocationRepository|16ea41900a374d2b848c286be9222865|||
location|getname()|The name of a location can be accessed through the getName() method|16ea41900a374d2b848c286be9222865|||
itinerary|leg|An itinerary is composed of one or more legs|16ea41900a374d2b848c286be9222865|||
itinerarycandidatedtoassembler|itinerary|An itinerary can be assembled using ItineraryCandidateDtoAssembler|16ea41900a374d2b848c286be9222865|||
leg|leg|Each leg in the itinerary is a Leg object|16ea41900a374d2b848c286be9222865|||
voyage|voyagenumber|The voyage number of a voyage can be accessed through its getVoyageNumber() method|16ea41900a374d2b848c286be9222865|||
unlocode|locationname|The location name for an UnLocode object is retrieved using the locationName property|16ea41900a374d2b848c286be9222865|||
location|unlocode|has location code|1bd42180170543c593eba42c50c8fd84|||
org.eclipse.cargotracker.interfaces.booking.facade.dto.leg|location|starts at|1bd42180170543c593eba42c50c8fd84|||
org.eclipse.cargotracker.interfaces.booking.facade.dto.leg|location|ends at|1bd42180170543c593eba42c50c8fd84|||
voyage|org.eclipse.cargotracker.interfaces.booking.facade.dto.leg|belongs to|1bd42180170543c593eba42c50c8fd84|||
locationdtoassembler|location|converts to|1bd42180170543c593eba42c50c8fd84|||
trackingevents|cargo|TrackingEvents is associated with Cargo in the context provided|f5578e2b51b44ecd99e8278a18adc5ff|||
handlingevent|trackingevents|HandlingEvent generates TrackingEvents in the context provided|f5578e2b51b44ecd99e8278a18adc5ff|||
locationfrom|handlingevent|locationFrom function takes HandlingEvent as an argument in the context provided|f5578e2b51b44ecd99e8278a18adc5ff|||
type|handlingevent|type is a property of HandlingEvent in the context provided|f5578e2b51b44ecd99e8278a18adc5ff|||
locationfrom|type|locationFrom function takes type as an argument to determine location in the context provided|f5578e2b51b44ecd99e8278a18adc5ff|||
voyagenumberfrom|handlingevent|voyageNumberFrom function takes HandlingEvent as an argument in the context provided|f5578e2b51b44ecd99e8278a18adc5ff|||
descriptionfrom|type||f5578e2b51b44ecd99e8278a18adc5ff|locationFrom|voyageNumberFrom|descriptionFrom function takes type, locationFrom and voyageNumberFrom as arguments to construct description in the context provided
descriptionfrom|trackingevents|descriptionFrom function generates TrackingEvents.Description property in the context provided|f5578e2b51b44ecd99e8278a18adc5ff|||
isexpected|cargo||f5578e2b51b44ecd99e8278a18adc5ff|HandlingEvent||isExpected method is called on Cargo with HandlingEvent as an argument in the context provided
timefrom|handlingevent||f5578e2b51b44ecd99e8278a18adc5ff|TrackingEvents||timeFrom function is called on HandlingEvent to generate TrackingEvents.Time property in the context provided
location|unlocode|The UnLocode is a unique identifier assigned to a specific location by the International Association of Ports and Harbors (IAPH). It can be used to quickly and accurately identify the geographic location of a port, terminal or facility. In our context, we have a Location object which contains an UnLocode. Therefore, the relationship between these two concepts is that a Location has an UnLocode.|d22ac4a231c146048932f85346d4e9d0|||
location|name|The Name of a location is simply the name by which it is known or referred to. This can vary depending on the region, language or context. For example, in our context, we have a Location object that has a Name property. So, the relationship between these two concepts is that a Location has a Name.|d22ac4a231c146048932f85346d4e9d0|||
location|coordinates|A location can be represented in terms of its geographic coordinates. These are typically latitude and longitude, which allow us to precisely determine the position of a location on Earth's surface. Our context includes a CoordinatesFactory interface which is used to create coordinate objects for different purposes. Therefore, the relationship between these concepts is that a Location has Coordinates.|d22ac4a231c146048932f85346d4e9d0|||
locationviewadapter|location|The LocationViewAdapter class provides a view-specific adaptation of a Location object for display purposes. In our context, this adapter is used to display location information in real-time tracking contexts. The relationship between these two concepts is that a LocationViewAdapter displays a specific Location object.|d22ac4a231c146048932f85346d4e9d0|||
realtimecargotrackingservice|sse|The RealtimeCargoTrackingService class uses the Sse class for sending server-sent events.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|logger|The RealtimeCargoTrackingService class has a Logger object to log messages.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|cargorepository|The RealtimeCargoTrackingService class has a reference to the CargoRepository for accessing cargo data.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|cargoupdated|The RealtimeCargoTrackingService class listens for CargoUpdated events to track changes in cargo.|02162fd1d0df4fed81035f4d68920bab|||
cargorepository|cargo|The CargoRepository class manages a collection of Cargo objects.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|context|The RealtimeCargoTrackingService class receives a Context object to provide additional request-specific information.|02162fd1d0df4fed81035f4d68920bab|||
ssebroadcaster|outboundsseevent|The SseBroadcaster class sends OutboundSseEvents to subscribers.|02162fd1d0df4fed81035f4d68920bab|||
ssebroadcaster|sseeventsink|The SseBroadcaster class registers SseEventSinks for receiving events.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|get|The RealtimeCargoTrackingService class provides a GET method to retrieve real-time cargo data.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|path|The RealtimeCargoTrackingService class is annotated with the @Path annotation to specify its URL path.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|produces|The RealtimeCargoTrackingService class is annotated with the @Produces annotation to specify its content type.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|context|The RealtimeCargoTrackingService class receives a Context object to provide additional request-specific information.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|outboundsseevent|The RealtimeCargoTrackingService class sends OutboundSseEvents to subscribers.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|observesasync|The RealtimeCargoTrackingService class listens for CargoUpdated events asynchronously using the @ObservesAsync annotation.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|logger|The RealtimeCargoTrackingService class logs messages to the console at the INFO level using the Logger object.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|logger.setlevel(level.info)|The RealtimeCargoTrackingService class sets the log level of the logger object to INFO.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|ssebroadcaster|The RealtimeCargoTrackingService class uses the SseBroadcaster class for sending server-sent events.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|sse.getbroadcaster()|The RealtimeCargoTrackingService class retrieves an SSE broadcaster from the Jakarta Enterprise Library (JEL) context.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|broadcaster = sse.getbroadcaster()|The RealtimeCargoTrackingService class initializes a SSE broadcaster with the retrieved broadcaster from the JEL context.|02162fd1d0df4fed81035f4d68920bab|||
realtimecargotrackingservice|cargoupdated|The RealtimeCargoTrackingService class listens for CargoUpdated events to track changes in cargo.|02162fd1d0df4fed81035f4d68920bab|||
booking|cargotracker|The class Booking in this code is related to the Cargotracker application as it facilitates booking cargo.|8a1ee861b3714335acea2ad277901a69|||
facade|bookingservicefacade|The interface Facade is implemented by the BookingServiceFacade class in this code for easy communication between client and server.|8a1ee861b3714335acea2ad277901a69|||
journey|minimum duration|In this code, minimum journey duration is defined as 1 day (MIN_JOURNEY_DURATION).|8a1ee861b3714335acea2ad277901a69|||
today|context|The variable today in this code holds the current date, which is part of the FacesContext (context) provided.|8a1ee861b3714335acea2ad277901a69|||
locations|list|This code contains a list named locations, which could potentially store multiple locations.|8a1ee861b3714335acea2ad277901a69|||
originunlocode|string|The variable originUnlocode in this code is a string that represents the unlocode for the origin location.|8a1ee861b3714335acea2ad277901a69|||
originname|string|The variable originName in this code is a string that represents the name of the origin location.|8a1ee861b3714335acea2ad277901a69|||
localdate today|localdate|today is assigned a value using the LocalDate class.|c1abc913bb004b0592fe363517202e16|||
locations|list<location>|locations is an instance of List and contains objects of type Location.|c1abc913bb004b0592fe363517202e16|||
originunlocode|string|originUnlocode is a string variable that stores the unique location identifier.|c1abc913bb004b0592fe363517202e16|||
originname|string|originName is a string variable that holds the name of the location corresponding to originUnlocode.|c1abc913bb004b0592fe363517202e16|||
destinationname|string|destinationName is a string variable used to store the name of the destination location.|c1abc913bb004b0592fe363517202e16|||
destinationunlocode|string|destinationUnlocode stores the unique identifier for the chosen destination location.|c1abc913bb004b0592fe363517202e16|||
arrivaldeadline|localdate|arrivalDeadline is an instance of LocalDate that holds the date and time when the shipment should arrive at the destination location.|c1abc913bb004b0592fe363517202e16|||
bookable|boolean|bookable is a boolean variable that determines whether the shipment is bookable or not.|c1abc913bb004b0592fe363517202e16|||
duration|long|duration is an instance of long used to store the duration for the shipment.|c1abc913bb004b0592fe363517202e16|||
list<location>|locations|List<Location> is a list that contains all available shipping locations, and locations is an instance of this list.|c1abc913bb004b0592fe363517202e16|||
location|locationtoremove|Location represents a specific location, and locationToRemove is used to remove a specific Location object from the filteredLocations list.|c1abc913bb004b0592fe363517202e16|||
getoriginname|originname|is a method in this class that returns the name of the origin|c24e971a53594063b12a472a2ef58f45|||
originname|a concept representing the location where the journey starts from|The variable 'originName' holds the name of the location where the journey starts from|c24e971a53594063b12a472a2ef58f45|||
getdestinationunlocode|destinationunlocode|is a method in this class that returns the unique location code for the destination|c24e971a53594063b12a472a2ef58f45|||
destinationunlocode|destinationname|is related to the name of the destination. The 'setDestinationUnlocode' method updates both 'destinationUnlocode' and 'destinationName' variables based on the location codes|c24e971a53594063b12a472a2ef58f45|||
locations|destinationunlocode|is filtered using the 'equalsIgnoreCase' method to find the corresponding name of the destination from the list of locations|c24e971a53594063b12a472a2ef58f45|||
today|arrivaldeadline|is a variable representing the current date. The 'setArrivalDeadline' method updates both 'arrivalDeadline' and 'duration' variables based on the new arrival deadline|c24e971a53594063b12a472a2ef58f45|||
chronounit.days|duration|is used to calculate the duration of the journey between today's date and the new arrival deadline in 'setArrivalDeadline'|c24e971a53594063b12a472a2ef58f45|||
min_journey_duration|bookable|is a constant that represents the minimum duration required for booking the journey. The 'duration' and 'bookable' variables are updated based on whether the calculated duration meets this requirement|c24e971a53594063b12a472a2ef58f45|||
primefaces.current().ajax().update|dateform:durationpanel|is used to update the 'durationPanel' component in the UI based on the updated duration value|c24e971a53594063b12a472a2ef58f45|||
primefaces.current().ajax().update|dateform:bookbtn|is used to update the 'bookBtn' component in the UI based on the updated bookable status|c24e971a53594063b12a472a2ef58f45|||
primefaces|update|PrimeFaces is a JavaScript library used for building user interfaces, and 'update' refers to updating specific elements on the web page.|c237fc5eb0924fe2b1af92da5b46080c|||
dateform|durationpanel|dateForm is likely a form containing date-related information, and 'durationPanel' may be a panel or section within that form related to duration.|c237fc5eb0924fe2b1af92da5b46080c|||
dateform|bookbtn|The 'bookBtn' (button) is probably located within the 'dateForm'|c237fc5eb0924fe2b1af92da5b46080c|||
cargoservicefacade|booknewcargo|cargoServiceFacade is an interface or facade for managing cargo-related operations, and 'bookNewCargo' is a specific method used to book new cargo.|c237fc5eb0924fe2b1af92da5b46080c|||
originunlocode|destinationunlocode|Both 'originUnlocode' and 'destinationUnlocode' likely refer to unique identifiers for specific locations, such as ports or airports.|c237fc5eb0924fe2b1af92da5b46080c|||
arrivaldeadline|cargoroute|ArrivalDeadline appears to be a deadline for the arrival of cargo, and 'CargoRoute' may represent the entire route or journey that cargo takes between locations.|c237fc5eb0924fe2b1af92da5b46080c|||
facesmessage|message|FacesMessage is a class used for displaying messages to users within web applications built using JavaServer Faces, and 'message' appears to be an instance of this class containing specific error or warning messages.|c237fc5eb0924fe2b1af92da5b46080c|||
cargodetails|cargotracker|CargoDetails is likely a specific web page or interface related to cargo management, and 'CargoTracker' may refer to the overall application or system used for managing cargo.|c237fc5eb0924fe2b1af92da5b46080c|||
bookingservicefacade|dto.cargoroute|BookingServiceFacade is an interface or facade for managing booking-related operations, and 'dto.CargoRoute' appears to be a specific data transfer object (DTO) used to represent cargo routes in this application.|c237fc5eb0924fe2b1af92da5b46080c|||
cargodetails|bookingservicefacade|The CargoDetails class uses the BookingServiceFacade class to access the cargo routing service.|155ae6c5ba28496a97fd95207b7ac990|||
cargodetails|trackingid|The user interface for viewing cargo details allows users to input a tracking ID via the CargoDetails class.|155ae6c5ba28496a97fd95207b7ac990|||
bookingservicefacade|loadcargoforrouting|The loadCargoForRouting method of the BookingServiceFacade class is used to retrieve cargo information based on a tracking ID.|155ae6c5ba28496a97fd95207b7ac990|||
changearrivaldeadline|viewscoped|The ChangeArrivalDeadline class is annotated with @ViewScoped, indicating that it is a user interface component for a specific view.|155ae6c5ba28496a97fd95207b7ac990|||
changearrivaldeadline|cargodetails|The ChangeArrivalDeadline class allows users to modify the arrival deadline of cargo that has been previously viewed using the CargoDetails class.|155ae6c5ba28496a97fd95207b7ac990|||
changearrivaldeadline|localdate|Users can update the arrival date and time of a particular shipment via the LocalDate class in ChangeArrivalDeadline.|155ae6c5ba28496a97fd95207b7ac990|||
changearrivaldeadline|dateconverter|The DateConverter class is utilized by the ChangeArrivalDeadline class to convert between different date/time formats.|155ae6c5ba28496a97fd95207b7ac990|||
changearrivaldeadline|bookingservicefacade|implements interface BookingServiceFacade, used for changing cargo destination|ae40e996b0424e2a92c3d6cbc355efb5|||
changearrivaldeadline|cargoroute|contains CargoRoute object from BookingServiceFacade|ae40e996b0424e2a92c3d6cbc355efb5|||
changearrivaldeadline|localdate|holds new arrival deadline using LocalDate class for date manipulation|ae40e996b0424e2a92c3d6cbc355efb5|||
trackingid|changearrivaldeadline|represents unique identifier for cargo shipment being changed|ae40e996b0424e2a92c3d6cbc355efb5|||
changearrivaldeadlinedialog|trackingid|is a parameter passed to the showDialog() method in ChangeArrivalDeadlineDialog class|c26aae02e96146f4887b9bdae5da5acf|||
changearrivaldeadlinedialog|org.primefaces.primefaces|is used to display dialogs in PrimeFaces|c26aae02e96146f4887b9bdae5da5acf|||
map|options|contains options for the dialog such as modal, draggable, resizable, contentWidth, and contentHeight|c26aae02e96146f4887b9bdae5da5acf|||
cargoroute|getcargo|returns the cargo associated with a particular context|c26aae02e96146f4887b9bdae5da5acf|||
bookingservicefacade|loadcargoforrouting|is used to load cargo for routing from the BookingServiceFacade class|c26aae02e96146f4887b9bdae5da5acf|||
localdate|getarrivaldeadline|returns the arrival deadline associated with a particular context|c26aae02e96146f4887b9bdae5da5acf|||
dateconverter|todate|is used to convert LocalDate to Date|c26aae02e96146f4887b9bdae5da5acf|||
bookingservicefacade|changedeadline|is used to change the deadline associated with a particular context in the BookingServiceFacade class|c26aae02e96146f4887b9bdae5da5acf|||
node_1|node_2|edge|chunk_id|node_3|node_4|edge_1
bookingservicefacade|bookingservicefacade|represents the same object in different parts of the code|c9aedafd50b6428fb247584a37123e40|||
changedestination|changedestination|both are classes that handle changing cargo destination|c9aedafd50b6428fb247584a37123e40|||
cargoroute|cargo|cargo is a CargoRoute object|c9aedafd50b6428fb247584a37123e40|||
locations|locations|list of locations where cargo can be transported|c9aedafd50b6428fb247584a37123e40|||
location|location|a specific location for transporting cargo|c9aedafd50b6428fb247584a37123e40|||
destinationunlocode|destinationunlocode|property in ChangeDestination class to store destination's unique code|c9aedafd50b6428fb247584a37123e40|||
primefaces|primefaces|JavaServer Faces (JSF) library for building user interfaces|c9aedafd50b6428fb247584a37123e40|||
eclipse cargotracker|cargotracker|Eclipse project that provides a framework for cargo management and transport planning|c9aedafd50b6428fb247584a37123e40|||
changedestinationdialog|admin/dialogs/change_destination.xhtml|dialog in ChangeDestinationDialog is opened with options and parameters to load content from 'admin/dialogs/change_destination.xhtml'|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|primefaces|ChangeDestinationDialog uses PrimeFaces API to open a dialog|80234bada13b428cb726d6d2647f1701|||
primefaces|current()|PrimeFaces has a method 'current()' to access the current instance of PrimeFaces|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|itineraryselection|ChangeDestinationDialog is part of package 'org.eclipse.cargotracker.interfaces.booking.web'|80234bada13b428cb726d6d2647f1701|||
org.eclipse.cargotracker.interfaces.booking.web|itineraryselection|ItinerarySelection is part of package 'org.eclipse.cargotracker.interfaces.booking.web'|80234bada13b428cb726d6d2647f1701|||
itineraryselection|src/main/java|ItinerarySelection is located in 'src/main/java' folder|80234bada13b428cb726d6d2647f1701|||
org.eclipse.cargotracker.interfaces.booking.web|changedestinationdialog|ChangeDestinationDialog is part of package 'org.eclipse.cargotracker.interfaces.booking.web'|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|sessionscoped|ChangeDestinationDialog has an annotation '@SessionScoped' for request and session level scope management|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|named|ChangeDestinationDialog is named using '@Named' annotation|80234bada13b428cb726d6d2647f1701|||
itineraryselection|booking/web|ItinerarySelection is part of subpackage 'booking/web' within 'org.eclipse.cargotracker.interfaces'|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|showdialog()|ChangeDestinationDialog has a method 'showDialog(String trackingId)' to display dialog|80234bada13b428cb726d6d2647f1701|||
org.primefaces.primefaces|current()|PrimeFaces has a method 'current()' to access the current instance of PrimeFaces|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|map<string, list<string>> params = new hashmap<>();|Params for dialog is stored in a map named 'params'|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|list<string> values = new arraylist<>();|Values for trackingId is stored in a list named 'values'|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|map<string, list<string>> params|"Params are added to dialog's parameters using 'params.put(""trackingId"", values)' statement"|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|map<string, object> options|Options for dialog is stored in a map named 'options'|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|primefaces.current()|Current instance of PrimeFaces is used to open dialog|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|options|Options are passed as argument to 'dialog().openDynamic()' method of PrimeFaces|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|params|Parameters are passed as argument to 'dialog().openDynamic()' method of PrimeFaces|80234bada13b428cb726d6d2647f1701|||
itineraryselection|src/main/java|ItinerarySelection is located in 'src/main/java' folder|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|handlereturn(selectevent event)|Method to handle the return action of dialog|80234bada13b428cb726d6d2647f1701|||
selectevent|event|Event object that contains information about selected item is passed as argument to 'handleReturn()' method|80234bada13b428cb726d6d2647f1701|||
changedestinationdialog|@viewscoped|ChangeDestinationDialog has an annotation '@ViewScoped' for view level scope management|80234bada13b428cb726d6d2647f1701|||
listing cargo|bookingservicefacade|is used to interact with the service facade in order to list all cargo.|d6ddaed961b84011a9e1a7c898718d34|||
cargoroute|notroutedcargos|is a list that contains all cargo routes that have not been routed.|d6ddaed961b84011a9e1a7c898718d34|||
stream|cargos|is used to filter the list of cargos based on whether they are routed or not.|d6ddaed961b84011a9e1a7c898718d34|||
cargoroute|routedunclaimedcargos|is a list that contains all cargo routes that have been routed but are still unclaimed.|d6ddaed961b84011a9e1a7c898718d34|||
stream|cargos|is used to filter the list of cargos based on whether they are routed and claimed or not.|d6ddaed961b84011a9e1a7c898718d34|||
cargoroute|claimedcargos|is a list that contains all cargo routes that have been claimed.|d6ddaed961b84011a9e1a7c898718d34|||
track|bookingservicefacade|depends on the BookingServiceFacade for performing cargo tracking operations.|d046f001e9e34d2a9e14fb5f149fe062|||
admin.track|bookingservicefacade|injects a BookingServiceFacade to facilitate communication with the facade for handling cargo tracking tasks.|d046f001e9e34d2a9e14fb5f149fe062|||
track|cargostatus|uses CargoStatus for representing different statuses of cargo in the tracking process.|d046f001e9e34d2a9e14fb5f149fe062|||
trackingids|list<string>|maintains a list of tracking IDs that are being tracked by the system.|d046f001e9e34d2a9e14fb5f149fe062|||
track|cargostatus|initializes cargo status to null, implying no cargo has been selected for viewing details yet.|d046f001e9e34d2a9e14fb5f149fe062|||
trackingcontroller|admin.track|is a specialized implementation of the TrackingController for handling administrative level tracking tasks.|d046f001e9e34d2a9e14fb5f149fe062|||
handlingeventregistrationattempt|registrationtime|represents the time at which a registration attempt for a handling event is initiated|a0f5a29ade9541a49bc0afcc214ed458|||
handlingeventregistrationattempt|completiontime|represents the time at which a handling event registration attempt is completed or failed|a0f5a29ade9541a49bc0afcc214ed458|||
handlingeventregistrationattempt|trackingid|is a unique identifier assigned to a cargo being transported. It is used to track its location and status during transportation.|a0f5a29ade9541a49bc0afcc214ed458|||
trackingid|cargo|represents the tracking information associated with a particular cargo|a0f5a29ade9541a49bc0afcc214ed458|||
voyagenumber|cargo|represents the voyage number associated with a particular cargo|a0f5a29ade9541a49bc0afcc214ed458|||
unlocode|cargo|represents the unique location code assigned to a particular cargo handling facility|a0f5a29ade9541a49bc0afcc214ed458|||
handlingevent|cargo|represents an event that occurs during the transportation of a cargo, such as loading or unloading|a0f5a29ade9541a49bc0afcc214ed458|||
handlingeventregistrationattempt|eventfilescheckpoint|Belongs to package org.eclipse.cargotracker.interfaces.handling.file|b21bfd07486d499c91c89ab3a563c563|||
localdatetime|registrationtime|Is an instance variable of HandlingEventRegistrationAttempt|b21bfd07486d499c91c89ab3a563c563|||
localdatetime|completiontime|Is an instance variable of HandlingEventRegistrationAttempt|b21bfd07486d499c91c89ab3a563c563|||
trackingid|trackingid|Is an instance variable with the same name in both classes|b21bfd07486d499c91c89ab3a563c563|||
voyagenumber|voyagenumber|Is an instance variable with the same name in both classes|b21bfd07486d499c91c89ab3a563c563|||
handlingevent.type|type|Is an instance variable of HandlingEventRegistrationAttempt|b21bfd07486d499c91c89ab3a563c563|||
unlocode|unlocode|Is an instance variable of HandlingEventRegistrationAttempt|b21bfd07486d499c91c89ab3a563c563|||
eventitemreader|abstractitemreader|inherits from AbstractItemReader in EventItemReader class.|fc5e9a5f27734c47b15e81efe0185993|||
eventfilescheckpoint|list<file>|has a List<File> named files in EventFilesCheckpoint class.|fc5e9a5f27734c47b15e81efe0185993|||
eventfilescheckpoint|int|has an integer named fileIndex in EventFilesCheckpoint class.|fc5e9a5f27734c47b15e81efe0185993|||
eventfilescheckpoint|long|has a long named filePointer in EventFilesCheckpoint class.|fc5e9a5f27734c47b15e81efe0185993|||
file|eventitemreader.java|is imported from EventItemReader.java file.|fc5e9a5f27734c47b15e81efe0185993|||
file|cargotracker/src/main/java/org/eclipse/cargotracker/interfaces/handling/file/eventfilescheckpoint.java|is imported from EventFilesCheckpoint.java file.|fc5e9a5f27734c47b15e81efe0185993|||
localdatetime|datetime format in eventitemreader class.|is used for parsing date-time values in EventItemReader class.|fc5e9a5f27734c47b15e81efe0185993|||
logger|level of logging messages in eventitemreader class.|is set to Level.INFO in EventItemReader class.|fc5e9a5f27734c47b15e81efe0185993|||
jobcontext|context for batch processing job execution in abstractitemreader class.|is injected into AbstractItemReader class using @Inject and @Named annotations.|fc5e9a5f27734c47b15e81efe0185993|||
eventitemreader|jobcontext|The 'EventItemReader' class is dependent on the 'JobContext' class through constructor injection.|62d3d8f750ed49d4acd5e2b7fbd03ce6|||
logger|jobcontext|The 'logger' field in 'EventItemReader' class can be accessed through the 'JobContext' object due to its dependency on the 'LoggerFactory' class that is configured in 'JobContext'.|62d3d8f750ed49d4acd5e2b7fbd03ce6|||
checkpoint|jobcontext|The 'checkpoint' field in 'EventItemReader' class can be accessed through the 'JobContext' object due to its dependency on the 'CheckpointFactory' class that is configured in 'JobContext'.|62d3d8f750ed49d4acd5e2b7fbd03ce6|||
logger|eventfilescheckpoint|The 'logger' field in 'EventItemReader' class can be accessed through the 'EventFilesCheckpoint' object due to their dependency on the 'LoggerFactory' class that is configured in 'JobContext'.|62d3d8f750ed49d4acd5e2b7fbd03ce6|||
checkpoint|eventfilescheckpoint|The 'checkpoint' field in 'EventItemReader' class can be accessed through the 'EventFilesCheckpoint' object due to their dependency on the 'CheckpointFactory' class that is configured in 'JobContext'.|62d3d8f750ed49d4acd5e2b7fbd03ce6|||
uploaddirectory|eventitemreader|The 'uploadDirectory' field in 'EventItemReader' class can be accessed directly as it is a local variable and not dependent on any other object.|62d3d8f750ed49d4acd5e2b7fbd03ce6|||
checkpoint.getfiles()|eventitemreader|The 'getFiles()' method of the 'checkpoint' field in 'EventItemReader' class returns a list of files that are dependent on the 'uploadDirectory' object accessed through the 'JobContext' object.|62d3d8f750ed49d4acd5e2b7fbd03ce6|||
checkpoint.setfiles(...) |eventitemreader|The 'setFiles()' method of the 'checkpoint' field in 'EventItemReader' class is called with a list of files that are accessed through the 'uploadDirectory' object accessed through the 'JobContext' object.|62d3d8f750ed49d4acd5e2b7fbd03ce6|||
currentfile|checkpoint.currentfile|is a reference to the current file being processed.|52e64cb2c66b4176a331e39acfc059f8|||
logger|logger|is used to log information about the program's execution.|52e64cb2c66b4176a331e39acfc059f8|||
level|level.info|specifies the level of logging detail, in this case INFO.|52e64cb2c66b4176a331e39acfc059f8|||
file|currentfile|is being assigned a value from the 'checkpoint.currentFile' object.|52e64cb2c66b4176a331e39acfc059f8|||
currentfile|randomaccessfile|is an instance of the RandomAccessFile class, used for reading and writing files.|52e64cb2c66b4176a331e39acfc059f8|||
randomaccessfile|'r'|is passed as a parameter to create a new file stream with read-only access.|52e64cb2c66b4176a331e39acfc059f8|||
logger|level.info|is used to log a message indicating the file being processed.|52e64cb2c66b4176a331e39acfc059f8|||
if|file|checks whether the 'currentFile' object is null, which indicates there are no files to process.|52e64cb2c66b4176a331e39acfc059f8|||
logger|level.info|is used to log a message indicating that there are no files to process.|52e64cb2c66b4176a331e39acfc059f8|||
currentfile|null|is assigned null value when there are no more files to process.|52e64cb2c66b4176a331e39acfc059f8|||
close|currentfile|is called on the 'currentFile' object to close it and release any system resources associated with it.|52e64cb2c66b4176a331e39acfc059f8|||
delete|currentfile.currentfile()|is used to delete the file being processed when there are no more files to process.|52e64cb2c66b4176a331e39acfc059f8|||
checkpoint.nextfile|currentfile|is assigned a new value for 'currentFile' object from the 'checkpoint.nextFile' object, which is used to process the next file.|52e64cb2c66b4176a331e39acfc059f8|||
logger|level.info|is used to log a message indicating that a new file is being processed.|52e64cb2c66b4176a331e39acfc059f8|||
return|readitem()|returns the 'readItem()' method, which reads and processes data from each line in the input files.|52e64cb2c66b4176a331e39acfc059f8|||
string|line|is assigned a value from the current line being read from the input file.|52e64cb2c66b4176a331e39acfc059f8|||
parseline|line|parses the data elements from each line and returns an object containing the processed data.|52e64cb2c66b4176a331e39acfc059f8|||
localdatetime|completiontime|is assigned a value by converting a string to a LocalDateTime object using the 'DateConverter.toDateTime()' method.|52e64cb2c66b4176a331e39acfc059f8|||
trackingid|null|is initialized as null, indicating that no tracking ID has been assigned yet.|52e64cb2c66b4176a331e39acfc059f8|||
throw|eventlineparseexception|is used to throw an exception when the number of data elements does not match the expected value of 5.|52e64cb2c66b4176a331e39acfc059f8|||
eventlineparseexception|line|thrown by TrackingId or HandlingEventRegistrationAttempt constructor when parsing tracking ID or completion time respectively|8d8223ac3729498daf2af8a2b1a8dd98|||
result|[1], [2]|array containing first 3 elements of arguments passed to TrackingId and HandlingEventRegistrationAttempt constructors respectively|8d8223ac3729498daf2af8a2b1a8dd98|||
new|trackingid, voyagenumber, unlocode, handlingeventregistrationattempt|used to create objects from their respective arrays in constructor arguments|8d8223ac3729498daf2af8a2b1a8dd98|||
localdatetime|now|returns current date and time|8d8223ac3729498daf2af8a2b1a8dd98|||
completiontime|null|passed as argument to TrackingId constructor, but not used in this context|8d8223ac3729498daf2af8a2b1a8dd98|||
handlingeventregistrationattempt|null|created using constructor arguments and returned at the end of the method|8d8223ac3729498daf2af8a2b1a8dd98|||
bufferedwriter|null|used to write to file in EventItemWriter class, but not used in this context|8d8223ac3729498daf2af8a2b1a8dd98|||
printwriter|null|used to write to file in EventItemWriter class, but not used in this context|8d8223ac3729498daf2af8a2b1a8dd98|||
filewriter|null|used to create PrintWriter object for writing to file in EventItemWriter class, but not used in this context|8d8223ac3729498daf2af8a2b1a8dd98|||
file|null|path of output file specified as argument to EventItemWriter constructor, but not used in this context|8d8223ac3729498daf2af8a2b1a8dd98|||
serializable|checkpointinfo method of handlingeventregistrationattempt class|returns checkpoint object for resuming execution from previous run|8d8223ac3729498daf2af8a2b1a8dd98|||
eventlineparseexception|exception|subclass relationship between EventLineParseException and Exception|809dbcd637eb4efda3174cb0a98674db|||
parseexception|eventlineparseexception|has a property relationship between parseException and EventLineParseException|809dbcd637eb4efda3174cb0a98674db|||
fileprocessorjoblistener|joblistener|implements relationship between FileProcessorJobListener and JobListener|809dbcd637eb4efda3174cb0a98674db|||
getline|eventlineparseexception|has a method relationship between getLine and EventLineParseException|809dbcd637eb4efda3174cb0a98674db|||
logger|logger|has a property relationship between logger and Logger|809dbcd637eb4efda3174cb0a98674db|||
level|level|has a method relationship between level and Level|809dbcd637eb4efda3174cb0a98674db|||
interfaces|cargotracker||809dbcd637eb4efda3174cb0a98674db|handling|file|part of relationship between interfaces, cargotracker, handling and file
eventlineparseexception|fileprocessorjoblistener|invoked by relationship between EventLineParseException and FileProcessorJobListener|809dbcd637eb4efda3174cb0a98674db|||
dateconverter|tostring||809dbcd637eb4efda3174cb0a98674db|Date|String|method relationship between DateConverter, toString, Date and String
getregistrationtime|attempt|has a method relationship between getRegistrationTime and HandlingEventRegistrationAttempt|809dbcd637eb4efda3174cb0a98674db|HandlingEventRegistrationAttempt||
getcompletiontime|attempt|has a method relationship between getCompletionTime and HandlingEventRegistrationAttempt|809dbcd637eb4efda3174cb0a98674db|HandlingEventRegistrationAttempt||
gettrackingid|attempt|has a method relationship between getTrackingId and HandlingEventRegistrationAttempt|809dbcd637eb4efda3174cb0a98674db|HandlingEventRegistrationAttempt||
getvoyagenumber|attempt|has a method relationship between getVoyageNumber and HandlingEventRegistrationAttempt|809dbcd637eb4efda3174cb0a98674db|HandlingEventRegistrationAttempt||
gettype|attempt|has a method relationship between getType and HandlingEventRegistrationAttempt|809dbcd637eb4efda3174cb0a98674db|HandlingEventRegistrationAttempt||
item|handlingeventregistrationattempt|is invoked by relationship between item and HandlingEventRegistrationAttempt|809dbcd637eb4efda3174cb0a98674db|||
fileprocessorjoblistener|logger|The class FileProcessorJobListener has a member variable Logger named logger.|b98ebb8e77b944a997876471d362d913|||
fileprocessorjoblistener|level.info|In the beforeJob() method of the class FileProcessorJobListener, a log message is created with level INFO and formatted with the current date using Level.INFO.|b98ebb8e77b944a997876471d362d913|||
lineparseexceptionlistener|logger|The class LineParseExceptionListener has a member variable Logger named logger.|b98ebb8e77b944a997876471d362d913|||
lineparseexceptionlistener|jobcontext|In the LineParseExceptionListener class, there is a member variable JobContext named jobContext.|b98ebb8e77b944a997876471d362d913|||
lineparseexceptionlistener|jakarta.batch.runtime.context.jobcontext|The data type of the member variable jobContext in the LineParseExceptionListener class is JobContext, which belongs to the package jakarta.batch.runtime.context.|b98ebb8e77b944a997876471d362d913|||
lineparseexceptionlistener|skipreadlistener|The LineParseExceptionListener class implements the SkipReadListener interface.|b98ebb8e77b944a997876471d362d913|||
lineparseexceptionlistener|failed_directory|In the LineParseExceptionListener class, there is a static final string named FAILED_DIRECTORY.|b98ebb8e77b944a997876471d362d913|||
file|filewriter|In the LineParseExceptionListener class, there are member variables File and PrintWriter, and they are used with a FileWriter to write files.|b98ebb8e77b944a997876471d362d913|||
bufferedwriter|printwriter|The LineParseExceptionListener class uses a BufferedWriter to wrap around a PrintWriter, which is also used in the FileProcessorJobListener class.|b98ebb8e77b944a997876471d362d913|||
uploaddirectoryscanner|interfaces|UploadDirectoryScanner is a class belonging to the interfaces package.|29755584fb9348e8b5a9a9ba440f7f0e|||
org|eclipse|The 'org' and 'Eclipse' are used as packages names in Java, indicating their respective origins.|29755584fb9348e8b5a9a9ba440f7f0e|||
cargotracker|interfaces|Cargotracker is a package within the interfaces namespace.|29755584fb9348e8b5a9a9ba440f7f0e|||
handling|file|The 'handling' and 'file' packages are used to organize classes related to handling and managing files in Java.|29755584fb9348e8b5a9a9ba440f7f0e|||
joboperator|batchruntime|JobOperator and BatchRuntime are both Java classes from the Jakarta Batch framework, which provide functionality for managing batch processing jobs.|29755584fb9348e8b5a9a9ba440f7f0e|||
stateless|jakarta ee|Stateless is a component definition provided by Jakarta EE (formerly Java EE) to define stateful or stateless components in enterprise applications.|29755584fb9348e8b5a9a9ba440f7f0e|||
schedule|jakarta ee|Schedule is a component definition provided by Jakarta EE to schedule periodic tasks for execution in enterprise applications.|29755584fb9348e8b5a9a9ba440f7f0e|||
eventlogger|interface|In the context provided, 'EventLogger' is mentioned as an interface in a Java package declaration.|33ef7adc3ec542f786067fb96fdeeb05|||
localdatetime|java.time.localdatetime|In the context provided, 'LocalDateTime' is used as a data type for storing local date and time information in Java, imported from the java.time package.|33ef7adc3ec542f786067fb96fdeeb05|||
list|java.util.list|In the context provided, 'List' is used as a data structure for storing collections of objects in Java, imported from the java.util package.|33ef7adc3ec542f786067fb96fdeeb05|||
map|java.util.map|In the context provided, 'Map' is used as a data structure for storing key-value pairs in Java, imported from the java.util package.|33ef7adc3ec542f786067fb96fdeeb05|||
selectitem|jakarta.faces.model.selectitem|In the context provided, 'SelectItem' is used as a JavaBeans component for providing options in a list of choices to the user, imported from the jakarta.faces package.|33ef7adc3ec542f786067fb96fdeeb05|||
facesmessage|jakarta.faces.context.facesmessage|In the context provided, 'FacesMessage' is used as a JavaBeans component for displaying messages to the user, imported from the jakarta.faces.context package.|33ef7adc3ec542f786067fb96fdeeb05|||
facescontext|jakarta.faces.context.facescontext|In the context provided, 'FacesContext' is used as a JavaBeans component for managing the application and user interface context in JSF, imported from the jakarta.faces package.|33ef7adc3ec542f786067fb96fdeeb05|||
viewscoped|jakarta.faces.view.viewscoped|In the context provided, 'ViewScoped' is used as a JavaBeans component for managing view-level state in JSF, imported from the jakarta.faces package.|33ef7adc3ec542f786067fb96fdeeb05|||
schedule|jakarta.ejb.schedule|In the context provided, 'Schedule' is used as annotations for defining recurrence rules and time zones in EJB timers, imported from the jakarta.ejb package.|33ef7adc3ec542f786067fb96fdeeb05|||
stateless|jakarta.ejb.stateless|In the context provided, 'Stateless' is used as annotations for defining stateless session beans in EJB, imported from the jakarta.ejb package.|33ef7adc3ec542f786067fb96fdeeb05|||
transactionmanagement|jakarta.ejb.transactionmanagement|In the context provided, 'TransactionManagement' is used as annotations for defining transaction management behavior in EJB components, imported from the jakarta.ejb package.|33ef7adc3ec542f786067fb96fdeeb05|||
transactionmanagementtype|jakarta.ejb.transactionmanagementtype|In the context provided, 'TransactionManagementType' is used as annotations for defining transaction management types in EJB components, imported from the jakarta.ejb package.|33ef7adc3ec542f786067fb96fdeeb05|||
batchruntime|org.springframework.batch.core.configuration.annotation.batchconfiguration|In the context provided, 'BatchRuntime' is used as a class for running batch jobs in Spring Batch framework, imported from the spring-batch-core package.|33ef7adc3ec542f786067fb96fdeeb05|||
joboperator|org.springframework.batch.core.launch.joboperator|In the context provided, 'JobOperator' is used as an interface for starting batch jobs in Spring Batch framework, imported from the spring-batch-core package.|33ef7adc3ec542f786067fb96fdeeb05|||
cargotracker|org.eclipse.cargotracker|In the context provided, 'Cargotracker' is a package name used for handling cargo-related tasks in Java.|33ef7adc3ec542f786067fb96fdeeb05|||
interfaces|org.eclipse.cargotracker.interfaces|In the context provided, 'Interfaces' is a package name used for defining interfaces in Java for handling cargo-related tasks, imported from the org.eclipse.cargotracker package.|33ef7adc3ec542f786067fb96fdeeb05|||
handling|org.eclipse.cargotracker.interfaces.handling|In the context provided, 'Handling' is a sub-package name used for handling cargo-related tasks related to their handling aspects in Java, imported from the org.eclipse.cargotracker.interfaces package.|33ef7adc3ec542f786067fb96fdeeb05|||
mobile|org.eclipse.cargotracker.interfaces.handling.mobile|In the context provided, 'Mobile' is a sub-package name used for handling cargo-related tasks related to their handling aspects on mobile platforms in Java, imported from the org.eclipse.cargotracker.interfaces.handling package.|33ef7adc3ec542f786067fb96fdeeb05|||
applicationevents|event registration attempt|implements interface HandlingEventRegistrationAttempt, responsible for handling event registration attempts in the application|2113768eb3d146058c93092ffe9ff9f5|||
cargorepository|cargo|class to access and manage cargo entities in the domain model|2113768eb3d146058c93092ffe9ff9f5|||
cargo|location|cargo can have a specific location at a given time|2113768eb3d146058c93092ffe9ff9f5|||
locationrepository|location|class to access and manage locations entities in the domain model|2113768eb3d146058c93092ffe9ff9f5|||
location|unlocode|location can have a specific unlocode code, representing a physical location|2113768eb3d146058c93092ffe9ff9f5|||
voyagerepository|voyage|class to access and manage voyages entities in the domain model|2113768eb3d146058c93092ffe9ff9f5|||
voyagenumber|voyage|a unique identifier assigned to a voyage for identification purposes|2113768eb3d146058c93092ffe9ff9f5|||
flowevent|viewscoped managed bean|tracks and logs flow events, such as moving from one view to another in the JSF framework|2113768eb3d146058c93092ffe9ff9f5|||
voyagerepository|voyagerepository|identical to each other|628d6f97a71143f7aae19501b7b6e37f|||
applicationevents|applicationevents|identical to each other|628d6f97a71143f7aae19501b7b6e37f|||
context|context|identical to each other|628d6f97a71143f7aae19501b7b6e37f|||
trackingids|gettrackingids|method 'getTrackingIds' returns a list of select items containing tracking ids|628d6f97a71143f7aae19501b7b6e37f|||
locations|getlocations|method 'getLocations' returns a list of select items containing locations|628d6f97a71143f7aae19501b7b6e37f|||
voyages|getvoyages|method 'getVoyages' returns a list of select items containing voyage numbers|628d6f97a71143f7aae19501b7b6e37f|||
trackingid|gettrackingid|method 'getTrackingId' returns the selected tracking id from the ui|628d6f97a71143f7aae19501b7b6e37f|||
location|getlocation|method 'getLocation' returns the selected location from the ui|628d6f97a71143f7aae19501b7b6e37f|||
handlingevent.type|eventtypes|method 'getEventTypes' returns a map of all event types|628d6f97a71143f7aae19501b7b6e37f|||
handlingevent.type|eventtype|instance variable 'eventType' stores the selected event type from the ui|628d6f97a71143f7aae19501b7b6e37f|||
voyagenumber|getvoyagenumber|method 'getVoyageNumber' returns the selected voyage number from the ui|628d6f97a71143f7aae19501b7b6e37f|||
handlingreport|completiontime|The 'completionTime' property of the 'HandlingReport' class represents the completion time of a handling operation.|874719956df74d049775b347247c9f2f|||
handlingreport|trackingid|The 'trackingId' property of the 'HandlingReport' class identifies the specific handling operation being reported.|874719956df74d049775b347247c9f2f|||
handlingreport|eventtype|The 'eventType' property of the 'HandlingReport' class specifies the type of handling event, such as RECEIVE, LOAD, UNLOAD, CUSTOMS, or CLAIM.|874719956df74d049775b347247c9f2f|||
handlingreport|unlocode|The 'unLocode' property of the 'HandlingReport' class identifies the location where the handling operation is taking place, using a standard UN location code.|874719956df74d049775b347247c9f2f|||
handlingreport|voyagenumber|The 'voyageNumber' property of the 'HandlingReport' class provides a unique identifier for the handling operation, specific to the voyage it is associated with.|874719956df74d049775b347247c9f2f|||
handlingreportservice|handlingevent|HandlingReportService provides an interface to handle handling events through HandlingEvent class.|22c76f5374cd4f2cb514d1739f71bd9d|||
handlingevent|org.eclipse.cargotracker.domain.model.handling.handlingevent|HandlingEvent is a domain model class in cargotracker for handling events.|22c76f5374cd4f2cb514d1739f71bd9d|||
handlingreportservice|applicationevents|HandlingReportService interacts with ApplicationEvents to handle application level events.|22c76f5374cd4f2cb514d1739f71bd9d|||
dateconverter|localdatetime|DateConverter is used to convert between LocalDateTime and String formats for date/time values.|22c76f5374cd4f2cb514d1739f71bd9d|||
trackingid|org.eclipse.cargotracker.domain.model.cargo.trackingid|TrackingId is a unique identifier assigned to cargo being tracked.|22c76f5374cd4f2cb514d1739f71bd9d|||
unlocode|org.eclipse.cargotracker.domain.model.location.unlocode|UnLocode is a unique identifier assigned to locations involved in cargo transportation.|22c76f5374cd4f2cb514d1739f71bd9d|||
voyagenumber|org.eclipse.cargotracker.domain.model.voyage.voyagenumber|VoyageNumber is a unique identifier assigned to cargo transportation on a specific vessel.|22c76f5374cd4f2cb514d1739f71bd9d|||
handlingreportservice|post|HandlingReportService provides a POST request for submitting handling events.|22c76f5374cd4f2cb514d1739f71bd9d|||
handlingevent|setcompletiontime|HandlingEvent class has a setter method to update completion time.|22c76f5374cd4f2cb514d1739f71bd9d|||
completiontime|localdatetime|Completion time is represented as LocalDateTime data type in HandlingEvent class.|22c76f5374cd4f2cb514d1739f71bd9d|||
handlingreport|localdatetime|completionTime is a LocalDateTime in the HandlingReport.|eb3708a9577f4446abcb03ddec9546c8|||
handlingeventregistrationattempt|handlingreport|The HandlingReport is used to create a HandlingEventRegistrationAttempt.|eb3708a9577f4446abcb03ddec9546c8|||
voyagenumber|handlingreport|If provided, the HandlingReport has an associated VoyageNumber.|eb3708a9577f4446abcb03ddec9546c8|||
unlocode|handlingeventregistrationattempt|The UnLocode is included in the HandlingEventRegistrationAttempt.|eb3708a9577f4446abcb03ddec9546c8|||
trackingid|handlingreport|The TrackingId is included in the HandlingReport.|eb3708a9577f4446abcb03ddec9546c8|||
type|handlingeventregistrationattempt|The Type of event (e.g., loading, unloading) is included in the HandlingEventRegistrationAttempt.|eb3708a9577f4446abcb03ddec9546c8|||
cargotrackingviewadapter|cargo|is a component of|e4308ecbfea34120bbb8cca569a20cdf|||
cargotrackingviewadapter|list<handlingeventviewadapter>|contains|e4308ecbfea34120bbb8cca569a20cdf|||
cargotrackingviewadapter|stream|converts to|e4308ecbfea34120bbb8cca569a20cdf|||
handlingeventviewadapter|handlingevent|is a view adapter of|e4308ecbfea34120bbb8cca569a20cdf|||
cargotrackingviewadapter|gettrackingid()|extracts the tracking ID from|e4308ecbfea34120bbb8cca569a20cdf|||
cargotrackingviewadapter|getoriginname()|extracts the origin name from|e4308ecbfea34120bbb8cca569a20cdf|||
cargotrackingviewadapter|getcargo().getroutespecification().getorigin()|retrieves the origin of the cargo from|e4308ecbfea34120bbb8cca569a20cdf|||
cargo|routespecification|cargo has a RouteSpecification|8895affb67c14b97872a6d0904dd4541|||
routespecification|origin|RouteSpecification has an Origin|8895affb67c14b97872a6d0904dd4541|||
origin|name|Origin has a Name|8895affb67c14b97872a6d0904dd4541|||
origin|unlocode|Origin has an UnLocode|8895affb67c14b97872a6d0904dd4541|||
routespecification|destination|RouteSpecification has a Destination|8895affb67c14b97872a6d0904dd4541|||
destination|name|Destination has a Name|8895affb67c14b97872a6d0904dd4541|||
destination|unlocode|Destination has an UnLocode|8895affb67c14b97872a6d0904dd4541|||
delivery|lastknownlocation|Delivery has a LastKnownLocation|8895affb67c14b97872a6d0904dd4541|||
lastknownlocation|unlocode|LastKnownLocation has an UnLocode|8895affb67c14b97872a6d0904dd4541|||
lastknownlocation|name|LastKnownLocation has a Name|8895affb67c14b97872a6d0904dd4541|||
delivery|transportstatus|Delivery has a TransportStatus|8895affb67c14b97872a6d0904dd4541|||
itinerary|legs|Itinerary has Legs|8895affb67c14b97872a6d0904dd4541|||
cargo|delivery|Cargo has a Delivery|8895affb67c14b97872a6d0904dd4541|||
legs|isempty|Legs has an isEmpty property|8895affb67c14b97872a6d0904dd4541|||
delivery|misdirected|Delivery has a Misdirected flag|8895affb67c14b97872a6d0904dd4541|||
delivery|unloadedatdestination|Delivery has an UnloadedAtDestination flag|8895affb67c14b97872a6d0904dd4541|||
transportstatus|names|TransportStatus has constants called NAMES|8895affb67c14b97872a6d0904dd4541|||
next expected activity|load|The next expected activity is to LOAD cargo|a9225a1917f545fa891b30fce861a187|||
load|cargo onto voyage|LOAD involves loading cargo onto voyage|a9225a1917f545fa891b30fce861a187|||
load|voyage|LOAD is associated with a specific voyage (voyage number)|a9225a1917f545fa891b30fce861a187|||
load|location|LOAD takes place in a specific location|a9225a1917f545fa891b30fce861a187|||
unload|cargo off of |UNLOAD involves unloading cargo off of the specified voyage number|a9225a1917f545fa891b30fce861a187|||
unload|location|UNLOAD takes place in a specific location|a9225a1917f545fa891b30fce861a187|||
handlingeventviewadapter|handlingevent|HandlingEventViewAdapter is associated with a specific HandlingEvent object|a9225a1917f545fa891b30fce861a187|||
cargo|itinerary|Cargo has an itinerary, which includes expected handling events|a9225a1917f545fa891b30fce861a187|||
track|cargotracker|Cargotracker is a software system for managing cargo and shipments, and Track is a class or interface within this system that provides functionality related to tracking cargo.|2ab01e553502485a888a6d2a904ec376|||
jakarta faces|named|Named is an annotation provided by Jakarta Faces, which is a component-based user interface technology for Java platforms. It specifies that the class or method it is applied to should be given a name that can be used to refer to it from other components in the application.|2ab01e553502485a888a6d2a904ec376|||
jakarta faces|viewscoped|ViewScoped is an implementation of the Component EL Resolver provided by Jakarta Faces. It manages the life cycle of view-scoped managed beans, which are only active for the duration of a user's interaction with a particular view or screen.|2ab01e553502485a888a6d2a904ec376|||
java|serializable|Serializable is an interface provided by Java that allows objects to be serialized and deserialized, which is the process of converting an object into a format that can be stored or transmitted, and then reconverting it back into its original form.|2ab01e553502485a888a6d2a904ec376|||
java|jsonbbuilder|JsonbBuilder is a class provided by Java's JSON Binding API that allows objects to be converted to and from JSON format. It is used in this context to convert the CargoRepository object into a JSON representation.|2ab01e553502485a888a6d2a904ec376|||
java|logger|Logger is a class provided by Java's logging framework, which is used for reporting events that occur within an application. It provides a flexible and customizable mechanism for managing and filtering log messages.|2ab01e553502485a888a6d2a904ec376|||
java|level|Level is a class provided by Java's logging framework, which represents the severity or importance of a particular log message. It provides a hierarchical structure for organizing and prioritizing log messages.|2ab01e553502485a888a6d2a904ec376|||
java|uriencoder|URIEncoder is a class provided by Java's URI encoding and decoding framework. It is used to convert characters in a string into their equivalent percent-encoded representations, which can be used in URLs or other locations where special characters must be represented in a standardized format.|2ab01e553502485a888a6d2a904ec376|||
cargo|trackingid|TrackingId is a unique identifier associated with a particular cargo item, which is used to track its location and status throughout the supply chain. It can be represented as a string or other data type.|2ab01e553502485a888a6d2a904ec376|||
cargo|cargorepository|CargoRepository is an interface that provides access to a collection of Cargo objects, which allows applications to interact with and manage cargo items throughout the supply chain.|2ab01e553502485a888a6d2a904ec376|||
cargo|voyagenumber|VoyageNumber is an identifier that uniquely identifies a particular voyage or shipment, which allows applications to easily differentiate between multiple simultaneous voyages.|2ab01e553502485a888a6d2a904ec376|||
cargo|location|Location represents the physical location where cargo is being handled or transported. It can be represented as a string, such as a city or port name.|2ab01e553502485a888a6d2a904ec376|||
graphtraversalservice|api|GraphTraversalService is a class under the API package in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
pathfinder|organization|Pathfinder is an organization in this context and GraphTraversalService falls under its API package.|fe8377d214f84e3d91b1bddec3249cbb|||
ejb|concept|GraphTraversalService is a concept called EJB (Enterprise JavaBeans) in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
stateless|concept|Stateless is a concept under the EJB concept in this context as GraphTraversalService is annotated with the @Stateless annotation.|fe8377d214f84e3d91b1bddec3249cbb|||
graphdao|dependency|GraphTraversalService has a dependency on GraphDao to perform database operations related to graphs in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
get|http method|The GraphTraversalService class handles the GET HTTP method as it is annotated with the @GET annotation in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
/graphtraversal|url path|GraphTraversalService's endpoint is located at the /graphtraversal URL path in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
produces|annotation|The @Produces annotation specifies the content type returned by GraphTraversalService's methods in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
queryparam|annotation|GraphTraversalService uses the @QueryParam annotation to extract query parameters from HTTP requests in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
localdatetime|concept|GraphTraversalService's method lookupHandlingHistoryOfCargo uses the LocalDateTime concept to handle time-related functionalities in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
chronounit|concept|GraphTraversalService's method lookupHandlingHistoryOfCargo uses the ChronoUnit concept to calculate time durations in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
list|dependency|GraphTraversalService creates a List of HandlingEvents using the handlingEventRepository's lookupHandlingHistoryOfCargo method in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
list<handlingevent>|dependency|GraphTraversalService passes a List<HandlingEvent> to the CargoTrackingViewAdapter constructor in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
cargo|dependency|GraphTraversalService retrieves a Cargo object from the cargoRepository using the trackingId provided as a parameter in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
trackingid|concept|GraphTraversalService's constructor and onTrackById method use the TrackingId concept to handle tracking ID-related functionalities in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
cargorepository|dependency|GraphTraversalService has a dependency on cargoRepository to interact with the database for Cargo retrieval in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
trackingid|parameter|GraphTraversalService's constructor and onTrackById method receive a trackingId parameter from external sources in this context.|fe8377d214f84e3d91b1bddec3249cbb|||
node_1|node_2|edge|chunk_id|node_3
graphdao|dao|is a member variable of the GraphTraversalService class and has a type of GraphDao.|2f1256eac1c443a6af51fa69af6d8bf8|
stateless|graphtraversalservice|is an annotation applied to the GraphTraversalService class, indicating it is stateless and can be created multiple times without state information being lost between requests.|2f1256eac1c443a6af51fa69af6d8bf8|
@stateless|@path|are both annotations applied to the GraphTraversalService class, specifying its web service endpoint and resource path respectively.|2f1256eac1c443a6af51fa69af6d8bf8|
import org.eclipse.pathfinder.internal.graphdao;|dao|is a variable assigned the value of GraphDao from the org.eclipse.pathfinder.internal package.|2f1256eac1c443a6af51fa69af6d8bf8|
list<transitpath>|findshortestpath(...)|is the return type and method name of the findShortestPath() function, which returns a list of TransitPath objects.|2f1256eac1c443a6af51fa69af6d8bf8|
string|originunlocode|is a parameter passed to the findShortestPath() function, which is a String representing an UN location code.|2f1256eac1c443a6af51fa69af6d8bf8|destinationUnLocode
@queryparam|deadline|is an annotation applied to the deadline parameter, indicating it is a query parameter passed in via the URL.|2f1256eac1c443a6af51fa69af6d8bf8|
list<string>|allvertices|is a list of all location UN codes in the system, obtained from the dao object's listLocations() method.|2f1256eac1c443a6af51fa69af6d8bf8|
allvertices|originunlocode|extracted from method call 'List<String> allVertices = dao.listLocations();'|ea3153da8b864c3e8533d112fbed2ae0|
allvertices|destinationunlocode|extracted from method call 'List<String> allVertices = dao.listLocations();'|ea3153da8b864c3e8533d112fbed2ae0|
allvertices|candidatecount|related as 'List<String> allVertices' is used to select a random subset of locations for generating transit paths, and 'int candidateCount = getRandomNumberOfCandidates()'|ea3153da8b864c3e8533d112fbed2ae0|
allvertices|fromunlocode|related as 'List<String> allVertices' is used to select the source location for a transit path, and 'String fromUnLocode = originUnLocode'|ea3153da8b864c3e8533d112fbed2ae0|
allvertices|destinationunlocode|related as 'List<String> allVertices' is used to select the destination location for a transit path, and 'String toUnLocode = (j >= allVertices.size() ? destinationUnLocode : allVertices.get(j))'|ea3153da8b864c3e8533d112fbed2ae0|
fromunlocode|tounlocode|related as both variables are used to traverse between locations for generating transit paths, and 'for (int j = 0; j <= allVertices.size(); ++j)'|ea3153da8b864c3e8533d112fbed2ae0|
fromdate|todate|related as both variables are used to specify the time range for a transit path, and 'for (int j = 0; j <= allVertices.size(); ++j)'|ea3153da8b864c3e8533d112fbed2ae0|
transitedge|fromunlocode|related as 'String fromUnLocode' is used to specify the source location of a transit edge, and 'for (int j = 0; j <= allVertices.size(); ++j)' and 'new TransitEdge(dao.getVoyageNumber(fromUnLocode, toUnLocode), fromUnLocode, toUnLocode, fromDate, toDate))'|ea3153da8b864c3e8533d112fbed2ae0|
transitedge|tounlocode|related as 'String toUnLocode' is used to specify the destination location of a transit edge, and 'for (int j = 0; j <= allVertices.size(); ++j)' and 'new TransitEdge(dao.getVoyageNumber(fromUnLocode, toUnLocode), fromUnLocode, toUnLocode, fromDate, toDate))'|ea3153da8b864c3e8533d112fbed2ae0|
da|listlocations|related as 'List<String> allVertices = dao.listLocations();'|ea3153da8b864c3e8533d112fbed2ae0|
localdatetime|date|related as 'LocalDateTime date = LocalDateTime.now();' and 'LocalDateTime fromDate = nextDate(date);'|ea3153da8b864c3e8533d112fbed2ae0|
transitpath|candidates|related as 'List<TransitPath> candidates = new ArrayList<>(candidateCount);'|ea3153da8b864c3e8533d112fbed2ae0|
transitedge|org.eclipse.pathfinder.api|TransitEdge is a class under the package org.eclipse.pathfinder.api in Eclipse Pathfinder project.|89975f75b4d24583aa1d3af5025aefcc|
java.io.serializable|transitedge|TransitEdge implements Serializable interface in Java to enable its object to be serialized and deserialized by the I/O streams.|89975f75b4d24583aa1d3af5025aefcc|
localdatetime|transitedge|TransitEdge class has two variables of type LocalDateTime, representing departure date and arrival date respectively for cargo route.|89975f75b4d24583aa1d3af5025aefcc|
string|voyagenumber|TransitEdge class has a String variable voyageNumber, which holds the unique identification number for the cargo during its transit.|89975f75b4d24583aa1d3af5025aefcc|TransitEdge
string|fromunlocode|TransitEdge class has a String variable fromUnLocode, which stores the unique code for the port or terminal where cargo departs.|89975f75b4d24583aa1d3af5025aefcc|TransitEdge
string|tounlocode|TransitEdge class has a String variable toUnLocode, which represents the unique code for the port or terminal where cargo arrives.|89975f75b4d24583aa1d3af5025aefcc|TransitEdge
transitedge|voyagenumber|is a part of|dd1098e7bd6a4f39a082c27dbb04cf82|
transitedge|fromunlocode|starts from|dd1098e7bd6a4f39a082c27dbb04cf82|
transitedge|tounlocode|ends at|dd1098e7bd6a4f39a082c27dbb04cf82|
localdatetime|fromdate|is associated with|dd1098e7bd6a4f39a082c27dbb04cf82|
transitpath|transitedges|comprises|dd1098e7bd6a4f39a082c27dbb04cf82|
list|transitedges|contains|dd1098e7bd6a4f39a082c27dbb04cf82|
length|e|is a property of the object 'e'|64dd01da6cdb4b908dc71a2ba7593b48|
array|n|the variable 'n' contains the value 'array' which is a data type|64dd01da6cdb4b908dc71a2ba7593b48|
number|t|the variable 't' contains the value 'number' which is a data type|64dd01da6cdb4b908dc71a2ba7593b48|
jquery|s.fn|'jquery' is the name of the prototype property for the S.fn object|64dd01da6cdb4b908dc71a2ba7593b48|
constructor|s.prototype|'constructor' is a built-in JavaScript property of the 'prototype' object for the S class|64dd01da6cdb4b908dc71a2ba7593b48|
queryselectorall|c|is a method of the Element interface that allows you to select a list of elements in the DOM using a CSS selector.|708331fb00ed485690fdbb5820eea3be|
htmlcollection|n|is an array-like object representing a collection of HTML elements, such as those returned by getElementsByTagName(), getElementsByName() or querySelectorAll().|708331fb00ed485690fdbb5820eea3be|
getelementbyid|i|is a method used to get an element with a specific id attribute in JavaScript.|708331fb00ed485690fdbb5820eea3be|
qsa|d|stands for Query Selector All and is a method available on the Document and Element interfaces, in Web standards, that allows us to select DOM elements based on a CSS3 selector, such as class, ID, tag or attribute filters.|708331fb00ed485690fdbb5820eea3be|
queryselectorall|c|is an array-like object representing the matched elements by querySelectorAll().|708331fb00ed485690fdbb5820eea3be|
getelementsbytagname|t|is a method of the Element interface that returns an HTMLCollection consisting of all child elements of a given node that match a specified tag name, either as a string or as an element.|708331fb00ed485690fdbb5820eea3be|
getelementsbyname|u[3]|is a method available on the Element and Document objects in JavaScript that returns an HTMLCollection of all elements with the specified name attribute.|708331fb00ed485690fdbb5820eea3be|
!e(t)|e|is called with argument t|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
catch (e)|e|assigned to variable e in a catch block|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
return !1|!1|returns the value !1|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
finally||is a block that executes regardless of whether an exception is thrown or not|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
t.parentnode|t|returns the parent node of t|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
t||is a variable that seems to be used as an argument or for removing child nodes from its parent|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
b.attrhandle|n|assigns a value to the attrHandle property of b's property named 'n'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
n||seems to be an array or list of terms related to 'b' and their respective functions for handling attributes|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
t && 1 === e.nodetype && 1 === t.nodetype||is a condition that checks if both 'e' and 't' are nodes of type 1|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
n && while (n = n.nextsibling) if (n === t) return -1;||seems to iterate through the siblings of 'n' until 't' is found, returning a value of -1|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
e.parentnode && !1 === e.disabled||is a condition that checks if the parent node of 'e' has its disabled property set to false|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
e||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
t||is also used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
n && while (n = n.nextsibling) if (n === t) return -1;||is also used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
e ? 1 : -1||returns a value of 1 if 'e' is true, or -1 otherwise|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
input||is used as an argument in the de function, representing the input type for HTML elements|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
n && while (n = n.nextsibling) if (n === t) return -1;||is also used as an argument in the ge function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
e||is also used as an argument in the ge function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
a([], e.length, o)||creates a new array with 'e' as the length and initial value 'o'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
i||is used in a loop to iterate through an array created by the ve function|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
e[n]||retrieves the value of 'e' at index 'n'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
i--||decrements the value of 'i'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
n = r[i]||assigns the current index 'i' to a variable named 'n', as if to iterate backwards through the array|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
e && while (e = e.nextelementsibling) if (e.disabled !== null) return -1;||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
b||is used as an argument in the fe function, representing a property named 'b'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
n && while (n = n.nextsibling) if (n === b) return -1;||is also used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
i||is also used in a loop to iterate through an array created by the ve function|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
e||is also used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
i--||decrements the value of 'i'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
e && while (e = e.nextelementsibling) if (e.disabled !== null) return -1;||is also used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
y && while (y = y.nextelementsibling) if (y === b) return -1;||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
a([], y.length, o)||creates a new array with 'y' as the length and initial value 'o'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
i||is used in a loop to iterate through an array created by the ve function|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
y[n]||retrieves the value of 'y' at index 'n'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
i--||decrements the value of 'i'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
n = y[i]||assigns the current index 'i' to a variable named 'n', as if to iterate backwards through the array|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
i||is used in a loop to iterate through an array created by the ve function|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
y[n]||retrieves the value of 'y' at index 'n'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
i--||decrements the value of 'i'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
n = y[i]||assigns the current index 'i' to a variable named 'n', as if to iterate backwards through the array|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
i||is used in a loop to iterate through an array created by the ve function|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
y[n]||retrieves the value of 'y' at index 'n'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
i--||decrements the value of 'i'|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
n = y[i]||assigns the current index 'i' to a variable named 'n', as if to iterate backwards through the array|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
y||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
x && while (x = x.previouselementsibling) if (x === y) return -1;||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
y||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
x && while (x = x.previouselementsibling) if (x === y) return -1;||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
y||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
x && while (x = x.previouselementsibling) if (x === y) return -1;||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
y||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
x && while (x = x.previouselementsibling) if (x === y) return -1;||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
y||is used as an argument in the pe function, representing a node|91bfeb5c9d5e48d0a0a12dcd6a9e4a9f|
context|extracted ontology|refers to the process of identifying and defining key concepts within a given context|be1cdb4758474c92ad498e98f38a7fe0|
e|p|is related to through the ownerDocument property, which points to the document node containing both elements|be1cdb4758474c92ad498e98f38a7fe0|
r|c|has a different node type and is not equal to C (the root element of the document), while still being part of the same document tree|be1cdb4758474c92ad498e98f38a7fe0|
a|c|represents the documentElement property, which points to the root element of the document tree|be1cdb4758474c92ad498e98f38a7fe0|
e|i(c)|indicates that C does not have a default view (a window object representing the content of the document), while its parent node does|be1cdb4758474c92ad498e98f38a7fe0|
p|c|is different from C and has a default view that is not the topmost window object in the hierarchy|be1cdb4758474c92ad498e98f38a7fe0|
n|c|represents the default view of the current document, which can be accessed using the document.defaultView property|be1cdb4758474c92ad498e98f38a7fe0|
a|c|is a child node of C and its position in the tree is changed as part of a scope-related test|be1cdb4758474c92ad498e98f38a7fe0|
d.scope|ce|indicates that the scope property of d (a hypothetical object) has been initialized by calling the ce function, which performs some operations on C and returns it|be1cdb4758474c92ad498e98f38a7fe0|
c.getelementsbytagname|length|shows that getElementsByTagName is a property of C's prototype chain, and its value (a length property) is not equal to the array-like collection returned by this method|be1cdb4758474c92ad498e98f38a7fe0|
k.test|c.getelementsbyclassname|suggests that K is a test function for CSS class selectors, and getElementsByClassName is a property of C's prototype chain that either returns an array-like collection or undefined|be1cdb4758474c92ad498e98f38a7fe0|
e|getelementsbyname|shows that e (an element) can be located by its name attribute using the getElementsByName method of C's prototype chain, but only if it is defined in the context|be1cdb4758474c92ad498e98f38a7fe0|
s|c.getelementsbyid|indicates that S (an ID value) can be used as a parameter for C's getElementsById method to locate an element by its id attribute, but only if it exists in the context|be1cdb4758474c92ad498e98f38a7fe0|
b.filter.id|e|shows that b is a hypothetical object containing filter properties, and its ID property (which filters elements by their id attribute) has been initialized using e as the target element|be1cdb4758474c92ad498e98f38a7fe0|
b.find.id|e|suggests that b contains a find method that can locate an element by its id attribute, but only if it is defined in the context|be1cdb4758474c92ad498e98f38a7fe0|
d|qsa|the method 'qsa' is a feature supported by the DOM in IE8 and later versions, whereas 'querySelectorAll' is part of the W3C Selectors API.|3c326474d0674b31b9a2042a87ec2286|
a|id|the attribute 'id' is used to uniquely identify HTML elements within a document, and can be accessed using the 'getElementById' method in JavaScript.|3c326474d0674b31b9a2042a87ec2286|
tag|getelementsbytagname|the method 'getElementsByTagName' is used to retrieve a collection of HTML elements based on their tag name.|3c326474d0674b31b9a2042a87ec2286|
class|getelementsbyclassname|the method 'getElementsByClassName' is used to retrieve a collection of HTML elements based on their class name.|3c326474d0674b31b9a2042a87ec2286|
[*^$]|msallowcapture|the attribute '[*^$]=' with the value 'msallowcapture' is used in Internet Explorer to allow event bubbling to be prevented for elements that do not have this attribute set.|3c326474d0674b31b9a2042a87ec2286|
"'""'"||the use of single or double quotes around an attribute value is optional, but recommended for readability and consistency.|3c326474d0674b31b9a2042a87ec2286|
selected||the 'selected' attribute can be used to pre-select an option in a dropdown menu or listbox.|3c326474d0674b31b9a2042a87ec2286|
se|matches|is a function that is part of the se module in jQuery, which is used for filtering and traversing elements in a DOM tree based on a selector expression. It returns a new jQuery object containing the selected elements.|b27f6555bc024e6face5a6383a5d8113|
se|matchesselector|is another function available in the se module of jQuery, which checks if an element matches a given CSS selector expression. It returns true or false based on whether the element satisfies the selector condition.|b27f6555bc024e6face5a6383a5d8113|
se|contains|is a function provided by jQuery to check if an element contains another specified element within its DOM tree. It returns true or false based on whether the containing relationship exists between the elements.|b27f6555bc024e6face5a6383a5d8113|
attr|se.attr|is a property of jQuery's attr module, which provides methods for setting and getting attributes of DOM elements. In this case, se.attr is being called to return the value of an attribute associated with an element.|b27f6555bc024e6face5a6383a5d8113|
pseudos|contains|The pseudos function takes a selector and checks if it contains the specified element using the contains method.|5db40c4d2a1c493397f429fe41bd924c|
pseudos|has|The pseudos function also has a 'has' property that returns a selector that matches elements with the specified attribute or class.|5db40c4d2a1c493397f429fe41bd924c|
pseudos|lang|Additionally, there is a 'lang' property in pseudos that filters elements based on their language attribute.|5db40c4d2a1c493397f429fe41bd924c|
pseudos|target|The pseudos function also includes the 'target' property which matches elements with the specified fragment identifier in their URL.|5db40c4d2a1c493397f429fe41bd924c|
pseudos|root|Moreover, there is a 'root' property that filters elements based on whether they are the root element of the document or not.|5db40c4d2a1c493397f429fe41bd924c|
pseudos|focus|The pseudos function also includes the 'focus' property which matches elements that currently have focus in the browser window.|5db40c4d2a1c493397f429fe41bd924c|
pseudos|enabled|There is a 'enabled' property that filters elements based on whether they are enabled or not.|5db40c4d2a1c493397f429fe41bd924c|
pseudos|disabled|Lastly, there is a 'disabled' property that filters elements based on whether they are currently disabled or not.|5db40c4d2a1c493397f429fe41bd924c|
context|selected|is a function that returns the selectedIndex of an element's parent node when it is selected. If the element is not selectable, the pseudoclass empty can be used to check if the element has any children.|9e22b78fc11d4cb0b7d8b0c5da99b258|
element|parentnode|is a relationship between an element and its parent node. This relationship can be checked using the selected function, which returns true if the element's parent node is selected, and false otherwise.|9e22b78fc11d4cb0b7d8b0c5da99b258|
j.test()|header|is a relationship between regular expressions and elements with certain nodeNames, in this case, headers.|9e22b78fc11d4cb0b7d8b0c5da99b258|
q.test()|input|is a relationship between regular expressions and input elements.|9e22b78fc11d4cb0b7d8b0c5da99b258|
input|type|is a property of input elements that specifies their type. In this case, the relationship is between the input element and its type, which can be either 'text' or another value.|9e22b78fc11d4cb0b7d8b0c5da99b258|
first|0|is a function that returns an array containing only the first index of the specified context.|9e22b78fc11d4cb0b7d8b0c5da99b258|
last|(t - 1)|is a function that returns an array containing only the last index of the specified context, where 't' represents the total number of elements in the context.|9e22b78fc11d4cb0b7d8b0c5da99b258|
eq|(n < 0 ? n + t : n)|is a function that returns an array containing the indexes of the specified element, based on its position relative to the total number of elements in the context.|9e22b78fc11d4cb0b7d8b0c5da99b258|
even|(for (var n = 0; n < t; n += 2)e.push(n); return e)|is a function that returns an array containing only the indexes of even elements in the specified context.|9e22b78fc11d4cb0b7d8b0c5da99b258|
odd|(for (var n = 1; n < t; n += 2)e.push(n); return e)|is a function that returns an array containing only the indexes of odd elements in the specified context.|9e22b78fc11d4cb0b7d8b0c5da99b258|
lt|(for (var r = n < 0 ? n + t : t < n ? t : n; 0 <= --r;)e.push(r); return e)|is a function that returns an array containing the indexes of all elements before the specified element in the specified context.|9e22b78fc11d4cb0b7d8b0c5da99b258|
gt|(for (var r = n < 0 ? n + t : t < n ? t : n; 0 <= --r;)e.push(r); return e)|is a function that returns an array containing the indexes of all elements after the specified element in the specified context.|9e22b78fc11d4cb0b7d8b0c5da99b258|
h|t|is a specific matcher for selecting HTML tags. T is a regular expression used to select elements based on their tag names.|cf38247e441e49bfa2c3159ca4a1729c|
s|:|is a selector that targets elements by their attribute selectors, where : is the pseudoclass used in CSS for specifying element attributes.|cf38247e441e49bfa2c3159ca4a1729c|
s|pseudos|is an array in S that contains various pseudo-classes such as :first-child, :hover, etc., which are used to target specific states or conditions of elements.|cf38247e441e49bfa2c3159ca4a1729c|
s|uniquesort|is a method inherited from d that sorts and removes duplicate nodes in the DOM tree based on their unique identifiers.|cf38247e441e49bfa2c3159ca4a1729c|
s|gettext|is a method inherited from d that retrieves the plain text content of an element or multiple elements.|cf38247e441e49bfa2c3159ca4a1729c|
s|isxmldoc|is a method inherited from d that checks whether an element is an XML document or not.|cf38247e441e49bfa2c3159ca4a1729c|
s|contains|is a method inherited from d that returns true if the current node contains another given node, and false otherwise.|cf38247e441e49bfa2c3159ca4a1729c|
s|escapeselector|is a method inherited from d that escapes special characters in a CSS selector to make it safe for use as an attribute value or as the value of the [selector] property in CSS.|cf38247e441e49bfa2c3159ca4a1729c|
m|grep|is a method inherited from S that filters the elements based on a selector expression, and returns an array of elements that match the selector. M is a helper function for mimetype detection.|cf38247e441e49bfa2c3159ca4a1729c|
n|needscontext|is a regular expression used to detect whether an HTML tag needs to be nested inside another element to be correctly interpreted, such as <style> and </style>.|cf38247e441e49bfa2c3159ca4a1729c|
n|matchesselector|is a method inherited from HTMLElement that checks whether an HTML element matches the specified CSS selector expression or not.|cf38247e441e49bfa2c3159ca4a1729c|
s|o|S is a jQuery plugin and O is a function defined inside S.fn|8c7c0f0dd01b45f48f54716698246dd8|
e|t|Both e and t are passed as arguments to the has() and closest() functions of S|8c7c0f0dd01b45f48f54716698246dd8|
a|o|A is a string value passed as an argument to the closest() function, while O is defined inside S.fn|8c7c0f0dd01b45f48f54716698246dd8|
e|this|Both e and this are used in the has() and closest() functions of S, where this represents the current set of DOM elements being operated upon by S|8c7c0f0dd01b45f48f54716698246dd8|
o(e, t)|s(e, this)|Both O() and S() are functions called inside has() and closest() functions of S. They take arguments e and t respectively|8c7c0f0dd01b45f48f54716698246dd8|
s.fn|r|is called with a function that returns a promise, which is then passed to 'done' or 'fail' in order to handle its resolution or rejection.|5f53119b581641b4963faf1ec761aad9|
e|i|either has a 'promise' property that is called, or has an 'then' method that returns a promise, which is then handled by 'done' or 'fail'.|5f53119b581641b4963faf1ec761aad9|
i.call(e)|t|is passed the arguments 't' and 'n', respectively, as its callbacks for successful resolution or rejection.|5f53119b581641b4963faf1ec761aad9|
i.call(e, t, n)|r|is called with 't' and 'n' passed as arguments, along with any additional arguments specified by 'r'.|5f53119b581641b4963faf1ec761aad9|
node_1|node_2|edge|chunk_id|node_3|node_4
e|r|is equal to|4481a1b929364735a288013ce3604c63||
n|{}|has value of|4481a1b929364735a288013ce3604c63||
s|e|is a match for pattern P|4481a1b929364735a288013ce3604c63||
r.each|"e.match(p) || []"|applies to|4481a1b929364735a288013ce3604c63||
n|{}|is replaced by true|4481a1b929364735a288013ce3604c63||
deferred|then|A method that can be called to continue using the result of a Deferred object asynchronously. The function passed to then receives both the original Deferred object and a resolution value, and returns a new Deferred object, whose promise can be used as the continuation.|bf2dd46f5ef54c98b29603d60bf9cbd5||
deferred|done|A property that is set to a function callback when a Deferred object is resolved successfully. This callback will be called with any result value produced by the resolution.|bf2dd46f5ef54c98b29603d60bf9cbd5||
deferred|reject|A property that is set to a function callback when a Deferred object is rejected with an error. This callback will be called with the rejection reason produced by the error.|bf2dd46f5ef54c98b29603d60bf9cbd5||
deferred|fail|An alias for the 'reject' property of a Deferred object, used in jQuery 1.x compatibility mode.|bf2dd46f5ef54c98b29603d60bf9cbd5||
deferred|resolve|A property that is set to a value produced by the successful resolution of a Deferred object. This value will be passed as an argument to any callbacks registered with 'done' or 'then'.|bf2dd46f5ef54c98b29603d60bf9cbd5||
deferred|resolved|An alias for the 'resolve' property of a Deferred object, used in jQuery 1.x compatibility mode.|bf2dd46f5ef54c98b29603d60bf9cbd5||
deferred|notify|A method that can be called to propagate intermediate update values during the resolution process of a Deferred object. The function passed to notify receives an update value, and returns a new Deferred object, whose promise can be used as the continuation.|bf2dd46f5ef54c98b29603d60bf9cbd5||
deferred|progress|An alias for the 'notify' method of a Deferred object, used in jQuery 1.x compatibility mode.|bf2dd46f5ef54c98b29603d60bf9cbd5||
deferred|state|A property that is initially set to 'pending', and later changed to 'resolved' or 'rejected' when the Deferred object is resolved or rejected. Other functions, such as 'done', 'fail', 'notify', and 'resolve' can be used to manipulate this state.|bf2dd46f5ef54c98b29603d60bf9cbd5||
deferred|always|A method that is called after the resolution or rejection of a Deferred object, regardless of whether it was resolved successfully or rejected with an error. This function can be used to ensure that certain tasks are performed in all cases.|bf2dd46f5ef54c98b29603d60bf9cbd5||
expando|cache|The 'expando' property of an object is used to store a private cache for the object. The 'cache' method of the constructor returns or sets this cache, which can be accessed and modified using the 'get', 'set', and 'access' methods.|c44b54cc8ca14abea6fcf6b64aaccaf5||
g|uid|The 'uid' property is a unique identifier used to generate GUIDs for instances of the constructor. It is incremented each time a new instance is created, and is accessible only from within the constructor.|c44b54cc8ca14abea6fcf6b64aaccaf5||
e|t|In the context, 'e' represents an element or node, while 't' is a function passed to it. The 'call' method of this function is used to execute the function with the provided arguments.|c44b54cc8ca14abea6fcf6b64aaccaf5||
s|u|In a loop, 's' and 'u' represent indices for accessing elements in an array passed to the constructor. They are used to iterate over these elements.|c44b54cc8ca14abea6fcf6b64aaccaf5||
x|u|The 'X' and 'U' methods are helper functions that transform CSS styles into camelCase format, and uppercase the first letter of each subsequent word.|c44b54cc8ca14abea6fcf6b64aaccaf5||
void 0|n|The 'void 0' expression is used to set a variable to an undefined value. In this context, 'n' represents the new value assigned to a property using the 'set' method.|c44b54cc8ca14abea6fcf6b64aaccaf5||
r|t|In the 'cache' method, 'r' and 't' represent variables used for looping through object properties. In the 'get' method, they are used to access a specific property from the cache.|c44b54cc8ca14abea6fcf6b64aaccaf5||
e|t|In the context, 'e' and 't' represent variables used for storing and accessing cached data. The 'expando' property of an object is used to store this cache, which can be accessed using the 'cache', 'get', 'set', and 'access' methods.|c44b54cc8ca14abea6fcf6b64aaccaf5||
void 0|n|In the 'remove' method, 'n' represents a variable used to store the new value assigned to a property using the 'set' method. This value is only accessed if it has been provided.|c44b54cc8ca14abea6fcf6b64aaccaf5||
t|r|In the 'remove' method, 't' and 'r' represent arrays used for storing and accessing property names to be removed. These arrays are accessed using the 'in' operator.|c44b54cc8ca14abea6fcf6b64aaccaf5||
e|r|In the context, 'e' represents an object or element, while 'r' is a property of this object used to store cached data. In the 'remove' method, this data is accessed and modified using the 'delete' operator.|c44b54cc8ca14abea6fcf6b64aaccaf5||
g|uid|The 'uid' property of the constructor 'G' is a unique identifier used to generate GUIDs for instances of this constructor. It is incremented each time a new instance is created, and is accessible only from within the constructor.|c44b54cc8ca14abea6fcf6b64aaccaf5||
s|expando|In the context, 'S' is a helper function used to generate GUIDs for objects. Its 'expando' property is used to store a unique identifier for each object.|c44b54cc8ca14abea6fcf6b64aaccaf5||
queue|fx|is a type of queue that is used to manage asynchronous function execution in JavaScript. It allows for multiple functions to be added and executed in the order they were added.|63289aff5c1d45f0b8d0cb736309c306||
each|e|is a method provided by jQuery that iterates through each element (stored in variable e) in the current selection and performs some action (defined by an anonymous function) on it.|63289aff5c1d45f0b8d0cb736309c306||
set|n|is a method provided by jQuery that adds a new key-value pair to the object stored in variable t, using variable n as the key and variable e as the value.|63289aff5c1d45f0b8d0cb736309c306||
remove|e|is a method provided by jQuery that removes the specified key (stored in variable e) from the object stored in variable t, if it exists.|63289aff5c1d45f0b8d0cb736309c306||
e|documentfragment|E.createDocumentFragment() is used to create a DocumentFragment object.|fe57c6ec97034e9a92a16df46ac2b381||
input|checked|The 'checked' attribute of an input element is accessed and manipulated in this context.|fe57c6ec97034e9a92a16df46ac2b381||
textarea|x|A textarea element with the initial content 'x' is created and stored for later reference.|fe57c6ec97034e9a92a16df46ac2b381||
option||The initial value of an option element is checked when cloning it.|fe57c6ec97034e9a92a16df46ac2b381||
table|<colgroup>|A table element is created along with its nested colgroup element.|fe57c6ec97034e9a92a16df46ac2b381||
tbody|<tr>|The tbody and tr elements are used to create a table body and a table row respectively.|fe57c6ec97034e9a92a16df46ac2b381||
select|multiple|A select element with the 'multiple' attribute is accessed and manipulated.|fe57c6ec97034e9a92a16df46ac2b381||
y|e|set function is called with event (e) and index (i), returning false to prevent default behavior if multiple handlers exist for this type of event on the same element. If no previous handler exists, add a special event object for the given event type (i) to the global events object.|18463cb4487541c1be884e6a2c0da39d||
s|event|object containing the global events object and an 'add' function that adds event handlers to either a specific element (t) or globally for a given event type (e) and index (i). This function also sets a default namespace value of undefined.|18463cb4487541c1be884e6a2c0da39d||
s.event|global|object containing all global event handlers, accessed using the 'global' property of the event object.|18463cb4487541c1be884e6a2c0da39d||
s.event|add|function that adds event handlers to either a specific element (t) or globally for a given event type (e) and index (i). This function also creates the 'events' object for an element (v) if it does not already exist, and sets a default handler (a) for this element.|18463cb4487541c1be884e6a2c0da39d||
s.event|handle|function that returns the event handling function for the given element (t), or creates it if it does not already exist.|18463cb4487541c1be884e6a2c0da39d||
t|events|object containing all event handlers for a specific element (t).|18463cb4487541c1be884e6a2c0da39d||
s.event|dispatch|function that triggers an event handler for the given event type (e) and index (i), returning null.|18463cb4487541c1be884e6a2c0da39d||
e|type|string representing the name of the event being triggered.|18463cb4487541c1be884e6a2c0da39d||
g||space-separated list of event types (e) for which a given element (t) has registered handlers, used to determine whether multiple namespace events need to be dispatched.|18463cb4487541c1be884e6a2c0da39d||
d|origtype|string representing the original event type (e) that was triggered before it was transformed by a namespaced handler.|18463cb4487541c1be884e6a2c0da39d||
r|data|object containing any additional data passed to an event handler during its invocation.|18463cb4487541c1be884e6a2c0da39d||
n|guid|unique identifier for a specific event handler, used to avoid conflicts with other handlers registered for the same event type (e) and index (i).|18463cb4487541c1be884e6a2c0da39d||
i||space-separated list of CSS selectors (i) used to delegate event handling from an ancestor element (t) to descendant elements (n) that match the specified selector.|18463cb4487541c1be884e6a2c0da39d||
f||space-separated list of namespaced event types (d) for which a given element (t) has registered handlers, used to determine whether multiple namespace events need to be dispatched.|18463cb4487541c1be884e6a2c0da39d||
v|handle|function that returns the event handling function for a specific element (t).|18463cb4487541c1be884e6a2c0da39d||
re||regular expression used to test whether a given CSS selector (i) matches the requirements for delegate event handling.|18463cb4487541c1be884e6a2c0da39d||
y.get|e|function that returns the event object for the given index (i).|18463cb4487541c1be884e6a2c0da39d||
s.event|special|object containing additional event handling functionality for specific event types (e) and namespaces.|18463cb4487541c1be884e6a2c0da39d||
n||space-separated list of CSS selectors (i) used to delegate event handling from an ancestor element (t) to descendant elements (n) that match the specified selector, as accessed through the 'delegate' property of the 'special' object.|18463cb4487541c1be884e6a2c0da39d||
s.event|namespace|string used to namespace events for a specific element (t).|18463cb4487541c1be884e6a2c0da39d||
s|c|c is a property of S|af76baa28d4240d19c7ea1678b73e152||
type|d|d is the value assigned to the property 'type' in this context|af76baa28d4240d19c7ea1678b73e152||
origtype|g|g is the original type of c before it was extended with new properties|af76baa28d4240d19c7ea1678b73e152||
data|r|r is the data associated with c in this context|af76baa28d4240d19c7ea1678b73e152||
handler|n|n is the function that handles events related to c in this context|af76baa28d4240d19c7ea1678b73e152||
guid|n.guid|the GUID of n is also associated with c in this context|af76baa28d4240d19c7ea1678b73e152||
selector|i|i is a selector function that can be used to select elements with a similar type as c|af76baa28d4240d19c7ea1678b73e152||
needscontext|i && s.expr.match.needscontext.test(i)|whether the selector function i requires context to be meaningful, as indicated by a regular expression test|af76baa28d4240d19c7ea1678b73e152||
namespace|h.join('.' )|the namespace of c in this context is specified by joining the values of h with a dot separator|af76baa28d4240d19c7ea1678b73e152||
s|event|is a type of event object in JavaScript that provides information about an occurrence, such as mouse clicks or form submissions. S.Event is a constructor function in the jQuery library that wraps the native Event object and adds additional functionality to it.|450af6c55c5f4f8a9b64b4461bbe3ea2||
s|removeevent|is a method of the S object in jQuery that removes an event listener from an element. It takes three arguments: the element, the event type, and the function to be removed.|450af6c55c5f4f8a9b64b4461bbe3ea2||
e|target|is a property of the Event object in JavaScript that represents the element on which the event occurred. In the context provided, it is being accessed by the S.Event constructor to differentiate between events triggered by user-defined elements and native events.|450af6c55c5f4f8a9b64b4461bbe3ea2||
s|originalevent|is a property of the S.Event constructor in jQuery that saves the original Event object passed to it, allowing additional properties and functions to be added without modifying the native Event object.|450af6c55c5f4f8a9b64b4461bbe3ea2||
s|fix|is a function of the S.Event constructor in jQuery that returns either the original event object or a new one with additional properties and functions if it is not an Event object already.|450af6c55c5f4f8a9b64b4461bbe3ea2||
s|special|is an object in jQuery's S.Event constructor that contains predefined event types and their properties and behavior, such as click events with default prevention and preventing the browser from navigating away from a page.|450af6c55c5f4f8a9b64b4461bbe3ea2||
cancelable|eventphase|The 'cancelable' property of an event object indicates whether the default action should be prevented. The 'eventPhase' property of an event object represents the event propagation phase.|0627f4b8099e4af18560c845e5da7d89||
altkey|metakey|The 'altKey' and 'metaKey' properties of an event object represent modifier keys that were pressed when the event was triggered.|0627f4b8099e4af18560c845e5da7d89||
charcode|keycode|The 'charCode' and 'keyCode' properties of an event object represent the Unicode value and the key code, respectively, for the key pressed when the event was triggered.|0627f4b8099e4af18560c845e5da7d89||
changedtouches|targettouches|The 'changedTouches' and 'targetTouches' properties of an event object represent touch lists for all touches that were active before the event was triggered and are still active after it.|0627f4b8099e4af18560c845e5da7d89||
button|buttons|The 'button' property of a mouse event represents which mouse button is currently being pressed. The 'buttons' property of a mouse event represents the state of all mouse buttons at the time the event was triggered.|0627f4b8099e4af18560c845e5da7d89||
clientx|offsetx|The 'clientX' and 'offsetX' properties of an event object represent the x-coordinate, in pixels, of the mouse cursor relative to the client area and the element, respectively, when the event was triggered.|0627f4b8099e4af18560c845e5da7d89||
clienty|offsety|The 'clientY' and 'offsetY' properties of an event object represent the y-coordinate, in pixels, of the mouse cursor relative to the client area and the element, respectively, when the event was triggered.|0627f4b8099e4af18560c845e5da7d89||
code|char|The 'code' property of an event object represents the Unicode value for the key pressed when the event was triggered. The 'char' property of a keyboard event represents the character generated by the key press.|0627f4b8099e4af18560c845e5da7d89||
ctrlkey|shiftkey|The 'ctrlKey' and 'shiftKey' properties of an event object represent whether the Ctrl or Shift keys, respectively, were pressed when the event was triggered.|0627f4b8099e4af18560c845e5da7d89||
eventphase|targettouches|The 'eventPhase' property of an event object represents the event propagation phase, and the 'targetTouches' property represents touch lists for all touches currently interacting with the target element.|0627f4b8099e4af18560c845e5da7d89||
pagex|screenx|The 'pageX' and 'screenX' properties of an event object represent the x-coordinate, in pixels, of the mouse cursor relative to the page or the screen when the event was triggered.|0627f4b8099e4af18560c845e5da7d89||
pointerid|pointertype|The 'pointerId' and 'pointerType' properties of an event object represent a unique identifier for a pointing device, and the type of pointer device used when the event was triggered, respectively.|0627f4b8099e4af18560c845e5da7d89||
which|buttons|The 'which' property of an event object represents the numeric value for the button pressed, and the 'buttons' property represents the current state of all mouse buttons.|0627f4b8099e4af18560c845e5da7d89||
on|off|removes an event handler from all currently selected elements for the specified event type(s).|c301458dab4b4a5fa7a1f2f64bdc91a8||
each|fn.extend|is a utility function for jQuery that can be used to iterate over a jQuery object, execute a provided function once for each matched element, and return the original set of matched elements.|c301458dab4b4a5fa7a1f2f64bdc91a8||
event.special|s.each|allows you to add event handler functions for events not native to a DOM element, such as mouseenter and mouseleave.|c301458dab4b4a5fa7a1f2f64bdc91a8||
focusin|focusout|are the corresponding event types for the focus event that occur when an element gains or loses focus, respectively.|c301458dab4b4a5fa7a1f2f64bdc91a8||
mouseenter|mouseleave|are event types that are bound to an element's ancestors instead of the element itself, allowing for more fine-grained control over which elements trigger a given behavior.|c301458dab4b4a5fa7a1f2f64bdc91a8|pointerenter|pointerleave
event.special|bindtype|is used to define a delegate event type that can be bound to ancestor elements, and is especially useful for attaching event handlers to dynamic content.|c301458dab4b4a5fa7a1f2f64bdc91a8||
event.special|handle|is used to define the handler function for a delegate event type, allowing you to specify how the event should be handled when it occurs on an ancestor element.|c301458dab4b4a5fa7a1f2f64bdc91a8||
s|pe|is a method under the S jQuery plugin. It is used to append HTML or replace all elements in the current selection with new ones. Pe, on the other hand, is an alias for the insertBefore and insertAfter methods that allow inserting new elements before or after the current selection.|47c1ea561d4544b6966c41891e283b3a||
ve|s.cleandata|is a method under the jQuery library that removes unnecessary data from elements and their events during document unloading. S.cleanData is called before removing an element using the remove() or replaceWith() methods.|47c1ea561d4544b6966c41891e283b3a||
e|t|in this context, e represents the HTML code to be inserted into the current selection using the html() method. T refers to the current selected element or its parent node.|47c1ea561d4544b6966c41891e283b3a||
e|n|when replacing all elements in the current selection using the replaceAll() method, e represents the new HTML code and n is an empty array used to store the removed elements.|47c1ea561d4544b6966c41891e283b3a||
l|o|s.notifyWith(o, [l, 1, 0])|7be2b90c8b4a428782b82da3dfe2f537||
l|e|s.rejectWith(o, [l, e]) && this|7be2b90c8b4a428782b82da3dfe2f537||
c|l|for (n in l.props)|7be2b90c8b4a428782b82da3dfe2f537||
c|l.opts|specialEasing|7be2b90c8b4a428782b82da3dfe2f537||
c|l.opts.specialeasing|S.cssHooks[r] && 'expand' in a|7be2b90c8b4a428782b82da3dfe2f537||
o|e|"l.props[n] || (l.props[n] = o[n], t[n] = i)"|7be2b90c8b4a428782b82da3dfe2f537||
c|o|S._queueHooks(l.elem, l.opts.queue).stop|7be2b90c8b4a428782b82da3dfe2f537||
node_1|node_2|edge|chunk_id|type
e|p|e is a variable that matches a pattern called P using JavaScript's built-in regular expression (RegExp) class. This variable is used in the context to store and manipulate strings or other data.|eac50d940a1640e28f5bb66e0cc3469c|
e|t|In this context, e and t are related as they both appear within a for loop. The loop iterates over the array e, which contains elements that will be processed by the functions within the ft.tweeners array.|eac50d940a1640e28f5bb66e0cc3469c|
e|n|In this context, e and n are related as they both appear within a loop variable initializer statement (for (var n, r = 0...). The variables e and n are being assigned values simultaneously.|eac50d940a1640e28f5bb66e0cc3469c|
e.style|h|In this context, e.style and h are related as they both appear within an object reference statement (e.style) to access the inline styles of the element with ID 'e'.|eac50d940a1640e28f5bb66e0cc3469c|
p|this|In this context, 'this' refers to the current object (in this case, p) and is being passed as an argument to the methods always() and done(). This indicates a potential method chaining mechanism.|eac50d940a1640e28f5bb66e0cc3469c|
e|fxshow|In this context, e and fxshow are related as they both appear within an object property reference statement (Y.get(e, 'fxshow')). This indicates that the element with ID 'e' may have animations or effects applied to it.|eac50d940a1640e28f5bb66e0cc3469c|
p|always()|In this context, p and always() are related as they both appear within a function call statement (p.always(...)). This indicates that the method always() is being called on the object 'p'.|eac50d940a1640e28f5bb66e0cc3469c|
e|t|is a shortcut for accessing the element's attribute through its jQuery object. If multiple arguments are passed, they will be set as the element's attributes.|0b77c42f09ad41be99946f3609a6edde|access
s.expr|attrhandle|is an object that provides pre-compiled expression to parse and manipulate attribute values.|0b77c42f09ad41be99946f3609a6edde|data_structure
y|checkon|indicates how checkboxes and radio buttons should be selected by default.|0b77c42f09ad41be99946f3609a6edde|configuration
y|optselected|indicates whether the <option> elements should be selected by default.|0b77c42f09ad41be99946f3609a6edde|configuration
rt|value|specifies the initial checked or selected state of checkboxes and radio buttons.|0b77c42f09ad41be99946f3609a6edde|configuration
hasclass|fn|is a function inside the S object that checks if an element has a specific class.|281cccb704e047d09cce2e4df6c31af2|
xt|"//g"|is a regular expression used to remove carriage returns in string values.|281cccb704e047d09cce2e4df6c31af2|
valhooks|s.fn.extend()|is an object that contains functions for setting and getting values of specific HTML elements, including options, select menus, and text fields.|281cccb704e047d09cce2e4df6c31af2|
option|{ get: function(e) ... }|is an object inside the valHooks object that contains a function for getting the value of an option element, which can be retrieved using S.find.attr() or S.text().|281cccb704e047d09cce2e4df6c31af2|
select|{ get: function(e) ... }|is an object inside the valHooks object that contains a function for getting the value of a select element, which can be retrieved based on whether the element is a 'select-one' type or not.|281cccb704e047d09cce2e4df6c31af2|
trigger|event object|represents the action of triggering an event, typically using the 'trigger' method. This causes the specified event to be simulated as if it had been triggered by user interaction.|cf7b7d6307be4950acedafaac5ed7b8d|
event|type of event being triggered|represents the specific type of event that is being triggered, such as 'focus', 'click', or 'load'.|cf7b7d6307be4950acedafaac5ed7b8d|
t|optional event data|represents any additional data that is passed along with the event object when triggering the event. This can include elements, selectors, and other information relevant to the event being triggered.|cf7b7d6307be4950acedafaac5ed7b8d|
focusin|browser event|represents a specific browser event that can be triggered using this method, such as 'focusin' or 'blur'.|cf7b7d6307be4950acedafaac5ed7b8d|
r|event type being simulated|represents the specific type of event that is being simulated by triggering it programmatically, such as 'focusin', 'click', or 'load'.|cf7b7d6307be4950acedafaac5ed7b8d|
e.target|element on which the event occurred|represents the element within the DOM tree that triggered the event being simulated, typically accessed through the 'target' property of the event object.|cf7b7d6307be4950acedafaac5ed7b8d|
s.event.fix|utility function for normalizing event data|represents a utility function provided by the jQuery library that is used to normalize and standardize event data before passing it along with the simulated event.|cf7b7d6307be4950acedafaac5ed7b8d|
y.access|utility function for accessing and updating properties|represents a utility function provided by the YUI library that is used to efficiently read, write, and delete properties of elements within the DOM tree.|cf7b7d6307be4950acedafaac5ed7b8d|
f.addeventlistener|method for adding event listeners|represents a method provided by modern web browsers that allows developers to attach event handlers to specific events and elements, typically using a syntax similar to 'element.addEventListener(eventType, function)'.|cf7b7d6307be4950acedafaac5ed7b8d|
y.get|method for accessing nested properties of objects|represents a method provided by the YUI library that is used to efficiently retrieve nested properties from complex data structures, such as JSON or XML.|cf7b7d6307be4950acedafaac5ed7b8d|
o.events|object containing registered event handlers|represents a property of objects in JavaScript and YUI that is used to store and manage event listeners and associated data, typically as an object or map.|cf7b7d6307be4950acedafaac5ed7b8d|
p.pop|method for removing last element from array|represents a method provided by JavaScript arrays that is used to remove and return the last element of an array, typically using a syntax similar to 'arrayName.pop()'.|cf7b7d6307be4950acedafaac5ed7b8d|
e.issimulated|flag indicating if event was simulated|represents a property of the event object that is automatically set to true when an event is triggered programmatically, allowing for additional handling and prevention of further propagation of the event.|cf7b7d6307be4950acedafaac5ed7b8d|
e.isdefaultprevented|flag indicating if default behavior was prevented|represents a property of the event object that is automatically set to true when an event handler returns false or invokes preventDefault() on the event object, preventing the default behavior associated with the event.|cf7b7d6307be4950acedafaac5ed7b8d|
e.result|value returned by event handler|represents the value that is returned by an event handler when it is invoked in response to a triggered event, typically used as input for subsequent processing or conditional logic.|cf7b7d6307be4950acedafaac5ed7b8d|
n[u]|property containing event listener|represents a property of elements within the DOM tree that is used to store and manage event listeners, typically as a string or function reference.|cf7b7d6307be4950acedafaac5ed7b8d|
context|s|is invoked with an array e as its argument to extract ontology from the current context.|4b1bd2bb99864f1194b928ec529223d5|
e|this|is passed as a parameter to the S.makeArray function within the context.|4b1bd2bb99864f1194b928ec529223d5|
this|:disabled|is checked using the pe test and filtered out if it is a radio button or a checkbox.|4b1bd2bb99864f1194b928ec529223d5|
n|null|is initially set to null for each element in the context, and then transformed into an array or a string using S.map function.|4b1bd2bb99864f1194b928ec529223d5|
n|array.isarray(n)|is checked to determine whether it is an array or not.|4b1bd2bb99864f1194b928ec529223d5|
e|type|is retrieved for each element in the context to identify its type.|4b1bd2bb99864f1194b928ec529223d5|
this.nodename|nt|is tested using Nt regular expression to filter out elements like script and style.|4b1bd2bb99864f1194b928ec529223d5|
at|test(e)|is used to exclude attribute selectors.|4b1bd2bb99864f1194b928ec529223d5|
pe|test(e)|is used to exclude presentation attributes.|4b1bd2bb99864f1194b928ec529223d5|
name|value|"is replaced with a newline character sequence (
) using kt regular expression for each element in the context whose value is not null."|4b1bd2bb99864f1194b928ec529223d5|
n|replace(kt, '\r\n')|is used to transform the value of each non-null element into a string with newline characters for better readability.|4b1bd2bb99864f1194b928ec529223d5|
jt|/%20/g|is used to replace multiple spaces (%20) with a single space for more compact representation.|4b1bd2bb99864f1194b928ec529223d5|
qt|/#. *$/|is used to filter out the fragment identifier ('#') and any trailing characters from the URL after it.|4b1bd2bb99864f1194b928ec529223d5|
lt|/([?&])_=[^&]*/|is used to remove underscore-prefixed query parameters ('?_=').|4b1bd2bb99864f1194b928ec529223d5|
ht|"/^(.*? ):[ 	]*([^
]*)$/gm"|is used to extract the name and value of each header in the context separately.|4b1bd2bb99864f1194b928ec529223d5|
ot|"/^(? :get|head)$/"|is used to identify GET or HEAD requests.|4b1bd2bb99864f1194b928ec529223d5|
pt|/^///|is used to filter out any URLs beginning with '//'.|4b1bd2bb99864f1194b928ec529223d5|
rt|||4b1bd2bb99864f1194b928ec529223d5|
mt|||4b1bd2bb99864f1194b928ec529223d5|
it|"""*/"""|is used to specify the content-type header for the extracted ontology.|4b1bd2bb99864f1194b928ec529223d5|
ajax|http request|AJAX is a technique used to interact with a server asynchronously and update parts of a web page without reloading the entire page. HTTP requests are sent from the client-side (browser) to the server for various operations such as retrieving data, submitting forms, etc.|584338af6ba04efeae13a9f4103b9dea|
url|http request|The URL (Uniform Resource Locator) is used to specify the location of a resource on the web. It is included in an HTTP request to indicate which resource is being accessed.|584338af6ba04efeae13a9f4103b9dea|
xmlhttprequest|ajax|The XMLHttpRequest object is used for asynchronous communication between the browser and a server. AJAX (Asynchronous JavaScript and XML) relies on this object to exchange data without requiring a page refresh.|584338af6ba04efeae13a9f4103b9dea|
jquery|ajax|jQuery is a popular JavaScript library that simplifies the use of AJAX by providing a set of methods for making asynchronous HTTP requests. It abstracts away the complexity and cross-browser inconsistencies involved in using XMLHttpRequest.|584338af6ba04efeae13a9f4103b9dea|
content type|http request|The content type is used to indicate the format of the data being sent in an HTTP request. For example, 'application/json' indicates that JSON data is being sent.|584338af6ba04efeae13a9f4103b9dea|
promise|http request|A Promise in JavaScript represents the eventual completion (or failure) of an asynchronous operation and its resulting value. In this context, it is used to handle HTTP requests and their responses.|584338af6ba04efeae13a9f4103b9dea|
success|http request|The success callback function is called when an HTTP request is successful and the server returns a response. It can be passed as an argument to $.ajax() or $.get().|584338af6ba04efeae13a9f4103b9dea|
error|http request|The error callback function is called when an HTTP request fails, either due to a network error, a server-side error, or any other issue. It can be passed as an argument to $.ajax() or $.get().|584338af6ba04efeae13a9f4103b9dea|
complete|http request|The complete callback function is called when an HTTP request completes, regardless of whether it was successful or not. It can be passed as an argument to $.ajax() or $.get().|584338af6ba04efeae13a9f4103b9dea|
v.data|delete v.data|replaces value of v.data with null|a8ec6ca45431456cbcbeb488a35e69ea|
v.cache|f|assigned to a variable named f|a8ec6ca45431456cbcbeb488a35e69ea|
lt|$1|replaced with the value of $1 in the string represented by Lt|a8ec6ca45431456cbcbeb488a35e69ea|
et.test(f)|&|concatenated with '&' if Et.test(f) is true|a8ec6ca45431456cbcbeb488a35e69ea|
ct.guid++|_=|added to the end of f followed by '_=' and then _= is incremented by Ct.guid++|a8ec6ca45431456cbcbeb488a35e69ea|
v.url|f + o|set to the concatenated value of f and o|a8ec6ca45431456cbcbeb488a35e69ea|
s.lastmodified[f]|if-modified-since|assigned as the value of 'If-Modified-Since' header in request|a8ec6ca45431456cbcbeb488a35e69ea|
s.etag[f]|if-none-match|assigned as the value of 'If-None-Match' header in request|a8ec6ca45431456cbcbeb488a35e69ea|
"v.data && v.hascontent && !1 !== v.contenttype || t.contenttype"|content-type|assigned as the value of 'Content-Type' header in request|a8ec6ca45431456cbcbeb488a35e69ea|
v.datatypes[0] && v.accepts[v.datatypes[0]]|*|assigned as the value of 'Accept' header in request if v.dataTypes[0] is provided and it matches with the content type accepted by server|a8ec6ca45431456cbcbeb488a35e69ea|
it + '; q=0.01'|*|concatenated with 'Accept' header in request if v.dataTypes[0] is not provided or it does not match with the content type accepted by server|a8ec6ca45431456cbcbeb488a35e69ea|
i|v.headers[i]|assigned as the value of request header|a8ec6ca45431456cbcbeb488a35e69ea|
s|m|is a property of the jQuery library's Ajax function, which allows for the retrieval and manipulation of data from a server. S refers to the JavaScript object used to make Ajax requests, while m is a variable used to store a callback function that will be executed when the request is complete.|e2ba314828ec4eb98351fc77bc0ff1bb|
get|post|are two methods available within the jQuery library's Ajax function, which allow for different types of requests to be made. The 'get' method is used for retrieving data from a server, while the 'post' method is used for sending data to a server.|e2ba314828ec4eb98351fc77bc0ff1bb|
ajax|jquery|is a property of the jQuery library's Ajax function. Ajax (Asynchronous JavaScript and XML) refers to a set of techniques used for creating interactive web applications without the need for page reloads. The 'jQuery' library is a popular JavaScript library that includes various tools and functions, one of which is Ajax.|e2ba314828ec4eb98351fc77bc0ff1bb|
url|type|are two properties available within the jQuery library's Ajax function. The 'url' property specifies the location of the resource being requested, while the 'type' property specifies the HTTP request method to be used (either 'get' or 'post').|e2ba314828ec4eb98351fc77bc0ff1bb|
datatype|success|are two properties available within the jQuery library's Ajax function. The 'dataType' property specifies the type of data expected from the server in response to a request (either 'html', 'text', 'xml', 'json', or 'script'). The 'success' property is a callback function that will be executed when the request is successful.|e2ba314828ec4eb98351fc77bc0ff1bb|
ajaxprefilter|s.event.trigger|are two properties available within the jQuery library's Ajax function. 'ajaxPrefilter' is a method used to modify the behavior of all future Ajax requests before they are executed, while 'S.event.trigger' is a method used to trigger an event on the jQuery event object.|e2ba314828ec4eb98351fc77bc0ff1bb|
getscript|void 0|are two arguments available within the jQuery library's 'getScript' function. The 'getScript' function is used to retrieve and execute a JavaScript file from a server, without the need for page reloads. The first argument specifies the URL of the script being requested, while the second argument specifies a default value to be returned if the resource cannot be found.|e2ba314828ec4eb98351fc77bc0ff1bb|
wrapall|eq|are two methods available within the jQuery library's 'wrapAll' function. The 'wrapAll' method is used to wrap a set of elements with a new parent element. The first argument specifies the HTML or CSS code to be wrapped around the elements, while the second argument specifies a callback function that will be executed for each individual wrapped element.|e2ba314828ec4eb98351fc77bc0ff1bb|
contents|eq|are two methods available within the jQuery library's 'wrapInner' function. The 'wrapInner' method is used to wrap the content of a set of elements with a new parent element. The 'contents' method returns an array containing all child nodes (including text and comment nodes) of the current element, while the 'eq' method selects the first element that matches the selector.|e2ba314828ec4eb98351fc77bc0ff1bb|
wrap|m|are two arguments available within the jQuery library's 'wrap' function. The 'wrap' method is used to wrap a set of elements with a new parent element. The first argument specifies the HTML or CSS code to be wrapped around the elements, while the second argument specifies a callback function that will be executed for each individual wrapped element.|e2ba314828ec4eb98351fc77bc0ff1bb|
ajax|xmlhttprequest|The Ajax technique utilizes XMLHttpRequest to exchange data asynchronously with a server without the need for page reloads.|f382a90939fa47de8d120afeaf91258c|
jquery|s|jQuery is a fast and concise JavaScript library that simplifies HTML document traversing, event handling, and Ajax interactions for rapid web development. S (short for jQuery) is the noConflict version of jQuery.|f382a90939fa47de8d120afeaf91258c|
ajaxprefilter|s.ajaxprefilter|AjaxPrefilter is a method provided by jQuery to modify the behavior of AJAX requests globally before they are sent.|f382a90939fa47de8d120afeaf91258c|
content-type|application/javascript, application/ecmascript, application/x-ecmascript|Content-Type is a request header used to specify the format of the response data expected by the client. In this case, it specifies that responses should be in one of the three JavaScript formats.|f382a90939fa47de8d120afeaf91258c|
script|text/javascript, application/javascript, application/ecmascript, application/x-ecmascript|The script tag is used to embed JavaScript code into an HTML document. The accepts property specifies the MIME types accepted by jQuery for scripts.|f382a90939fa47de8d120afeaf91258c|
scriptattrs|object containing attributes to be set on the script element.|The scriptAttrs option provides a way to pass attributes to the script tag generated by jQuery. This is useful for setting attributes like charset or src.|f382a90939fa47de8d120afeaf91258c|
charset||The charset attribute specifies the character encoding used in the data being passed. In this case, it's empty by default.|f382a90939fa47de8d120afeaf91258c|
src||The src attribute specifies the URL of the external script file to be loaded. In this case, it's also empty by default.|f382a90939fa47de8d120afeaf91258c|
crossdomain|boolean indicating whether the request crosses domains.|The crossDomain option is a boolean flag that indicates whether the AJAX request is being made across different domains or not. In this case, we're checking for cross-domain requests.|f382a90939fa47de8d120afeaf91258c|
type|get|The type attribute specifies the HTTP method to be used in the request. By default, it's set to GET when crossDomain is true.|f382a90939fa47de8d120afeaf91258c|
onload|function|The onload property is a callback function that gets called when the script file has been loaded successfully. In this case, we're defining an empty function to be called as the onload handler.|f382a90939fa47de8d120afeaf91258c|
onerror|function|The onerror property is a callback function that gets called when there's an error during script loading. Again, we're defining an empty function to be called as the onerror handler.|f382a90939fa47de8d120afeaf91258c|
onabort|function|The onabort property is a callback function that gets called when the script loading process has been aborted. We're defining an empty function to be called as the onabort handler.|f382a90939fa47de8d120afeaf91258c|
onreadystatechange|function|The onreadystatechange property is a callback function that gets called when the readystate attribute of the XMLHttpRequest object changes. It's used to monitor the progress of asynchronous requests.|f382a90939fa47de8d120afeaf91258c|
responsetext|{ text: r.responsetext }|The responseText property contains the actual data returned by the server in response to an AJAX request. In this case, we're returning the entire JSON object as the value of responseText.|f382a90939fa47de8d120afeaf91258c|
response|{ binary: r.response }|The response property contains a complete set of HTTP headers returned by the server in response to an AJAX request. In this case, we're extracting only the binary data as the value of response.|f382a90939fa47de8d120afeaf91258c|
getallresponseheaders|function|The getAllResponseHeaders() method is used to return an array containing all the HTTP headers returned by the server in response to an AJAX request.|f382a90939fa47de8d120afeaf91258c|
load|animated|method 'load' checks for animated elements using method 'animated'|942b4016be5e4a019eed7712aa4ec85d|
offset|element position|method 'offset' sets the position of an element based on its parent's position|942b4016be5e4a019eed7712aa4ec85d|
top|left|properties 'top' and 'left' hold the vertical and horizontal positions respectively of an element within its container|942b4016be5e4a019eed7712aa4ec85d|
position|static|'position' property can be set to 'relative', 'absolute' or 'fixed', and 'static' is the default value for a positioned element.|942b4016be5e4a019eed7712aa4ec85d|
pageyoffset|r|is equal to the value of the pageYOffset property, which returns the vertical position of the document's viewport relative to its offset parent.|caf4b0c44a0b4a2682e9edacde800554|
top|left|are CSS properties that can be used to position elements on a web page. The cssHooks property is an object that contains hooks for specific CSS properties, which can be accessed using the $.cssHooks() function.|caf4b0c44a0b4a2682e9edacde800554|
height|width|are CSS properties that can be used to set the height and width of HTML elements. The css() function is a Sizzle jQuery method that is used to read or set the value of one or more CSS properties of an element.|caf4b0c44a0b4a2682e9edacde800554|
padding|content|are CSS properties that are used to specify padding and content for HTML elements. The jQuery.each() function is a utility function that is used to iterate over an array, object or other enumerable JavaScript structure.|caf4b0c44a0b4a2682e9edacde800554|
ajaxstart|ajaxstop|are jQuery event types that are triggered when an AJAX request starts and stops respectively.|caf4b0c44a0b4a2682e9edacde800554|
ajaxcomplete|ajaxerror|are jQuery event types that are triggered when an AJAX request completes successfully or results in an error respectively.|caf4b0c44a0b4a2682e9edacde800554|
ajaxsuccess|ajaxsend|are jQuery event types that are triggered when an AJAX response is returned and a new AJAX request is sent respectively.|caf4b0c44a0b4a2682e9edacde800554|
s|jquery|is a global variable and can be replaced by the noConflict method when there are multiple copies of jQuery in a page. This allows for the use of custom global variables without conflicts.|3a692cf0983d4a29a297751c596e2f05|
c|$|is an alias for the jQuery library that is defined by the author when they are not using the noConflict method to avoid naming conflicts with other libraries or plugins that also use the $ symbol.|3a692cf0983d4a29a297751c596e2f05|
c.$|s.jquery|are equivalent in functionality, and when jQuery is loaded without the noConflict method being called, C.$ is assigned to S.jQuery by default.|3a692cf0983d4a29a297751c596e2f05|
topbar|canvas|The 'topbar' is a JavaScript plugin that shows a progress bar at the top of the screen, and it uses a canvas element named 'canvas' to display the bars.|39dddaca962945c79d44aaf17f78bc29|
window|currentprogress|The 'currentProgress' variable is initialized by the 'topbar' plugin and updated dynamically as the progress changes. This variable keeps track of the current percentage completed.|39dddaca962945c79d44aaf17f78bc29|
document|options|The 'options' object contains various configuration settings for the 'topbar' plugin, such as the bar colors, thickness, and whether to automatically start the progress bars.|39dddaca962945c79d44aaf17f78bc29|
elem|addevent|The 'addEvent' function is used to attach event listeners to HTML elements in both traditional and modern browsers. This function is called by the 'topbar' plugin to add event handlers for clicking, hovering over, or focusing on its elements.|39dddaca962945c79d44aaf17f78bc29|
canvas|ctx|The 'ctx' object provides a way to draw graphics onto the 'canvas' element using JavaScript. In this context, it's used by the 'topbar' plugin to render the progress bars and their shadows.|39dddaca962945c79d44aaf17f78bc29|
function|opts|is called with options as an argument|4a11b6b72722481ba65c39e149256aec|
for|key|loops through each property in the object passed to the function|4a11b6b72722481ba65c39e149256aec|
opts|hasownproperty|checks if the current key exists as a property of opts|4a11b6b72722481ba65c39e149256aec|
options|key|assigns the value passed for the current key to options|4a11b6b72722481ba65c39e149256aec|
showing|show|is set to true when show function is called with no delay or false value of showing|4a11b6b72722481ba65c39e149256aec|
delaytimerid|show|stores the setTimeout id for calling the show function with delay time passed as an argument|4a11b6b72722481ba65c39e149256aec|
fadetimerid|hide|stores the window.requestAnimationFrame id for fading the topbar when hide function is called without previous hide call|4a11b6b72722481ba65c39e149256aec|
showing|progresstimerid|is null when no progress animation is being executed|4a11b6b72722481ba65c39e149256aec|
currentprogress|progress|tracks the current value of progress|4a11b6b72722481ba65c39e149256aec|
repaint|progress|repaints the canvas element when progress function is called with new value|4a11b6b72722481ba65c39e149256aec|
topbar.progress|hide|decreases opacity of topbar during fading animation when hide function is called|4a11b6b72722481ba65c39e149256aec|
window.requestanimationframe|loop|calls itself recursively to animate the progress bar until it reaches 1|4a11b6b72722481ba65c39e149256aec|
node_1|node_2|edge|chunk_id|node_3
delaytimerid|topbar|In the given context, 'delayTimerId' and 'topbar' are related as 'delayTimerId' is assigned a value based on whether 'topbar' is already showing or not.|c2f07e2514eb466991dd41746b520e25|
handler|topbar|The 'handler' and 'topbar' are related as the value of 'handler' is passed to the 'show' method of 'topbar'.|c2f07e2514eb466991dd41746b520e25|
canvas|elem|In the context, 'canvas' and 'elem' are related as they both have their styles set and added to the document body.|c2f07e2514eb466991dd41746b520e25|
options.classname|canvas|The 'options.className' and 'canvas' are related as the 'classList.add' method is called on 'canvas' with the value of 'options.className'.|c2f07e2514eb466991dd41746b520e25|
delaytimerid|fadetimerid|Both 'delayTimerId' and 'fadeTimerId' are related as they are both cleared using the 'window.cancelAnimationFrame' method.|c2f07e2514eb466991dd41746b520e25|
handler|type|In the context, 'handler' is related to 'type' as 'handler' is passed as an event listener for the 'resize' event.|c2f07e2514eb466991dd41746b520e25|
options.classname|canvas.classlist|Both 'options.className' and 'canvas.classList' are related as they are used together to add a class to the 'canvas' element.|c2f07e2514eb466991dd41746b520e25|
elem|window|In the context, 'elem' and 'window' are related as both of them have event listeners added to them.|c2f07e2514eb466991dd41746b520e25|
handler|repaint|The 'handler' and 'repaint' are related as 'handler' calls the 'repaint' function.|c2f07e2514eb466991dd41746b520e25|
progresstimerid|window|Both 'progressTimerId' and 'window' are related as they both have event listeners added to them for the 'resize' event.|c2f07e2514eb466991dd41746b520e25|
currentprogress|topbar.progress|The 'currentProgress' and 'topbar.progress' are related as they both affect each other through the 'repaint' function.|c2f07e2514eb466991dd41746b520e25|
options.autorun|loop|In the context, 'options.autoRun' and 'loop' are related as 'options.autoRun' starts the loop function 'loop'.|c2f07e2514eb466991dd41746b520e25|
bind|function|bind is a function that returns a new function bound to arguments passed. It has a shortcut L.bind().|846670021f544519bd586cb40521d516|
lastid|number|lastId is a property of util module that keeps track of the last unique ID used by stamp().|846670021f544519bd586cb40521d516|
stamp|number|The function stamp() returns the unique ID of an object and assigns it one if it doesn't have it.|846670021f544519bd586cb40521d516|
throttle|function|throttle is a function that returns another function which executes the given scope context's function fn with time delay between successive calls. The wrapperFn will be called no more than one time per given amount of time.|846670021f544519bd586cb40521d516|
fn|function|The function throttle() takes a function fn as an argument and returns another function which is wrapped around the original function. The function fn will be executed with time delay between successive calls.|846670021f544519bd586cb40521d516|
context|object|The function throttle() takes an optional scope context as an argument, which is the object inside whose this keyword will refer when executing fn wrapped around by throttle().|846670021f544519bd586cb40521d516|
time|number|The function throttle() takes time as an argument which is the delay between successive calls to fn wrapped around by throttle() in milliseconds.|846670021f544519bd586cb40521d516|
context|function|context contains a function defined by the user|53ab76f23c874efe9358d07cb4ac0064|
later|function|later is a named function within the context|53ab76f23c874efe9358d07cb4ac0064|
args|variable|args is a variable used to store arguments passed to a function|53ab76f23c874efe9358d07cb4ac0064|
wrapperfn|function|wrapperFn is a named function created by the user|53ab76f23c874efe9358d07cb4ac0064|
context|variable|context is a variable used to store context information|53ab76f23c874efe9358d07cb4ac0064|
lock|variable|lock is a boolean flag that keeps track of whether a function call should be queued or executed immediately|53ab76f23c874efe9358d07cb4ac0064|
args|boolean|args is a variable used to store arguments passed to the wrapper function in case they need to be reused later|53ab76f23c874efe9358d07cb4ac0064|
wrapperfn|function|wrapperFn applies a user-defined function to its arguments and sets a timeout for executing it if the lock flag is set|53ab76f23c874efe9358d07cb4ac0064|
x|variable|x is a variable used to store a number in calculations|53ab76f23c874efe9358d07cb4ac0064|
range|array|range is an array containing the boundaries of a range|53ab76f23c874efe9358d07cb4ac0064|
includemax|boolean|includeMax is a boolean flag that determines whether the maximum value in a range should be included when wrapping numbers within it|53ab76f23c874efe9358d07cb4ac0064|
wrapnum|function|wrapNum is a user-defined function for wrapping numbers within a range|53ab76f23c874efe9358d07cb4ac0064|
falsefn|function|falseFn is a named function that always returns false|53ab76f23c874efe9358d07cb4ac0064|
formatnum|function|formatNum is a user-defined function for rounding numbers to a specified number of decimal places|53ab76f23c874efe9358d07cb4ac0064|
str|variable|str is a variable used to store string data|53ab76f23c874efe9358d07cb4ac0064|
trim|function|trim is a named function that removes whitespace from the beginning and end of a string, providing compatibility for the String.prototype.trim method in older browsers|53ab76f23c874efe9358d07cb4ac0064|
templatere|regex pattern for embedding variables in a template|is used to extract variable names from a string template.|a4cc129333084b67b19226ca67710520|
getparamstring|function that converts an object into a parameter url string|can be used to generate query strings for API calls by combining objects and existing URLs|a4cc129333084b67b19226ca67710520|
setoptions|function that merges given properties to the options of an object|can be used to customize the behavior or appearance of a Leaflet.js map by adding options.|a4cc129333084b67b19226ca67710520|
splitwords|function that trims and splits a string on whitespace|can be used to tokenize text for further analysis or processing.|a4cc129333084b67b19226ca67710520|
template|data|A template string accepts a data object to evaluate its variables.|2bc8d32add944bc38f505684019f1729|
templatere|str|The `templateRe` regular expression is used to extract variables from a template string.|2bc8d32add944bc38f505684019f1729|
templatere|key|Each variable in the extracted `key` can be found in the corresponding `data` object.|2bc8d32add944bc38f505684019f1729|
value|data|A value from the `data` object is assigned to a variable in the template string.|2bc8d32add944bc38f505684019f1729|
isarray|obj|The `isArray` function checks if an object is an array.|2bc8d32add944bc38f505684019f1729|
emptyimageurl|string|The variable 'emptyImageUrl' is assigned a value of type 'String', which contains a base64-encoded empty GIF image for freeing memory from unused images on WebKit-powered mobile devices.|f066e773ff784a29912fb4b6603acf4e|
requestanimationframe|function|The variable 'requestAnimationFrame' is assigned a value of type 'function', which is a method for requesting that an animation or game update function be called after the next repaint.|f066e773ff784a29912fb4b6603acf4e|
getprefixed|function|The variable 'getPrefixed' is assigned a value of type 'function', which is used to retrieve a prefixed version of a Web API, such as 'webkit' or 'moz' prefixes for older browser versions.|f066e773ff784a29912fb4b6603acf4e|
timeoutdefer|function|The variable 'timeoutDefer' is assigned a value of type 'function', which is used as a fallback for IE 7-8 browsers and sets a timeout to call a function after a certain time delay.|f066e773ff784a29912fb4b6603acf4e|
lasttime|number|The variable 'lastTime' is assigned a value of type 'number', which is used to keep track of the last time the requestAnimationFrame function was called.|f066e773ff784a29912fb4b6603acf4e|
requestfn|function|The variable 'requestFn' is assigned a value of type 'function', which is used to make asynchronous function calls and request animation frames for smoother animations.|f066e773ff784a29912fb4b6603acf4e|
cancelfn|function|The variable 'cancelFn' is assigned a value of type 'function', which is used to cancel previous animation frame requests, such as for older browser versions.|f066e773ff784a29912fb4b6603acf4e|
requestanimframe|fn|bound to the context provided as an argument|13bfb230771f449a88c65623de5adb90|
context|fn|passed as an optional argument for binding 'fn' to it|13bfb230771f449a88c65623de5adb90|
requestanimframe|immediate|when set, causes 'fn' to be called immediately if the browser doesn't have native support for window.requestAnimationFrame|13bfb230771f449a88c65623de5adb90|
requestfn|window|called to schedule a function for execution when the browser repaints. Returns request ID.|13bfb230771f449a88c65623de5adb90|
timeoutdefer|requestfn|assigned when 'immediate' is set and the browser doesn't have native support for window.requestAnimationFrame|13bfb230771f449a88c65623de5adb90|
cancelanimframe|id|cancels a previous requestAnimFrame when provided with an ID|13bfb230771f449a88c65623de5adb90|
cancelfn|window|called to cancel a previously scheduled animation frame|13bfb230771f449a88c65623de5adb90|
class|l.class|both terms refer to the same concept, a JavaScript class definition|2e4373b1b9424cf2bf83fa0a920d6c47|
class|extend|the 'extend' function is used within the 'Class' constructor to add properties and methods to a class|2e4373b1b9424cf2bf83fa0a920d6c47|
function|extend|the 'extend' function returns a JavaScript function, which is also referred to as a 'class constructor'|2e4373b1b9424cf2bf83fa0a920d6c47|
newclass|function|the 'NewClass' variable is assigned the value of a new function created using the 'function' keyword|2e4373b1b9424cf2bf83fa0a920d6c47|
this.initialize|newclass|the 'initialize' property of the current object (i.e., 'this') is called within the constructor function for 'NewClass'|2e4373b1b9424cf2bf83fa0a920d6c47|
this.callinithooks|newclass|the 'callInitHooks' method is defined on the prototype of 'NewClass' and is called to execute initialization hooks|2e4373b1b9424cf2bf83fa0a920d6c47|
parentproto|newclass.prototype|the 'parentProto' variable refers to the prototype property of the 'NewClass' constructor|2e4373b1b9424cf2bf83fa0a920d6c47|
proto|an object created using the 'create' function and used as the new prototype for 'newclass'|the 'proto' variable is assigned a new object created using the 'create' function|2e4373b1b9424cf2bf83fa0a920d6c47|
constructor|newclass.prototype|the 'constructor' property is added to the prototype of 'NewClass'|2e4373b1b9424cf2bf83fa0a920d6c47|
props.options|class.prototype.options|the 'options' property from the given 'props' object is merged with the 'options' property on the prototype of 'Class'|2e4373b1b9424cf2bf83fa0a920d6c47|
checkdeprecatedmixinevents|undefined|the 'checkDeprecatedMixinEvents' function is called within the 'extend' method, but it is undefined|2e4373b1b9424cf2bf83fa0a920d6c47|
class|include|is a method added to the prototype object of a class using the include function, which mixes in the properties and methods defined in another object into the current class.|2251538aa6b14228950c8a595448aa26|
class|mergeoptions|is a method added to the prototype object of a class using the mergeOptions function, which merges the options passed as an argument with the default options of the class.|2251538aa6b14228950c8a595448aa26|
class|addinithook|is a method added to the prototype object of a class using the addInitHook function, which adds a constructor hook as a function or string followed by its arguments to be executed during the initialization process of an instance of the class.|2251538aa6b14228950c8a595448aa26|
class|proto._inithooks|is an array property of the Class prototype object, which stores all the constructor hooks added using the addInitHook function during initialization process of a new instance of the class.|2251538aa6b14228950c8a595448aa26|
class|_inithookscalled|is a boolean property used to prevent calling of init hooks multiple times during the construction process of an instance of the class.|2251538aa6b14228950c8a595448aa26|
context|proto._inithooks = [];|initializes an empty array called proto._initHooks for storing constructor hooks during the initialization process of a new instance of the class.|2251538aa6b14228950c8a595448aa26|
context|proto.callinithooks = function () { |defines a method called callInitHooks for initializing all the constructor hooks added using the addInitHook function during initialization process of a new instance of the class.|2251538aa6b14228950c8a595448aa26|
context|parentproto.callinithooks|initializes the parent class's callInitHooks method, if it exists, during initialization process of a new instance of the current class.|2251538aa6b14228950c8a595448aa26|
context|_inithookscalled = true; |sets a boolean flag called _initHooksCalled to true after executing all the constructor hooks during initialization process of a new instance of the class.|2251538aa6b14228950c8a595448aa26|
context|l.mixin|checks for the existence of Mixin object from L library, which is used in the include function for mixing in properties and methods into the current class.|2251538aa6b14228950c8a595448aa26|
context|isarray(includes)|converts a value passed as argument to the includes function into an array, if it is not already an array.|2251538aa6b14228950c8a595448aa26|
events|l.mixin.events|Deprecated include of L.Mixin.Events.|5bd7adc572e64302a3dfbd78776a9ca3|
evented|l.evented|A set of methods shared between event-powered classes.|5bd7adc572e64302a3dfbd78776a9ca3|
this|evented|is a type of that is used in the context to add event parents. This allows for propagated events to be received by other Evented objects.|c9b6de9176884144a4e8ac14c986249e|
propagate|_eventparents|is a property of this object that is checked when an event is propagated. If the event propagates, this property is used to check if any event parents listen for the specific event and type.|c9b6de9176884144a4e8ac14c986249e|
id|_eventparents|is a property of this object that is used to store references to event parents. Each reference is assigned a unique identifier, which allows for multiple event parents to be added without causing conflicts.|c9b6de9176884144a4e8ac14c986249e|
handler|_eventparents|is a function that is added as a listener when the 'once' method is called. This function ensures that the event and its listeners are removed after it has been fired once.|c9b6de9176884144a4e8ac14c986249e|
type|_eventparents|is a property of this object that is used to specify the type of event being listened for. This allows for more specific event handling and prevents conflicts between multiple listeners with overlapping event types.|c9b6de9176884144a4e8ac14c986249e|
types|once|is an object that can be passed to the 'once' method to specify multiple types of events to listen for. This allows for more complex event handling with multiple types of events.|c9b6de9176884144a4e8ac14c986249e|
_eventparents|on|is a function called when an event is fired on this object. If the event propagates, this function is used to check if any event parents are listening for the specific event and type.|c9b6de9176884144a4e8ac14c986249e|
obj|addeventparent|is a parameter passed to the 'addEventParent' method. This allows for multiple event parents to be added, which can help with more complex event handling.|c9b6de9176884144a4e8ac14c986249e|
_eventparents|removeeventparent|is a property of this object that is used to remove an event parent from the list of event parents. This allows for more specific and targeted event handling.|c9b6de9176884144a4e8ac14c986249e|
_eventparents|_propagateevent|is a function called when an event is propagated on this object. This function loops through the list of event parents and fires the event for each one.|c9b6de9176884144a4e8ac14c986249e|
addeventlistener|on|Alias relationship between 'addEventListener' and 'on'|9f00313632f04298a95b6a0ba9e38c10|
addeventlistener|addeventlistener|Both are methods of the same class|9f00313632f04298a95b6a0ba9e38c10|
removeeventlistener|clearalleventlisteners|Alias relationship between 'removeEventListener' and 'clearAllEventListeners'|9f00313632f04298a95b6a0ba9e38c10|
removeeventlistener|off|Alias relationship between 'removeEventListener' and 'off'|9f00313632f04298a95b6a0ba9e38c10|
addonetimeeventlistener|once|Alias relationship between 'addOneTimeEventListener' and 'once'|9f00313632f04298a95b6a0ba9e38c10|
fireevent|fire|Alias relationship between 'fireEvent' and 'fire'|9f00313632f04298a95b6a0ba9e38c10|
point|[x, y]|Both represent a point with x and y coordinates in pixels|9f00313632f04298a95b6a0ba9e38c10|
point|number|In the constructor Point(x, y, round), x and y are passed as arguments of type Number, which are then assigned to their respective properties in two different ways based on a boolean flag.|68005789e5624a81be2ed2ac40f8081a|
point|point|The clone() method returns a new Point object with the same coordinates as the current one.|68005789e5624a81be2ed2ac40f8081a|
point|point|The add(otherPoint) method returns a new Point object which is obtained by adding the current Point to another Point (passed as argument).|68005789e5624a81be2ed2ac40f8081a|
topoint|point|In the add() method, the argument 'otherPoint' is converted to a Point object using the helper function toPoint(). This conversion is necessary because the type of 'otherPoint' is not guaranteed.|68005789e5624a81be2ed2ac40f8081a|
point|number|The _add(point) method adds the coordinates (x and y) of the given Point object to the current Point's coordinates. This method is called internally by the add() method for performance reasons.|68005789e5624a81be2ed2ac40f8081a|
point|point|The subtract(otherPoint) method returns a new Point object which is obtained by subtracting another Point (passed as argument) from the current one.|68005789e5624a81be2ed2ac40f8081a|
topoint|point|The argument 'otherPoint' of the subtract() method is converted to a Point object using the helper function toPoint(). This conversion is necessary for type compatibility.|68005789e5624a81be2ed2ac40f8081a|
point|number|The _subtract(point) method subtracts the coordinates (x and y) of the given Point object from the current Point's coordinates. This method is called internally by the subtract() method for performance reasons.|68005789e5624a81be2ed2ac40f8081a|
point|number|The divideBy(num) method returns a new Point object which is obtained by dividing all its coordinates (x and y) with the given number. This division is performed internally by the _divideBy(num) method.|68005789e5624a81be2ed2ac40f8081a|
multiplyby|num|Is called with a number argument, multiplies each coordinate of the point by that number.|3302bb192a75492ab2f5f1696449d5e3|
_divideby|num|Divides each coordinate of the point by the given number.|3302bb192a75492ab2f5f1696449d5e3|
_multiplyby|num|Multiplies the point by a scaling matrix defined by the given number.|3302bb192a75492ab2f5f1696449d5e3|
scaleby|point|Multiplies each coordinate of the current point by each coordinate of the given point.|3302bb192a75492ab2f5f1696449d5e3|
_round|this.x, this.y|Returns a copy of the point with rounded coordinates.|3302bb192a75492ab2f5f1696449d5e3|
_floor|this.x, this.y|Returns a copy of the point with floored coordinates (rounded down).|3302bb192a75492ab2f5f1696449d5e3|
distanceto|point|This method takes another point as an argument and returns the cartesian distance between the current and the given points.|10d9074a783847898392b0820de56fee|
topoint|point|This method is used to convert a non-point value to Point object. It takes a point as an argument and returns a clone of it.|10d9074a783847898392b0820de56fee|
_floor|this|This method returns a copy of the current point with floor coordinates (rounded down).|10d9074a783847898392b0820de56fee|
_ceil|this|This method returns a copy of the current point with ceiled coordinates (rounded up).|10d9074a783847898392b0820de56fee|
_trunc|this|This method returns a copy of the current point with truncated coordinates (rounded towards zero).|10d9074a783847898392b0820de56fee|
equals|point|This method returns true if the given point has the same coordinates as the current point.|10d9074a783847898392b0820de56fee|
contains|point|This method returns true if both coordinates of the given point are less than or equal to the corresponding coordinates of the current point in absolute values.|10d9074a783847898392b0820de56fee|
point|x|The first argument 'x' passed to the constructor Point(x, y) represents the x-coordinate of a point.|5687000f919d427f930a8f6c5df759c3|
point|y|The second argument 'y' passed to the constructor Point(x, y) represents the y-coordinate of a point.|5687000f919d427f930a8f6c5df759c3|
point|round|Optional parameter 'round' when creating a Point object. If true, rounds the x and y coordinates.|5687000f919d427f930a8f6c5df759c3|
l|point|Factory function L.point() creates a Point object with given x and y coordinates or an array representing those coordinates, or a plain object containing x and y properties.|5687000f919d427f930a8f6c5df759c3|
array|point|Alternative factory function L.point(coords: Number[]) accepts an array of the form [x, y] representing a Point object's coordinates.|5687000f919d427f930a8f6c5df759c3|
object|point|Alternative factory function L.point(coords: Object) accepts a plain object with properties x and y representing the coordinates of a Point object.|5687000f919d427f930a8f6c5df759c3|
bounds|point|a constructor of Bounds class takes Point as an argument and extends the bounds to contain the given point.|be8f0fa9b5a34923ae3bee1ec88ae716|
min|max|min and max are properties of Bounds class which represent the top left corner and bottom right corner of the rectangle respectively.|be8f0fa9b5a34923ae3bee1ec88ae716|
getcenter|point|Returns the center point of the bounds, where bounds represents a Rectangle or a Polygon object. The method accepts an optional boolean argument round, which specifies whether to round the coordinates to integers.|9d90e15a69384256b4f8a7a3a819aa6c|
getcenter|bounds|The `getCenter` method takes a `bounds` object as its input and returns the center point of those bounds.|9d90e15a69384256b4f8a7a3a819aa6c|
point|min|The `Point` class in this context has an attribute called `min`. This is the bottom-left corner point of a rectangle or polygon.|9d90e15a69384256b4f8a7a3a819aa6c|
point|max|The `Point` class also has an attribute called `max`. This is the top-right corner point of a rectangle or polygon.|9d90e15a69384256b4f8a7a3a819aa6c|
bounds|min|The `min` property in the `Bounds` object represents the bottom-left corner point of the bounds.|9d90e15a69384256b4f8a7a3a819aa6c|
bounds|max|Similarly, the `max` property in the `Bounds` object represents the top-right corner point of the bounds.|9d90e15a69384256b4f8a7a3a819aa6c|
contains|otherbounds|The `contains` method of a `Bounds` object takes another `Bounds` object as input and returns true if this rectangle contains the given one, false otherwise.|9d90e15a69384256b4f8a7a3a819aa6c|
contains|point|The `contains` method of a `Bounds` object also takes a single point as input and returns true if this rectangle contains that point, false otherwise.|9d90e15a69384256b4f8a7a3a819aa6c|
bounds|obj|if (obj instanceof Bounds) {|7f5a269b7e174256b2752ec84ba5fd4c|
min|bounds|if (obj instanceof Bounds) {|7f5a269b7e174256b2752ec84ba5fd4c|
max|bounds|if (obj instanceof Bounds) {|7f5a269b7e174256b2752ec84ba5fd4c|
min|max|else {|7f5a269b7e174256b2752ec84ba5fd4c|
min.x|bounds|if (obj instanceof Bounds) {|7f5a269b7e174256b2752ec84ba5fd4c|
max.x|bounds|if (obj instanceof Bounds) {|7f5a269b7e174256b2752ec84ba5fd4c|
min.y|bounds|if (obj instanceof Bounds) {|7f5a269b7e174256b2752ec84ba5fd4c|
max.y|bounds|if (obj instanceof Bounds) {|7f5a269b7e174256b2752ec84ba5fd4c|
min|this|else {|7f5a269b7e174256b2752ec84ba5fd4c|
max|this|else {|7f5a269b7e174256b2752ec84ba5fd4c|
min.x|min||7f5a269b7e174256b2752ec84ba5fd4c|
max.x|max||7f5a269b7e174256b2752ec84ba5fd4c|
min.y|min||7f5a269b7e174256b2752ec84ba5fd4c|
max.y|max||7f5a269b7e174256b2752ec84ba5fd4c|
this|min.x|return (min.x >= this.min.x)|7f5a269b7e174256b2752ec84ba5fd4c|
this|max.x|return (max.x <= this.max.x)|7f5a269b7e174256b2752ec84ba5fd4c|
this|min.y|return (min.y >= this.min.y)|7f5a269b7e174256b2752ec84ba5fd4c|
this|max.y|return (max.y <= this.max.y);|7f5a269b7e174256b2752ec84ba5fd4c|
latlngbounds|leaflet's class for representing a rectangular geographical area on a map.|LatLngBounds is a subclass of JavaScript object and does not inherit from Leaflet's Class object. This means new classes cannot inherit from LatLngBounds, and new methods cannot be added to it using the 'include' function.|09ed59f6a76549dba88a62d25156b144|
corner1|latlng or array of latlngs representing a corner coordinate pair.|Corner1 is an optional parameter for creating a new instance of LatLngBounds. If not specified, it returns null.|09ed59f6a76549dba88a62d25156b144|
corner2|latlng or array of latlngs representing the second corner coordinate pair.|Corner2 is an optional parameter for creating a new instance of LatLngBounds. If provided, it is used to create an array containing both corners.|09ed59f6a76549dba88a62d25156b144|
latlng|a class representing a single geographic position on a map.|LatLngBounds can accept either a single LatLng object or an array of LatLng objects to create a new instance.|09ed59f6a76549dba88a62d25156b144|
leaflet's method for accepting latlngbounds objects|method for fitting the map viewport within the bounds specified by the user.||09ed59f6a76549dba88a62d25156b144|
array form|simplified notation for passing latlngbounds objects to leaflet's methods.|Leaflet accepts both a LatLngBounds object and an array containing the coordinates of the corners in place of the LatLngBounds parameter.|09ed59f6a76549dba88a62d25156b144|
caution|note that if the geographic area spans across the antimeridian, it is recommended to specify the corners outside the [-180, 180] degrees longitude range.||09ed59f6a76549dba88a62d25156b144|
latlngbounds|this|The method 'extend' is called on the object 'LatLngBounds'|870e5fe2873b44d6a2cce924526fb158|
latlng|corner1|The variable 'corner1' is assigned a value of 'LatLng' in this context|870e5fe2873b44d6a2cce924526fb158|
latlngbounds|this|The method 'extend' is called on the object 'LatLngBounds' with 'corner1' as an argument|870e5fe2873b44d6a2cce924526fb158|
latlngbounds|this|The method 'extend' is called on the object 'LatLngBounds' with 'corner2' as an argument (if it exists)|870e5fe2873b44d6a2cce924526fb158|
latlng|sw2|The variable 'sw2' is assigned a value of 'LatLng' in this context|870e5fe2873b44d6a2cce924526fb158|
latlng|ne2|The variable 'ne2' is assigned a value of 'LatLng' in this context|870e5fe2873b44d6a2cce924526fb158|
latlngbounds|this|The method 'extend' is called on the object 'LatLngBounds' with 'sw2' and 'ne2' as arguments (if they exist)|870e5fe2873b44d6a2cce924526fb158|
latlngbounds|this|The variables '_southWest' and '_northEast' of the object 'LatLngBounds' are updated based on the results of the 'extend' method|870e5fe2873b44d6a2cce924526fb158|
string|bufferratio|The variable 'bufferRatio' is assigned a value of 'Number'|870e5fe2873b44d6a2cce924526fb158|
latlngbounds|this|The method 'pad' is called on the object 'LatLngBounds' with 'bufferRatio' as an argument|870e5fe2873b44d6a2cce924526fb158|
latlngbounds|sw|sw is a point within the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
latlngbounds|ne|ne is a point within the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
latlngbounds|heightbuffer|heightBuffer is used to determine the southern and northern boundaries of the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
latlngbounds|widthbuffer|widthBuffer is used to determine the western and eastern boundaries of the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
latlng|_southwest|is an instance of LatLng, which represents the south-west corner point of the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
latlng|_northeast|is an instance of LatLng, which represents the north-east corner point of the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
latlng|getnorthwest|returns a new LatLng instance with the same latitude as the north boundary and the same longitude as the west boundary of the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
latlng|getsoutheast|returns a new LatLng instance with the same latitude as the south boundary and the same longitude as the east boundary of the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
number|getwest|returns the longitude value of the western boundary point within the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
number|getsouth|returns the latitude value of the southern boundary point within the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
number|geteast|returns the longitude value of the eastern boundary point within the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
number|getnorth|returns the latitude value of the northern boundary point within the bounds defined by LatLngBounds.|eac409f0ad5e4dc8b04b58321f2b1132|
getnorth|number|Returns the north latitude of the bounds|9a25a79594a74d8792f9dc04d7cbda5d|
contains|latlngbounds|Returns `true` if the rectangle contains the given one.|9a25a79594a74d8792f9dc04d7cbda5d|
contains|latlng|Returns `true` if the rectangle contains the given point.|9a25a79594a74d8792f9dc04d7cbda5d|
intersects|latlngbounds|Returns `true` if the rectangle intersects the given bounds.|9a25a79594a74d8792f9dc04d7cbda5d|
latlngbounds|corner1|The first corner of a LatLngBounds object.|abcee6a95c6e4146a7892e804043a6ac|
latlngbounds|corner2|The second corner of a LatLngBounds object, diagonally opposite to the first one.|abcee6a95c6e4146a7892e804043a6ac|
latlngbounds|latlngs|An array containing the geographical points that define a LatLngBounds object.|abcee6a95c6e4146a7892e804043a6ac|
latlng|latlng|represents a geographical point with a certain latitude and longitude. Both LatLng objects can be passed as arguments to Leaflet methods that accept LatLng objects in Array or object forms, with equivalence between the two forms.|566ca1dc3b2c4aa08c534cefb70093c2|
latlng|lat|latitude in degrees is a property of LatLng objects.|566ca1dc3b2c4aa08c534cefb70093c2|
latlng|lng|longitude in degrees is a property of LatLng objects.|566ca1dc3b2c4aa08c534cefb70093c2|
latlng|alt|altitude in meters is an optional property that can be set for LatLng objects.|566ca1dc3b2c4aa08c534cefb70093c2|
latlng|point (for debugging purposes)|the `toString()` method returns a string representation of the point for debugging purposes.|ba66ca55fbfa4360b6c8b6a9ec89bea5|
distanceto|latlng|the `distanceTo()` method returns the distance (in meters) to another `LatLng` using the Spherical Law of Cosines and the `Earth.distance()` function.|ba66ca55fbfa4360b6c8b6a9ec89bea5|Earth.distance
wrap|latlng|the `wrap()` method returns a new `LatLng` with longitude wrapped between -180 and +180 degrees.|ba66ca55fbfa4360b6c8b6a9ec89bea5|
tobounds|latlng|the `toBounds()` method returns a new `LatLngBounds` object where each boundary is `sizeInMeters/2` meters apart from the `LatLng`.|ba66ca55fbfa4360b6c8b6a9ec89bea5|sizeInMeters
lataccuracy|lngaccuracy|these variables are used to calculate the latitude and longitude accuracy for wrapping and bounding calculations.|ba66ca55fbfa4360b6c8b6a9ec89bea5|
latlng|function () { return new latlng(this.lat, this.lng, this.alt); } |belongsToType|505a60ac0db64c2fb98417a6984a3149|
latlng|clone|isMethodOf|505a60ac0db64c2fb98417a6984a3149|
latlng|tolatlng|isFunctionThatTakesThreeArguments|505a60ac0db64c2fb98417a6984a3149|
latlng|coords|[{'node_1': 'Array', 'node_2': 'LatLng', 'edge': 'canBeConvertedTo'}, {'node_1': 'Object', 'node_2': 'LatLng', 'edge': 'canBeConvertedTo'}]|505a60ac0db64c2fb98417a6984a3149|
latlng|lat|hasProperty|505a60ac0db64c2fb98417a6984a3149|
latlng|lng|hasProperty|505a60ac0db64c2fb98417a6984a3149|
latlng|alt|hasOptionalProperty|505a60ac0db64c2fb98417a6984a3149|
node_1|node_2|edge|chunk_id
crs|latlng|The method 'latLngToPoint' in CRS class takes a LatLng object and a zoom value as input and returns a Point object representing the pixel coordinates of the given geographical location at the specified zoom level.|2faf26b318df417fb7530480dc6fa677
crs|point|The method 'pointToLatLng' in CRS class takes a Point object and a zoom value as input and returns a LatLng object representing the geographical location corresponding to the given pixel coordinates at the specified zoom level.|2faf26b318df417fb7530480dc6fa677
crs|projection|The 'latLngToPoint' and 'pointToLatLng' methods in CRS class use a projection object to convert between geographical and pixel coordinates.|2faf26b318df417fb7530480dc6fa677
crs|scale|The scale value is calculated based on the zoom level and used for coordinate conversions.|2faf26b318df417fb7530480dc6fa677
crs|transformation|The 'transform' and 'untransform' methods in CRS class use a transformation object to convert between screen coordinates and geographical coordinates.|2faf26b318df417fb7530480dc6fa677
project|latlng|The `project` method in the class takes a `LatLng` as input and returns a point according to the CRS (Coordinate Reference System) of this projection.|1518435421f74679a2d6c47e95b9ea92
projection|unproject|The `unproject` method in the class is the inverse of the `project` method and takes a point as input and returns a `LatLng`.|1518435421f74679a2d6c47e95b9ea92
projection|bounds|The `getProjectedBounds` method in the class returns the projection's bounds scaled and transformed for the provided `zoom`.|1518435421f74679a2d6c47e95b9ea92
projection|infinite|If the `infinite` property is true, then the method `getProjectedBounds` returns null.|1518435421f74679a2d6c47e95b9ea92
projection|transformation|The `transform` function in the class transforms coordinates from one CRS to another, and is used by the `getProjectedBounds` method.|1518435421f74679a2d6c47e95b9ea92
zoom|scale|The `scale` method returns the scale used when transforming projected coordinates into pixel coordinates for a particular zoom, and is inversely related to the `zoom` level.|1518435421f74679a2d6c47e95b9ea92
distance|latlng|Returns the distance between two geographical coordinates represented by LatLng objects.|e7f226b489574650bf1ef4d60ce13442
wraplng|bounds|Defaults to [-180, 180] in most geographical CRSs. If undefined, the longitude axis does not wrap around.|e7f226b489574650bf1ef4d60ce13442
wraplatlng|latlng|Wraps lat and lng values outside the CRS's bounds based on the specified wrapLng and wrapLat properties.|e7f226b489574650bf1ef4d60ce13442
transformation|l|Transformation is a class provided by L library for transforming coordinates in projections.|7a08cb831cd44379ab5bb6c821fbf9f7
transformation|point|Transformed points are returned using the 'transform' method of Transformation class. Point is a class provided by L library for representing geographic coordinates.|7a08cb831cd44379ab5bb6c821fbf9f7
l.transformation|l|Transformation is a part of L library which provides projection functionalities.|7a08cb831cd44379ab5bb6c821fbf9f7
l.point|l|Point is also provided by L library for representing geographic coordinates.|7a08cb831cd44379ab5bb6c821fbf9f7
earthradius|math.pi|These variables are used in calculating the bounds of a map using transformations and projections.|7a08cb831cd44379ab5bb6c821fbf9f7
d|earthradius|In this context, 'd' is an abbreviation for distances between points.|7a08cb831cd44379ab5bb6c821fbf9f7
epsg3857|sphericalmercator|EPSG3857 is an object that extends Earth with a code of 'EPSG:3857' and uses the SphericalMercator projection. Transformation for this object is defined as a function.|5d83fd46d294462eab8f0a2a9495358b
svg|l.svg|SVG is a namespace that can be used to call L.SVG functions without instantiating an object. It includes create() function that returns a SVGElement based on the class name passed.|5d83fd46d294462eab8f0a2a9495358b
svgcreate|document.createelementns('http://www.w3.org/2000/svg', name)|svgCreate() is a static function that returns an instance of the SVGElement corresponding to the class name passed.|5d83fd46d294462eab8f0a2a9495358b
pointstopath|l.svg pointstopath() function|Generates a SVG path string for multiple rings with each ring turning into 'M..L..L..' instructions.|5d83fd46d294462eab8f0a2a9495358b
browser|ie|true for all Internet Explorer versions (not Edge)|5f9158cf72324b69b6b4779dd7cf3f82
browser|iealt9|true for Internet Explorer versions less than 9|5f9158cf72324b69b6b4779dd7cf3f82
browser|edge|true for the Edge web browser|5f9158cf72324b69b6b4779dd7cf3f82
browser|webkit|// `true` for webkit-based browsers like Chrome and Safari (including mobile versions).|5f9158cf72324b69b6b4779dd7cf3f82
useragent|android|// `true` for any browser running on an Android platform.|5f9158cf72324b69b6b4779dd7cf3f82
useragent|android23|// `true` for browsers running on Android 2 or Android 3.|5f9158cf72324b69b6b4779dd7cf3f82
chrome|chrome browser|represents the Chrome browser when 'chrome' is true for the given context.|a53410ff83594714b42a82ec00d2ad13
edge browser|not chrome|represents the Edge browser when 'chrome' is false and 'edge' is true for the given context.|a53410ff83594714b42a82ec00d2ad13
gecko|gecko-based browsers like firefox||a53410ff83594714b42a82ec00d2ad13
webkitver|version of webkit engine (537 or higher)|represents the version of WebKit engine (537 or higher) when 'chrome' and 'webkitVer' are used together to determine if the browser is Chrome or not.|a53410ff83594714b42a82ec00d2ad13
android|android stock browser|represents the Android stock browser (i.e., not Chrome) when 'android' and 'userAgentContains' and 'webkitVer' are used together to determine if the browser is Chrome or not.|a53410ff83594714b42a82ec00d2ad13
apple|applewebkit|represents AppleWebKit when 'chrome' and 'userAgentContains' and 'webkitVer' are used together to determine if the browser is Chrome or not.|a53410ff83594714b42a82ec00d2ad13
opera|opera browser||a53410ff83594714b42a82ec00d2ad13
ie3d|internet explorer versions supporting css transforms|represents Internet Explorer versions supporting CSS transforms when 'ie' and '(' in style$1 is used together to determine if the browser is Chrome or not.|a53410ff83594714b42a82ec00d2ad13
phantom|phantomjs (headless browser)||a53410ff83594714b42a82ec00d2ad13
win|windows platform||a53410ff83594714b42a82ec00d2ad13
ie3d|boolean|In this context, 'ie3d' is a Boolean property that represents whether Internet Explorer versions supporting CSS transforms are available.|68b5da5c457f44e78d305b808268bff0
webkit3d|boolean|The 'webkit3d' variable is a Boolean value indicating whether webkit-based browsers support CSS transforms.|68b5da5c457f44e78d305b808268bff0
gecko3d|boolean|In this context, 'gecko3d' is a Boolean property that represents whether gecko-based browsers support CSS transforms.|68b5da5c457f44e78d305b808268bff0
any3d|boolean|The 'any3d' variable in this context is a Boolean value representing whether all browsers support CSS transforms, regardless of browser type.|68b5da5c457f44e78d305b808268bff0
mobile|boolean|In this context, 'mobile' is a Boolean property that represents whether the current device being used is classified as a mobile device.|68b5da5c457f44e78d305b808268bff0
mobilewebkit|boolean|The 'mobileWebkit' variable is a Boolean value indicating whether webkit-based browsers are running on a mobile device.|68b5da5c457f44e78d305b808268bff0
mobilewebkit3d|boolean|In this context, 'mobileWebkit3d' is a Boolean property representing whether webkit-based browsers running on a mobile device support CSS transforms.|68b5da5c457f44e78d305b808268bff0
mspointer|boolean|The 'msPointer' variable in this context is a Boolean value indicating whether the Microsoft touch events model (notably IE10) is being used.|68b5da5c457f44e78d305b808268bff0
pointer|boolean|In this context, 'pointer' is a Boolean property representing whether all browsers support pointer events.|68b5da5c457f44e78d305b808268bff0
touch|touch events|This property, touch, is used to check whether all browsers supporting [touch events](https://developer.mozilla.org/docs/Web/API/Touch_events) are being used.|f3c38d888da24f89bf4c992c5e77ff07
browser|opera browser|In this context, 'mobileOpera' property is used to check whether the Opera browser is being used in a mobile device.|f3c38d888da24f89bf4c992c5e77ff07
browser|gecko-based browsers|The 'mobileGecko' property is used to determine whether gecko-based browsers are being run on a mobile device.|f3c38d888da24f89bf4c992c5e77ff07
screen|high-resolution screen|This property, retina, checks whether the browser is being used on a high-resolution 'retina' screen or when the display zoom is more than 100%.|f3c38d888da24f89bf4c992c5e77ff07
passiveevents|supportspassiveoption|The variable 'supportsPassiveOption' holds a boolean value indicating whether the browser supports passive events or not. It is initially set to false, and then tested using Object.defineProperty(). If the browser supports passive events, this variable will be set to true.|37ae719fd9784a2eae346ede1112c736
canvas|getcontext|The 'getContext' property is available on the canvas element when the browser supports the HTML5 Canvas API.|37ae719fd9784a2eae346ede1112c736
svg|createelementns|The 'createElementNS' method is available when the browser supports SVG.|37ae719fd9784a2eae346ede1112c736
svg|createsvgrect|The 'createSVGRect' method is available on SVG elements in browsers that support SVG.|37ae719fd9784a2eae346ede1112c736
vml|adj|The 'adj' property is a part of the Vector Markup Language (VML), which is used to create vector graphics in Internet Explorer. The presence of this property indicates that the browser supports VML.|37ae719fd9784a2eae346ede1112c736
vml|style.behavior|The 'style.behavior' property is used to set behavior attributes for VML elements in Internet Explorer. Its presence indicates support for VML.|37ae719fd9784a2eae346ede1112c736
vml|typeof shape.adj === 'object'|This condition checks whether the 'adj' property is an object or not. If the browser supports VML, this condition will be true.|37ae719fd9784a2eae346ede1112c736
navigator.useragent|indexof|The 'indexOf' method is used to check whether a particular string is present in the user agent string. It helps in detecting support for specific technologies.|37ae719fd9784a2eae346ede1112c736
navigator.useragent|tolowercase|The 'toLowerCase' method is called on the user agent string to convert it to lowercase, as many strings used in detecting support are case-insensitive.|37ae719fd9784a2eae346ede1112c736
browser|ie|Browser is a property of ie|c33c5f854fa542d5a39dc58c964cd834
browser|ielt9|Browser is a property of ielt9|c33c5f854fa542d5a39dc58c964cd834
browser|edge|Browser is a property of edge|c33c5f854fa542d5a39dc58c964cd834
browser|webkit||c33c5f854fa542d5a39dc58c964cd834
browser|android||c33c5f854fa542d5a39dc58c964cd834
browser|android23||c33c5f854fa542d5a39dc58c964cd834
browser|androidstock||c33c5f854fa542d5a39dc58c964cd834
browser|opera||c33c5f854fa542d5a39dc58c964cd834
browser|chrome||c33c5f854fa542d5a39dc58c964cd834
browser|gecko||c33c5f854fa542d5a39dc58c964cd834
browser|safari||c33c5f854fa542d5a39dc58c964cd834
browser|phantom||c33c5f854fa542d5a39dc58c964cd834
browser|opera12||c33c5f854fa542d5a39dc58c964cd834
browser|win||c33c5f854fa542d5a39dc58c964cd834
browser|ie3d||c33c5f854fa542d5a39dc58c964cd834
browser|webkit3d||c33c5f854fa542d5a39dc58c964cd834
browser|gecko3d||c33c5f854fa542d5a39dc58c964cd834
browser|any3d||c33c5f854fa542d5a39dc58c964cd834
browser|mobile||c33c5f854fa542d5a39dc58c964cd834
browser|mobilewebkit||c33c5f854fa542d5a39dc58c964cd834
browser|mobilewebkit3d||c33c5f854fa542d5a39dc58c964cd834
browser|mspointer||c33c5f854fa542d5a39dc58c964cd834
browser|pointer||c33c5f854fa542d5a39dc58c964cd834
browser|touch||c33c5f854fa542d5a39dc58c964cd834
browser|mobileopera||c33c5f854fa542d5a39dc58c964cd834
browser|mobilegecko||c33c5f854fa542d5a39dc58c964cd834
browser|retina||c33c5f854fa542d5a39dc58c964cd834
browser|passiveevents||c33c5f854fa542d5a39dc58c964cd834
browser|canvas||c33c5f854fa542d5a39dc58c964cd834
browser|svg||c33c5f854fa542d5a39dc58c964cd834
browser|vml||c33c5f854fa542d5a39dc58c964cd834
addpointerlistener|obj|is used to add a pointer event listener to an object|ddaf291e7e9c47778c18bfbee050073a
addpointerlistener|type|indicates the type of pointer event, such as 'touchstart', 'touchmove', or 'touchend'|ddaf291e7e9c47778c18bfbee050073a
addpointerlistener|handler|is a function that will be called when the specified pointer event is triggered on the object|ddaf291e7e9c47778c18bfbee050073a
removepointerlistener|obj|is used to remove a previously added pointer event listener from an object|ddaf291e7e9c47778c18bfbee050073a
removepointerlistener|type|indicates the type of pointer event being removed|ddaf291e7e9c47778c18bfbee050073a
removepointerlistener|id|is a unique identifier assigned to the pointer event listener when it was added, which allows it to be easily removed from the object's list of listeners|ddaf291e7e9c47778c18bfbee050073a
_addpointerstart|obj|is used as an internal helper function within addPointerListener to add a 'touchstart' event listener to the specified object|ddaf291e7e9c47778c18bfbee050073a
_addpointerstart|handler|is the function that will be called when a 'touchstart' event is triggered on the object|ddaf291e7e9c47778c18bfbee050073a
_addpointerstart|id|is a unique identifier assigned to this specific instance of the '_addPointerStart' helper function, allowing it to be easily removed using removePointerListener|ddaf291e7e9c47778c18bfbee050073a
_handlepointer|e|is a parameter passed to both _addPointerStart and '_handlePointer', representing the event object triggered by the pointer event|ddaf291e7e9c47778c18bfbee050073a
handler|_handlepointer|indicates that the 'handler' function is called within '_handlePointer'|ddaf291e7e9c47778c18bfbee050073a
_handlepointer|handler|passes the event object (e) and its corresponding handler to _handlePointer for processing. The handler is a function that performs the desired action based on the pointer event.|46c7f6af496f413fa76398afa2dd8e4d
_handlepointer|handler|is used in conjunction with the 'handler' node to allow for multiple event handlers to be registered and invoked simultaneously. By wrapping the handler function within an anonymous function and passing it as an argument to '_addEvent-Listener', we can assign a unique identifier (id) to each listener, which is used to later retrieve and remove the listeners when necessary.|46c7f6af496f413fa76398afa2dd8e4d
_handlepointer|e|is the event object that contains information about the pointer interaction, such as its type (POINTER_DOWN, POINTER_MOVE, POINTER_UP, or POINTER_CANCEL), coordinates, and identifiers.|46c7f6af496f413fa76398afa2dd8e4d
_pointers|_globalpointerdown|is used to keep track of the IDs of active pointers and their corresponding positions. It is updated in '_globalPointerDown' when a new pointer is detected, and is later accessed in '_handlePointer' to provide e.touches emulation.|46c7f6af496f413fa76398afa2dd8e4d
_pointers|_globalpointermove|is updated with the new position of an active pointer in '_globalPointerMove'.|46c7f6af496f413fa76398afa2dd8e4d
_pointers|_globalpointerup|is used to delete a pointer and its corresponding position from '_pointers' in '_globalPointerUp'.|46c7f6af496f413fa76398afa2dd8e4d
obj['_leaflet_touchstart' + id]|ondown|is used to register a pointer down event listener for a specific element (obj) and its corresponding ID (id). The listener is defined as 'onDown'.|46c7f6af496f413fa76398afa2dd8e4d
obj.addeventlistener(pointer_down, ondown, false)|_globalpointerdoclistener|is set to true in the global context (document) when registering document-wide pointer down event listeners (i.e., _globalPointerDown), and is used to determine whether the listener should be added or removed.|46c7f6af496f413fa76398afa2dd8e4d
obj['_leaflet_touchmove' + id]|_addpointermove|is used to register a pointer move event listener for a specific element (obj) and its corresponding ID (id). The listener is defined as '_addPointerMove', which in turn invokes an anonymous function (onMove) that checks whether the mouse button is down before forwarding the event to '_handlePointer'.|46c7f6af496f413fa76398afa2dd8e4d
obj.addeventlistener(pointer_move, onmove, false)|_globalpointerdoclistener|is set to true in the global context (document) when registering document-wide pointer move event listeners (i.e., _globalPointerMove), and is used to determine whether the listener should be added or removed.|46c7f6af496f413fa76398afa2dd8e4d
obj['_leaflet_touchup' + id]|_addpointerend|is used to register a pointer up event listener for a specific element (obj) and its corresponding ID (id). The listener is defined as '_addPointerEnd', which in turn invokes an anonymous function (onUp) that forwards the event to '_handlePointer'.|46c7f6af496f413fa76398afa2dd8e4d
obj.addeventlistener(pointer_up, onup, false)|_globalpointerdoclistener|is set to true in the global context (document) when registering document-wide pointer up event listeners (i.e., _globalPointerEnd), and is used to determine whether the listener should be added or removed.|46c7f6af496f413fa76398afa2dd8e4d
_pointers|e.touches|is updated with a new array containing only the current pointer (stored in '_pointers' as keyed by its ID) when forwarding a pointer down event to '_handlePointer', allowing for e.touches emulation.|46c7f6af496f413fa76398afa2dd8e4d
_pointers|e.changedtouches|is updated with an array containing only the current pointer (stored in '_pointers' as keyed by its ID) when forwarding a pointer move event to '_handlePointer', allowing for e.touches emulation.|46c7f6af496f413fa76398afa2dd8e4d
_globalpointerdoclistener|true|is set to false in the global context (document) when removing document-wide pointer down, move, and up event listeners (i.e., _globalPointerDown, _globalPointerMove, and _globalPointerEnd), respectively.|46c7f6af496f413fa76398afa2dd8e4d
_addpointerend|handler|invokes the specified handler in response to pointer events|782eb1d9ed834c31997a6010201f38e1
_addpointerend|id|used to distinguish between multiple event listeners with the same handler|782eb1d9ed834c31997a6010201f38e1
_touchstart|_pre|added to the object being listened for pointer events to support touch devices|782eb1d9ed834c31997a6010201f38e1
_touchend|_pre|added to the object being listened for pointer events to support touch devices|782eb1d9ed834c31997a6010201f38e1
adddoubletaplistener|obj|associates the specified double tap event listener with the given object|782eb1d9ed834c31997a6010201f38e1
adddoubletaplistener|handler|invokes the specified handler in response to a double tap event|782eb1d9ed834c31997a6010201f38e1
adddoubletaplistener|id|used to distinguish between multiple event listeners with the same handler|782eb1d9ed834c31997a6010201f38e1
obj|_pre + _touchstart + id|addEventListeners for touchstart events with passiveEvents option|f5b49a5ec6484c348c0dc00d62978b73
obj|_pre + _touchend + id|addEventListeners for touchend events with passiveEvents option|f5b49a5ec6484c348c0dc00d62978b73
obj|_pre + 'dblclick' + id|addEventListener for double-click events (for some platforms)|f5b49a5ec6484c348c0dc00d62978b73
removedoubletaplistener|obj|removes eventListeners added using addEventListener|f5b49a5ec6484c348c0dc00d62978b73
removedoubletaplistener|_pre + _touchstart + id||f5b49a5ec6484c348c0dc00d62978b73
removedoubletaplistener|_pre + _touchend + id||f5b49a5ec6484c348c0dc00d62978b73
removedoubletaplistener|_pre + 'dblclick' + id||f5b49a5ec6484c348c0dc00d62978b73
domutil|*|namespace for DOM utilities|f5b49a5ec6484c348c0dc00d62978b73
htmlelement|obj||f5b49a5ec6484c348c0dc00d62978b73
svgelement|obj||f5b49a5ec6484c348c0dc00d62978b73
transform|webkittransform|Vendor-prefixed transform style name for WebKit (e.g. `'webkitTransform'`).|13ac453705f747afb148c742831400a4
transform|otransform|Vendor-prefixed transform style name for other browsers (e.g. `'OTransform'`).|13ac453705f747afb148c742831400a4
transform|moztransform|Vendor-prefixed transform style name for Mozilla-based browsers (e.g. `'MozTransform'`).|13ac453705f747afb148c742831400a4
transform|mstransform|Vendor-prefixed transform style name for Microsoft Edge and Internet Explorer 11 (e.g. `'msTransform'`).|13ac453705f747afb148c742831400a4
transition|webkittransition|Vendor-prefixed transition style name for WebKit.|13ac453705f747afb148c742831400a4
transition|transition|Standardized (non-vendor-prefixed) transition style name.|13ac453705f747afb148c742831400a4
transition|otransition|Vendor-prefixed transition style name for other browsers.|13ac453705f747afb148c742831400a4
transition|moztransition|Vendor-prefixed transition style name for Mozilla-based browsers.|13ac453705f747afb148c742831400a4
transition|mstransition|Vendor-prefixed transition style name for Microsoft Edge and Internet Explorer 11.|13ac453705f747afb148c742831400a4
transition_end|transitionend|Standardized (non-vendor-prefixed) transitionend event name.|13ac453705f747afb148c742831400a4
transition_end|otransitionend|Vendor-prefixed transitionend event name for other browsers.|13ac453705f747afb148c742831400a4
el|htmlelement|Returns an element given its DOM id, or returns the element itself if it was passed directly.|13ac453705f747afb148c742831400a4
el|getstyle|Returns the value for a certain style attribute on an element, including computed values or values set through CSS.|13ac453705f747afb148c742831400a4
style|getstyle|Specifies the name of a CSS property to retrieve.|13ac453705f747afb148c742831400a4
create|htmlelement|function create in the given context takes a tagName and optionally container and className as arguments to return an HTMLElement.|4e72880e184448da934eddb8edd21c1a
remove|el|function remove removes the element el from its parent element.|4e72880e184448da934eddb8edd21c1a
empty|el|function empty removes all children elements of el.|4e72880e184448da934eddb8edd21c1a
tofront|el|function toFront makes the element el the last child of its parent, so it renders in front of other children.|4e72880e184448da934eddb8edd21c1a
toback|el|function toBack makes the element el the first child of its parent, so it renders behind other children.|4e72880e184448da934eddb8edd21c1a
htmlelement|create|create returns an HTMLElement.|4e72880e184448da934eddb8edd21c1a
el|empty|function empty removes all children elements of el.|4e72880e184448da934eddb8edd21c1a
el|remove|function remove removes the element el from its parent element.|4e72880e184448da934eddb8edd21c1a
htmlelement|toback|function toBack makes the element HTMLElement render behind other children.|4e72880e184448da934eddb8edd21c1a
htmlelement|tofront|function toFront makes the element HTMLElement render in front of other children.|4e72880e184448da934eddb8edd21c1a
el|toback|function toBack makes the element el render behind other children.|4e72880e184448da934eddb8edd21c1a
el|tofront|function toFront makes the element el render in front of other children.|4e72880e184448da934eddb8edd21c1a
el|remove|function remove removes the element el from its parent element.|4e72880e184448da934eddb8edd21c1a
function|hasclass|is a method or function|73fc497d4eeb45338919bf999be4761d
htmlelement|el|is the parameter for the 'hasClass' function|73fc497d4eeb45338919bf999be4761d
string|name|is the parameter for the 'hasClass' and 'addClass' and 'removeClass' functions|73fc497d4eeb45338919bf999be4761d
boolean|return value of 'hasclass'|is returned by the 'hasClass' function|73fc497d4eeb45338919bf999be4761d
classlist|htmlelement property|is used in the implementation of 'hasClass'|73fc497d4eeb45338919bf999be4761d
contains|method of array-like objects|is used in the implementation of 'classList.contains(name)' inside 'hasClass'|73fc497d4eeb45338919bf999be4761d
splitwords|function|is called by 'addClass' to split class names into an array|73fc497d4eeb45338919bf999be4761d
i|loop index variable in 'addclass'|iterates over the classes array returned by 'splitWords'|73fc497d4eeb45338919bf999be4761d
classlist.add(classes[i])|statement inside 'addclass' loop|adds each class in 'classes' array to the element's class list|73fc497d4eeb45338919bf999be4761d
trim|function|is called by 'removeClass' and 'setClass'|73fc497d4eeb45338919bf999be4761d
replace|string method|is used in the implementation of 'setClass'|73fc497d4eeb45338919bf999be4761d
function|htmlelement|Returns the element's class. The input parameter 'el' is of type HTMLElement.|00a300743e9345b3887bb5bfaaa49707
htmlelement|string|The function 'getClass' returns a String containing the element's class.|00a300743e9345b3887bb5bfaaa49707
htmlelement|number|The function 'setOpacity' takes an argument 'opacity' of type Number and sets the opacity of an element.|00a300743e9345b3887bb5bfaaa49707
string|number|The function 'setOpacity' takes a parameter 'value' which is a number between 0 and 1 to set the opacity of an element.|00a300743e9345b3887bb5bfaaa49707
htmlelement|htmlelement|The function '_setOpacityIE' checks for filters collection and sets the opacity using Microsoft's Alpha filter.|00a300743e9345b3887bb5bfaaa49707
string|string|The variables 'filter' and 'filterName' are used to check for filters collection in IE.|00a300743e9345b3887bb5bfaaa49707
eventskey|id|contains as an object property|61a70233ac6c495fb8e5c94db2659c9d
type|fn|invokes fn when type is triggered on the object|61a70233ac6c495fb8e5c94db2659c9d
type|context|passed as an optional parameter to fn when type is triggered on the object|61a70233ac6c495fb8e5c94db2659c9d
obj|id|contains id as an object property when a type is added using addOne method|61a70233ac6c495fb8e5c94db2659c9d
eventskey|id|stores a list of id values for each registered event type on the object|61a70233ac6c495fb8e5c94db2659c9d
touchstart|mouseover|used as a substitute for 'touchstart' when adding a touch event listener using pointer.js library|61a70233ac6c495fb8e5c94db2659c9d
dblclick|browserfiresnativedblclick|conditional replacement of dblclick event type based on browser support for native double-click event|61a70233ac6c495fb8e5c94db2659c9d
touch|pointer|used as a flag to determine whether to use pointer.js library or not for adding touch event listeners|61a70233ac6c495fb8e5c94db2659c9d
type|originalhandler|stores the original handler function associated with the registered type|61a70233ac6c495fb8e5c94db2659c9d
obj|addeventlistener|built-in DOM method for adding event listeners|61a70233ac6c495fb8e5c94db2659c9d
type|passiveevents|used as a flag to specify whether passive event listeners should be added using addEventListener method|61a70233ac6c495fb8e5c94db2659c9d
addeventlistener|removeeventlistener|Inverse relationship between the two event listeners, used for adding and removing events from an element.|2aa5a0e5ccf2470cbe189f2835edbb78
addeventlistener|removeeventlistener|Relationship between the addEventlistener() and removeEventlistener() functions, used for adding and removing event handlers to/from an element.|2aa5a0e5ccf2470cbe189f2835edbb78
attachevent|detachevent|Inverse relationship between the two event attachment methods, used for attaching and detaching event handlers in IE browsers.|2aa5a0e5ccf2470cbe189f2835edbb78
stamp|handler|Relationship between function stamp() that generates a unique ID for the event handler function, and the event handler function itself.|2aa5a0e5ccf2470cbe189f2835edbb78
mousesubst|type|Relationship between mouse event substitution object mouseSubst and the type of event being listened for.|2aa5a0e5ccf2470cbe189f2835edbb78
context|handler|Optional relationship between the context in which an event is called and its associated handler function.|2aa5a0e5ccf2470cbe189f2835edbb78
obj|eventskey|Relationship between element or object being interacted with, and a key used to store event handlers for that element/object in an events object.|2aa5a0e5ccf2470cbe189f2835edbb78
disableclickpropagation|el|is a function that takes an HTMLElement as an argument and returns this. The function adds 'stopPropagation' to the element's 'click', 'doubleclick', 'mousedown', and 'touchstart' events (plus browser variants).|ff30dd8c38e948028b5e43aa9a45deea
preventdefault|e|is a function that takes a DOMEvent as an argument and returns this. The function prevents the default action of the DOM Event 'ev' from happening (such as following a link in the href of the a element, or doing a POST request with page reload when a '<form>' is submitted).|ff30dd8c38e948028b5e43aa9a45deea
stop|e|is a function that takes a DOMEvent as an argument and returns this. The function does 'preventDefault' and 'stopPropagation' at the same time.|ff30dd8c38e948028b5e43aa9a45deea
getmouseposition|e, container? |is a function that takes a DOMEvent and an optional HTMLElement as arguments. The function returns a Point object with normalized mouse position relative to the 'container' (border excluded) or to the whole page if not specified.|ff30dd8c38e948028b5e43aa9a45deea
clientx, clienty|e|are properties of a DOMEvent that contain the horizontal and vertical coordinates of the mouse pointer relative to the viewport when the event was fired.|ff30dd8c38e948028b5e43aa9a45deea
boundingclientrect|container|is a property of an HTMLElement that contains a Rect object with information about its position and size relative to the viewport (i.e., top, left, width, and height).|ff30dd8c38e948028b5e43aa9a45deea
scale|container|is an object that contains 'x' and 'y' properties with values between 0 and 1 that represent the scaling factor of the container relative to the viewport.|ff30dd8c38e948028b5e43aa9a45deea
scale|container|The variable 'scale' is assigned a value obtained from the method 'getScale' applied to the element 'container'|74be565417b4435cb43c995d2f01568f
offset|container|The variable 'offset' is assigned the boundingClientRect of the element 'container'|74be565417b4435cb43c995d2f01568f
e.clientx|offset.left|The value of 'e.clientX' is subtracted from the left value (in page scale) of the variable 'offset'|74be565417b4435cb43c995d2f01568f
scale.x|e.clientx|The value of 'e.clientX' is divided by the x component of the scale applied to the container|74be565417b4435cb43c995d2f01568f
container.clientleft|e.clientx|The clientLeft (in original values) of the element 'container' is subtracted from the value obtained by dividing 'e.clientX' by the scale|74be565417b4435cb43c995d2f01568f
wheelpxfactor|chrome|The variable 'wheelPxFactor' is assigned a value of 2 for Chrome on Windows|74be565417b4435cb43c995d2f01568f
window.devicepixelratio|gecko|The variable 'wheelPxFactor' is assigned the device pixel ratio for Mozilla Firefox (Gecko)|74be565417b4435cb43c995d2f01568f
getwheeldelta|e|function parameter passed to getWheelDelta function|ebf20d8fad20430f8dd65c67a9588156
event|e|variable e used to pass events such as DOMEvent or mouse event to functions like fakeStop, skipped and getWheelDelta|ebf20d8fad20430f8dd65c67a9588156
skipevents|e.type|dictionary skipEvents used to store events that should be skipped for propagation outside of the map element, accessed through e.type|ebf20d8fad20430f8dd65c67a9588156
fakestop|e|function fakeStop called when an event is skipped to prevent default behavior such as scrolling|ebf20d8fad20430f8dd65c67a9588156
skipped|e|function skipped used to check if the event has already been skipped for propagation outside of the map element|ebf20d8fad20430f8dd65c67a9588156
el|isexternaltarget|element that is being checked for mouseenter or mouseleave events, passed as argument to isExternalTarget function|ebf20d8fad20430f8dd65c67a9588156
e|isexternaltarget|event used in conjunction with el to determine whether the event target has left or entered another element, passed as argument to isExternalTarget function|ebf20d8fad20430f8dd65c67a9588156
relatedtarget|isexternaltarget|property of the e object used in conjunction with el to determine whether the event target has left or entered another element, accessed through e|ebf20d8fad20430f8dd65c67a9588156
posanimation|evented|inheritance relationship between the two classes PosAnimation and Evented|c4efb0f2168b4ab39ff17008d4901556
posanimation|l.posanimation|constructor function used to create a PosAnimation object|c4efb0f2168b4ab39ff17008d4901556
el|htmlelement|the type of the element being animated|c4efb0f2168b4ab39ff17008d4901556
newpos|point|the new position to which the element is being animated|c4efb0f2168b4ab39ff17008d4901556
duration|number|optional duration of the animation in seconds, default value 0.25|c4efb0f2168b4ab39ff17008d4901556
easelinearity|number|optional easing linearity factor for the cubic bezier curve used in the animation, default value 0.5|c4efb0f2168b4ab39ff17008d4901556
this._animate|_animid|is used to request animation frames in this method.|6a5767398b504d3e833b6e37c9a43f12
requestanimframe|this|is called inside the _animate method to start the animation loop.|6a5767398b504d3e833b6e37c9a43f12
_step|elapsed|keeps track of the elapsed time during the animation.|6a5767398b504d3e833b6e37c9a43f12
duration|_duration|is used to set the duration of the animation in milliseconds.|6a5767398b504d3e833b6e37c9a43f12
this._easeoutpower|easelinearity|is used as a fallback value when easeLinearity is not provided.|6a5767398b504d3e833b6e37c9a43f12
math.pow|(1 - t)|is used in the _easeOut method to calculate the easing out curve.|6a5767398b504d3e833b6e37c9a43f12
_complete|cancelanimframe|is called inside the _complete method to cancel the animation loop.|6a5767398b504d3e833b6e37c9a43f12
setposition|this._el|is used to set the position of the element during the animation.|6a5767398b504d3e833b6e37c9a43f12
progress|_runframe|is passed as an argument to _runFrame method to calculate the current progress of the animation.|6a5767398b504d3e833b6e37c9a43f12
_round|pos|is used inside the _runFrame method to round the calculated position for rounding purposes.|6a5767398b504d3e833b6e37c9a43f12
map|evented|is a subclass of Evented|26b1cd7b88bd46169eb6f2bffb2bb7b7
l.crs.epsg3857|map|has CRS option as EPSG3857 by default|26b1cd7b88bd46169eb6f2bffb2bb7b7
latlng|map|can be initialized with initial geographic center of the map|26b1cd7b88bd46169eb6f2bffb2bb7b7
number|map.options.zoom|is the Initial map zoom level option for Map class|26b1cd7b88bd46169eb6f2bffb2bb7b7
gridlayer|layers|can have minZoom and maxZoom options, which can be used to determine minimum and maximum zoom levels for the map if not specified in Map class|26b1cd7b88bd46169eb6f2bffb2bb7b7
node_1|node_2|edge|chunk_id
layers|layer[]|The key 'layers' in the options object is assigned an initial empty array, which can be used to add layers to the map.|06241be308a547e496b2a4bca05cca4d
layers|layers[]|The variable 'layers' in the options object is declared as a type of 'Layer[]', indicating that it will hold multiple 'Layer' objects.|06241be308a547e496b2a4bca05cca4d
layer|layer|The key 'layers' contains an array of objects, each of which is a 'Layer' object that represents a layer on the map.|06241be308a547e496b2a4bca05cca4d
map|l.map|The variable 'map' in the options object is assigned the 'L.Map' constructor function, which creates a map instance.|06241be308a547e496b2a4bca05cca4d
options|object|The 'options' property in the constructor of the Map class is an object that contains various configuration options for the map.|06241be308a547e496b2a4bca05cca4d
l.svg|renderer|The 'renderer' option can be set to either 'L.SVG' or 'L.Canvas', depending on browser support, to determine the method used to draw vector layers.|06241be308a547e496b2a4bca05cca4d
l.canvas|renderer|The 'renderer' option can be set to either 'L.SVG' or 'L.Canvas', depending on browser support, to determine the method used to draw vector layers.|06241be308a547e496b2a4bca05cca4d
zoomanimation|boolean|The 'zoomAnimation' option is a Boolean value that determines whether the map zoom animation is enabled or not.|06241be308a547e496b2a4bca05cca4d
zoomanimationthreshold|number|The 'zoomAnimationThreshold' option is a Number value that specifies a threshold for zooming, above which zooming will not be animated.|06241be308a547e496b2a4bca05cca4d
fadeanimation|boolean|The 'fadeAnimation' option is a Boolean value that determines whether the tile fade animation is enabled or not.|06241be308a547e496b2a4bca05cca4d
markerzoomanimation|boolean|The 'markerZoomAnimation' option is a Boolean value that determines whether markers animate their zoom with the zoom animation, if disabled they will disappear for the length of the animation.|06241be308a547e496b2a4bca05cca4d
transform3dlimit|css translation transform|The maximum size of a CSS translation transform is defined by the 'transform3DLimit' option, which has a default value that should not be changed unless web browsers position layers incorrectly after doing a large 'panBy'.|68aa07ab2dfe48ef937b0592ddb76f6f
zoomsnap|map's zoom level|After executing a 'fitBounds()' or pinch-zoom operation, the map's zoom level is forced to always be a multiple of the 'zoomSnap' value, which defaults to snapping to the nearest integer. Lower values allow for greater granularity, and a value of 0 prevents zoom level snapping after 'fitBounds()' or pinch-zoom operations.|68aa07ab2dfe48ef937b0592ddb76f6f
zoomdelta|map's zoom level|The amount the map's zoom level changes after executing a 'zoomIn()', 'zoomOut()', pressing the '+' or '-' keys, or using zoom controls is controlled by the 'zoomDelta' option. Smaller values allow for greater granularity.|68aa07ab2dfe48ef937b0592ddb76f6f
initialize|map|The 'initialize()' method takes a map element (HTML element or ID string) and an options object as arguments, with initial settings taken from the Map.Options class.|68aa07ab2dfe48ef937b0592ddb76f6f
setzoom|zoom|is a parameter passed to the method 'setZoom'|74691ef27b704d7cb2357008cf7e9ff9
setzoom|options|can be an object containing options for zoom animations or pan reset|74691ef27b704d7cb2357008cf7e9ff9
setview|center|is a required parameter specifying the geographical center of the map view|74691ef27b704d7cb2357008cf7e9ff9
setview|zoom|is a required parameter specifying the zoom level of the map view|74691ef27b704d7cb2357008cf7e9ff9
setview|options|can be an object containing options for view animation or pan reset|74691ef27b704d7cb2357008cf7e9ff9
map|control|Base class for implementing map controls.|0f79a45f89174e9a98b39b5fe6407dd3
l.map|map|Instantiates a map object given the DOM ID of a <div> element and optionally an object literal with Map options.|0f79a45f89174e9a98b39b5fe6407dd3
l.map|htmlelement|Instantiates a map object given an instance of a <div> HTML element and optionally an object literal with Map options.|0f79a45f89174e9a98b39b5fe6407dd3
zoomin|map|Increases the zoom of the map by delta ([`zoomDelta`](#map-zoomdelta) by default).|0f79a45f89174e9a98b39b5fe6407dd3
zoomout|map|Decreases the zoom of the map by delta ([`zoomDelta`](#map-zoomdelta) by default).|0f79a45f89174e9a98b39b5fe6407dd3
control|class|Control is a class that extends Class|008bd277e6dc448192bc570f662c6a32
options|control|Control has an options property|008bd277e6dc448192bc570f662c6a32
position|control.options|Control.options has a position property|008bd277e6dc448192bc570f662c6a32
topleft'|control.options.position|Control.options.position can have the value 'topleft'|008bd277e6dc448192bc570f662c6a32
topright'|control.options.position|Control.options.position can have the value 'topright'|008bd277e6dc448192bc570f662c6a32
bottomleft'|control.options.position|Control.options.position can have the value 'bottomleft'|008bd277e6dc448192bc570f662c6a32
bottomright'|control.options.position|Control.options.position can have the value 'bottomright'|008bd277e6dc448192bc570f662c6a32
getposition|control|Control has a getPosition method|008bd277e6dc448192bc570f662c6a32
setposition|control|Control has a setPosition method|008bd277e6dc448192bc570f662c6a32
map|control.remove|Control.remove removes the control from the given map|008bd277e6dc448192bc570f662c6a32
map|control.addto|Control.addTo adds the control to the given map|008bd277e6dc448192bc570f662c6a32
_controlcorners|map|map has a property '_controlCorners'|008bd277e6dc448192bc570f662c6a32
corner|control._container|Control._container is inserted into the corner of the given map|008bd277e6dc448192bc570f662c6a32
_map|control.remove|Control.remove removes the control from the given map when the map is unloaded|008bd277e6dc448192bc570f662c6a32
control|map|The control is added to a specific map through the addTo() method.|c16019fe73264ec4ab6be0a31d0dff70
control|options|The user can provide options to customize the behavior of the control when it is initialized.|c16019fe73264ec4ab6be0a31d0dff70
control|onadd()|This method is called when the control is added to a map. It should return the container DOM element for the control and add listeners on relevant map events.|c16019fe73264ec4ab6be0a31d0dff70
control|onremove()|This optional method should contain all clean up code that removes the listeners previously added in the onAdd() method. It is called when the control is removed.|c16019fe73264ec4ab6be0a31d0dff70
control|_createradioelement()|This method creates a radio element dynamically due to an IE7 bug. It is used in the context provided for creating radio elements.|c16019fe73264ec4ab6be0a31d0dff70
var radiohtml|"input type=""radio"" class=""leaflet-control-layers-selector"" name="""""|is a part of|e504296836764406b9efb205825c70b0
"input type=""radio"" class=""leaflet-control-layers-selector"" name="""""|"class ""leaflet-control-layers-selector"""|has class|e504296836764406b9efb205825c70b0
"input type=""radio"" class=""leaflet-control-layers-selector"" name="""""|"name """""|has attribute|e504296836764406b9efb205825c70b0
var radiohtml|document.createelement('div')|is used to create|e504296836764406b9efb205825c70b0
radiofragment.innerhtml = radiohtml;|radiohtml|is assigned to|e504296836764406b9efb205825c70b0
return radiofragment.firstchild;|radiofragment.firstchild|is returned by|e504296836764406b9efb205825c70b0
var removedlayers = [|[this._map.getlayergroup(this.options.layers.layergroup), this._map.getlayergroup(this.options.overlays.layergroup)]|contains|e504296836764406b9efb205825c70b0
for (i = 0; i < removedlayers.length; i++) { |removedlayers[i]|is being iterated over in|e504296836764406b9efb205825c70b0
if (this._map.haslayer(removedlayers[i])) { |this._map.getlayergroup(this.options.layers.layergroup)|contains|e504296836764406b9efb205825c70b0
if (this._map.haslayer(removedlayers[i])) { |this._map.getlayergroup(this.options.overlays.layergroup)|contains|e504296836764406b9efb205825c70b0
if (this._map.haslayer(removedlayers[i])) { |removedlayers[i]|is being removed from|e504296836764406b9efb205825c70b0
for (i = 0; i < addedlayers.length; i++) { |addedlayers[i]|is being iterated over in|e504296836764406b9efb205825c70b0
if (!this._map.haslayer(addedlayers[i])) { |addedlayers[i]|is being added to|e504296836764406b9efb205825c70b0
map|zoomcontrol|Map has a zoomControl by default if the 'zoomControl' option is true when creating the map.|1a579945c10a417da6f473502a9219bc
l.control.zoom|control.zoom|The 'zoomControl' is created using the L.control.zoom function, which extends the Control class and creates a zoom control.|1a579945c10a417da6f473502a9219bc
scale|control|The Scale control extends the Control class.|1a579945c10a417da6f473502a9219bc
l.control.scale|control.scale|The 'L.control.scale' function creates an instance of the Scale control, which shows the scale of the current center of screen in metric and imperial systems.|1a579945c10a417da6f473502a9219bc
map|zoomcontrol|The 'zoomControl' added to the map by default if the 'zoomControl' option is true when creating the map.|1a579945c10a417da6f473502a9219bc
control.zoom|l.control.zoom|The 'Control.Zoom' class is implemented in the 'L.control.zoom' function, which creates a zoom control.|1a579945c10a417da6f473502a9219bc
scale|control|The 'Control.Scale' options are passed to the Scale control when creating it using the 'L.control.scale' function.|1a579945c10a417da6f473502a9219bc
map|control|Both the zoomControl and the Scale control are added as Controls to the Map.|1a579945c10a417da6f473502a9219bc
metric|boolean|is a boolean option that determines whether to show the metric scale line (m/km).|b81e3c9071794afa8762e4be38bbf786
metric|maxmeters|is used in _updateScales method to update the metric scale line based on the maximum distance covered by the map.|b81e3c9071794afa8762e4be38bbf786
imperial|boolean|is a boolean option that determines whether to show the imperial scale line (mi/ft).|b81e3c9071794afa8762e4be38bbf786
imperial|maxmeters|is used in _updateScales method to update the imperial scale line based on the maximum distance covered by the map.|b81e3c9071794afa8762e4be38bbf786
_mscale|metric|is a div element that contains the metric scale line when the 'metric' option is true.|b81e3c9071794afa8762e4be38bbf786
_iscale|imperial|is a div element that contains the imperial scale line when the 'imperial' option is true.|b81e3c9071794afa8762e4be38bbf786
control|attribution|is a subclass of|e762c841fe2a41e2999fe121922e0759
l.control.attribution|control.attribution|alias for|e762c841fe2a41e2999fe121922e0759
control.attribution|control|extends Control|e762c841fe2a41e2999fe121922e0759
map|attributioncontrol|is set to by default unless options.attributionControl is false|e762c841fe2a41e2999fe121922e0759
control.attribution|l.control|extends Control|e762c841fe2a41e2999fe121922e0759
prefix|attribution.options|is an option for Attribution.options|e762c841fe2a41e2999fe121922e0759
control.attribution|map|is added to the map by onAdd method|e762c841fe2a41e2999fe121922e0759
attribution|l.control.attribution|is alias for Control.Attribution|e762c841fe2a41e2999fe121922e0759
control.attribution|control|setOptions method is called to set options for Attribution|e762c841fe2a41e2999fe121922e0759
control.attribution|l.control|extends Control|e762c841fe2a41e2999fe121922e0759
map._layers|control.attribution|for each layer, its getAttribution method is called to add attributions to Attribution using the addAttribution method|e762c841fe2a41e2999fe121922e0759
control.attribution|map._layers|TODO ugly, refactor for iterating over layers in map._layers array|e762c841fe2a41e2999fe121922e0759
map|attributioncontrol|Boolean property that determines whether a [attribution control](https://github.com/mapbox/mapbox-gl-js/blob/master/docs/control-attribution.md) is added to the map by default|976ec959da774b31b5f84205a547c7ab
map|options.prefix|Property that can be set to add a prefix to the attributions displayed in the [attribution control](https://github.com/mapbox/mapbox-gl-js/blob/master/docs/control-attribution.md)|976ec959da774b31b5f84205a547c7ab
map|_container.innerhtml|String property that contains the HTML for the [attribution control](https://github.com/mapbox/mapbox-gl-js/blob/master/docs/control-attribution.md)|976ec959da774b31b5f84205a547c7ab
attribution|map|Class that adds a [attribution control](https://github.com/mapbox/mapbox-gl-js/blob/master/docs/control-attribution.md) to the map|976ec959da774b31b5f84205a547c7ab
attribution|_update|Function that updates the HTML for the [attribution control](https://github.com/mapbox/mapbox-gl-js/blob/master/docs/control-attribution.md)|976ec959da774b31b5f84205a547c7ab
attribution|_container|Property that contains the DOM element for the [attribution control](https://github.com/mapbox/mapbox-gl-js/blob/master/docs/control-attribution.md)|976ec959da774b31b5f84205a547c7ab
attribution|_attributions|Object property that keeps track of the number of times each attribution text is used|976ec959da774b31b5f84205a547c7ab
handler|l.handler|is a type of|80bcc1c32e0846efae4b5a0c29c5ef35
handler|class|belongs to|80bcc1c32e0846efae4b5a0c29c5ef35
addto|handler|method of|80bcc1c32e0846efae4b5a0c29c5ef35
tolerance|points|parameter for|80bcc1c32e0846efae4b5a0c29c5ef35
return|this|keywords used in method|80bcc1c32e0846efae4b5a0c29c5ef35
_reducepoints|points|method used for|80bcc1c32e0846efae4b5a0c29c5ef35
peucker simplification|points|method used for|80bcc1c32e0846efae4b5a0c29c5ef35
_simplifydp|points|method used for|80bcc1c32e0846efae4b5a0c29c5ef35
p|pointtosegmentdistance|parameter for|80bcc1c32e0846efae4b5a0c29c5ef35
p1|pointtosegmentdistance|parameter for|80bcc1c32e0846efae4b5a0c29c5ef35
p2|pointtosegmentdistance|parameter for|80bcc1c32e0846efae4b5a0c29c5ef35
closestpointonsegment|p|function that returns the closest point from a point p on a segment p1 to p2|f54bbb34e80a4dcf9065e530c62e7283
peucker simplification|_simplifydp|a method for simplifying digital elevation maps using the Peucker algorithm|f54bbb34e80a4dcf9065e530c62e7283
douglas|_simplifydp|referencing Douglas as an implementation of the Peucker simplification algorithm|f54bbb34e80a4dcf9065e530c62e7283
points|_simplifydp|an array containing a set of points that are being simplified using the Peucker algorithm|f54bbb34e80a4dcf9065e530c62e7283
sqtolerance|_simplifydp, _reducepoints|a tolerance value used in the Peucker simplification and point reduction algorithms to determine whether two points are close enough to be considered the same|f54bbb34e80a4dcf9065e530c62e7283
markers|_simplifydpstep|an array used in the Peucker simplification algorithm to keep track of which points have been simplified and which still need to be processed|f54bbb34e80a4dcf9065e530c62e7283
_sqclosestpointonsegment|_simplifydpstep, _reducepoints|a method used in the Peucker simplification and point reduction algorithms to calculate the squared distance between a point and the closest point on a line segment|f54bbb34e80a4dcf9065e530c62e7283
simplify|lineutil|simplify is a utility function for polygon geometries, provided by the LineUtil namespace.|cb016567f9834899a108be3f5d996366
pointtosegmentdistance|lineutil|pointToSegmentDistance is a utility function for calculating the distance between a point and a line segment, provided by the LineUtil namespace.|cb016567f9834899a108be3f5d996366
closestpointonsegment|lineutil|closestPointOnSegment is a utility function for finding the closest point on a line segment to another point, provided by the LineUtil namespace.|cb016567f9834899a108be3f5d996366
clipsegment|lineutil|clipSegment is a utility function for clipping a line segment against a line, provided by the LineUtil namespace.|cb016567f9834899a108be3f5d996366
_getedgeintersection|lineutil|This seems to be an internal function for calculating the intersection point between two line segments, which is used by _flat and _sqClosestPointOnSegment.|cb016567f9834899a108be3f5d996366
_getbitcode|lineutil|This seems to be an internal function for generating a bit code representation for polygons, which is used by _flat and _sqClosestPointOnSegment.|cb016567f9834899a108be3f5d996366
_sqclosestpointonsegment|lineutil|This seems to be an internal function for finding the squared distance between a point and a line segment, which is used by _flat.|cb016567f9834899a108be3f5d996366
isflat|polyutil|isFlat is a utility function for checking whether an array of LatLng objects is flat or nested. This seems to be used by _flat.|cb016567f9834899a108be3f5d996366
_flat|polyutil|This seems to be an internal function for flattening arrays of LatLng objects. It is deprecated in favor of the public isFlat function.|cb016567f9834899a108be3f5d996366
projection|bounds|A projection is valid within a specified range of geographical coordinates, as defined by the Bounds property.|ded636dd4ff44f5281e1eafff03be021
latlng|point|The projection method 'project' takes a LatLng object representing a geographical location and returns a Point object representing its two-dimensional coordinates on the map.|ded636dd4ff44f5281e1eafff03be021
point|latlng|The inverse method 'unproject' takes a Point object representing a two-dimensional location and returns a LatLng object representing its geographical coordinates on the map.|ded636dd4ff44f5281e1eafff03be021
projection|latlng|The 'project' method of the Projection class maps a given latitude and longitude to their corresponding two-dimensional x and y coordinates on the map.|ded636dd4ff44f5281e1eafff03be021
projection|point|The 'unproject' method of the Projection class takes a two-dimensional point and returns its corresponding latitude and longitude coordinates using inverse projection techniques.|ded636dd4ff44f5281e1eafff03be021
lonlat|point|In the context of this code, LonLat is a child class of Point, so LatLng objects can also be directly passed to the 'project' method.|ded636dd4ff44f5281e1eafff03be021
crs|l.crs.epsg3395|is a specific type of CRS with code 'EPSG:3395', uses Elliptical Mercator projection.|83ffaa7c391b484e95e080f8a221bab5
crs|l.crs.epsg4326|is a commonly used CRS among GIS enthusiasts with code 'EPSG:4326', uses simple Equirectangular projection.|83ffaa7c391b484e95e080f8a221bab5
l.crs.epsg3395|mercator|is used in L.CRS.EPSG3395 and is an Elliptical Mercator projection.|83ffaa7c391b484e95e080f8a221bab5
l.crs.epsg4326|lonlat|is used in L.CRS.EPSG4326 and is a simple Equirectangular projection.|83ffaa7c391b484e95e080f8a221bab5
crs|simple|Simple is a child class of CRS and inherits all methods, options, and events from L.Evented.|df341690dda24af1b8ae5befc31c446a
lonlat|earth|Earth is a child class of CRS with a projection of LonLat and transformation of toTransformation(1 / 180, 1, -1 / 180, 0.5).|df341690dda24af1b8ae5befc31c446a
crs|earth|Earth is a child class of CRS with a projection of LonLat and transformation of toTransformation(1 / 180, 1, -1 / 180, 0.5).|df341690dda24af1b8ae5befc31c446a
crs|epsg3395|EPSG3395 is a child class of CRS.|df341690dda24af1b8ae5befc31c446a
crs|epsg3857|EPSG3857 is a child class of CRS.|df341690dda24af1b8ae5befc31c446a
crs|epsg900913|EPSG900913 is a child class of CRS.|df341690dda24af1b8ae5befc31c446a
crs|epsg4326|EPSG4326 is a child class of CRS with code 'EPSG:4326'.|df341690dda24af1b8ae5befc31c446a
crs|simple|Simple has projection LonLat and transformation toTransformation(1, 0, -1, 0).|df341690dda24af1b8ae5befc31c446a
l|map|L is a subclass of Evented and can be added to a Map or LayerGroup via the addTo method.|b26a05dfba1f4cfe8cadf439e68fa83c
layer|evented|Layer inherits from Evented, which allows it to emit events.|b26a05dfba1f4cfe8cadf439e68fa83c
l.layer|options|L.Layer has a set of options that can be passed during instantiation.|b26a05dfba1f4cfe8cadf439e68fa83c
l.layer|map|L.Layer can be added to a Map or LayerGroup via the addTo method.|b26a05dfba1f4cfe8cadf439e68fa83c
l.layer|layergroup|L.Layer can be removed from a Map or LayerGroup via the removeFrom method.|b26a05dfba1f4cfe8cadf439e68fa83c
map|overlaypane|Map has an option to specify which pane layers will be added to by default.|b26a05dfba1f4cfe8cadf439e68fa83c
l.layer|pane|L.Layer has an option to override the default pane for adding layers.|b26a05dfba1f4cfe8cadf439e68fa83c
l.layer|attribution|L.Layer has an option to provide attribution text for the layer.|b26a05dfba1f4cfe8cadf439e68fa83c
l.layer|bubblingmouseevents|L.Layer has a default setting for whether mouse events bubble up through the layers.|b26a05dfba1f4cfe8cadf439e68fa83c
getpane|name|used in the argument of getPane function to return the corresponding pane|809252d970674d12927c07eb20ef3452
this._map.getpane|"name ? (this.options[name] || name)"|logical expression to retrieve the specified pane based on provided options or layer's default|809252d970674d12927c07eb20ef3452
_map.getpane|"(this.options[name] || name)"|passing the resolved value of 'name' to the map's getPane function|809252d970674d12927c07eb20ef3452
getattribution|attribution option|accessed by the attribution control to display credit information for the layer|809252d970674d12927c07eb20ef3452
map|layer|The Map object includes an addLayer method which adds a Layer to the map.|8c9ee1ff6ea24277ad6baf06f7530f57
map._layers|layer|The Map object has a property called _layers that stores the added Layers.|8c9ee1ff6ea24277ad6baf06f7530f57
layer._maptoadd|map|Each Layer has a property called _mapToAdd which holds the Map object to which it was added.|8c9ee1ff6ea24277ad6baf06f7530f57
layer._map|map|The Layer object also has a property called _map which stores the Map object to which it was originally added.|8c9ee1ff6ea24277ad6baf06f7530f57
map.whenready|layer._layeradd|When the map is ready, the Map object's whenReady method is called with the Layer's _layerAdd function as an argument.|8c9ee1ff6ea24277ad6baf06f7530f57
map.removelayer|layer|The Map object's removeLayer method removes a Layer from the map and updates its properties accordingly.|8c9ee1ff6ea24277ad6baf06f7530f57
layer.onremove|map|Each Layer has an onRemove method that is called by the Map object when it is being removed.|8c9ee1ff6ea24277ad6baf06f7530f57
layer.fire|remove|The Layer object's fire method is used to trigger events, such as 'layerremove', which are fired when the Layer is being removed.|8c9ee1ff6ea24277ad6baf06f7530f57
map.attributioncontrol|layer.getattribution|If a Layer has an attribution, it can be passed to the Map object's attributionControl for display.|8c9ee1ff6ea24277ad6baf06f7530f57
layergroup|layer|is a specialization of|4d19b9ae8ab249a49fabdedad9b56677
layergroup|l.layergroup|same as|4d19b9ae8ab249a49fabdedad9b56677
layergroup|extends layer|implements|4d19b9ae8ab249a49fabdedad9b56677
addlayer|layer|is used to add|4d19b9ae8ab249a49fabdedad9b56677
removelayer|layer|is used to remove|4d19b9ae8ab249a49fabdedad9b56677
removelayer|id|requires an internal ID for removal|4d19b9ae8ab249a49fabdedad9b56677
addlayer|map|is added to the map|4d19b9ae8ab249a49fabdedad9b56677
_map|this._map|belongs to|8e946fb29ee848cc87508236c8f50947
group|this|is composed of|8e946fb29ee848cc87508236c8f50947
_layers|this._layers|is a part of|8e946fb29ee848cc87508236c8f50947
layer|this._layers[id]|belongs to group with id|8e946fb29ee848cc87508236c8f50947
removelayer|this._map.removelayer|is a method of Map which removes layer from it|8e946fb29ee848cc87508236c8f50947
_layers[id]|this._map|is removed by the removeLayer method of Map|8e946fb29ee848cc87508236c8f50947
delete|delete this._layers[id]|removes the reference to the layer from group's object|8e946fb29ee848cc87508236c8f50947
haslayer|true|returns true when the given layer is already present in group|8e946fb29ee848cc87508236c8f50947
id|layer|is the internal ID of Layer object|8e946fb29ee848cc87508236c8f50947
_layers|this._layers[layerid]|contains the layer with the given internal ID|8e946fb29ee848cc87508236c8f50947
clearlayers|eachlayer method of this group|is executed on every layer contained in this group|8e946fb29ee848cc87508236c8f50947
_layers|this._layers|is iterated over in eachLayer method|8e946fb29ee848cc87508236c8f50947
removelayer|map.removelayer|is called on every layer contained in this group|8e946fb29ee848cc87508236c8f50947
map|map|has a method removeLayer which removes the layer from Map object|8e946fb29ee848cc87508236c8f50947
invoke|methodname|is called on every layer contained in this group with arguments|8e946fb29ee848cc87508236c8f50947
_layers|this._layers|is iterated over in invoke method|8e946fb29ee848cc87508236c8f50947
layer[methodname]|layer object's implementation of the given method|is called for each layer contained in this group|8e946fb29ee848cc87508236c8f50947
layergroup|l.layergroup|is a type of in LeafletJS|20dbb7af87f649df9367ca10d8898c14
layergroup|layers|contains one or more layers as its children|20dbb7af87f649df9367ca10d8898c14
layergroup|options|can be customized using an options object during initialization|20dbb7af87f649df9367ca10d8898c14
layers|layer|each Layer is added to the Layers array of a Group|20dbb7af87f649df9367ca10d8898c14
layergroup|getlayerid|returns the internal ID of a layer within the group|20dbb7af87f649df9367ca10d8898c14
l.layergroup|setzindex|calls setZIndex method on every layer contained in the group, passing z-index|20dbb7af87f649df9367ca10d8898c14
node_1|node_2|edge|chunk_id
featuregroup|layergroup|extends|ffecd3df17654851822f981696c2dc3d
layergroup|layer|contains|ffecd3df17654851822f981696c2dc3d
featuregroup|layer|contains or has|ffecd3df17654851822f981696c2dc3d
layerevent|layeradd|fired by|ffecd3df17654851822f981696c2dc3d
layer|featuregroup|hasEventParent or addEventParent or removeEventParent|ffecd3df17654851822f981696c2dc3d
map|marker|is part of|ffecd3df17654851822f981696c2dc3d
marker|_icon|has|ffecd3df17654851822f981696c2dc3d
map|getpixelbounds|uses|ffecd3df17654851822f981696c2dc3d
map|getpixelorigin|uses|ffecd3df17654851822f981696c2dc3d
marker|icon|Marker is initialized with an optional Icon instance for rendering the marker.|b33ea56c8e0b4d9c90f26692ba6b55f8
marker|interactive layer|Marker inherits options from 'Interactive layer' abstract class.|b33ea56c8e0b4d9c90f26692ba6b55f8
marker|keyboard|Marker can be tabbed to with a keyboard and clicked by pressing enter if 'keyboard' option is true.|b33ea56c8e0b4d9c90f26692ba6b55f8
marker|title|Text for the browser tooltip that appear on marker hover can be set using 'title' option.|b33ea56c8e0b4d9c90f26692ba6b55f8
marker|alt|Text for the 'alt' attribute of the icon image can be set using 'alt' option.|b33ea56c8e0b4d9c90f26692ba6b55f8
marker|zindexoffset|By default, marker images zIndex is set automatically based on its latitude. This option can be used to put the marker on top of all others or below using a specified high value for 'zIndexOffset'.|b33ea56c8e0b4d9c90f26692ba6b55f8
marker|opacity|The opacity of the marker can be set using 'opacity' option.|b33ea56c8e0b4d9c90f26692ba6b55f8
marker|riseonhover|If 'true', the marker will get on top of others when you hover the mouse over it.|b33ea56c8e0b4d9c90f26692ba6b55f8
marker|riseoffset|The z-index offset used for the 'riseOnHover' feature can be set using 'riseOffset' option.|b33ea56c8e0b4d9c90f26692ba6b55f8
initialize|options|is a function that sets the options for the marker during its initialization. The options include riseOffset, pane, shadowPane, bubblingMouseEvents, draggable, autoPan, and autoPanPadding.|d2f035c6d17948638f22dc6998354e0e
tolatlng|latlng|is a method that converts the latitude and longitude coordinates to a LatLng object.|d2f035c6d17948638f22dc6998354e0e
initialize|options|function takes a 'latlng' and 'options' argument, where 'options' can be set using the 'setOptions' function.|7ab559bb70fd4867ac3639bea49ed714
onadd|map|The 'onAdd' function is called when the marker is added to a map. The 'map' object is passed as an argument.|7ab559bb70fd4867ac3639bea49ed714
onremove|map|The 'onRemove' function is called when the marker is removed from a map. The 'map' object is passed as an argument.|7ab559bb70fd4867ac3639bea49ed714
getevents||This function returns an object containing the events that can be listened to for this marker.|7ab559bb70fd4867ac3639bea49ed714
getlatlng||This method returns the current geographical position of the marker as a LatLng object.|7ab559bb70fd4867ac3639bea49ed714
setlatlng|latlng|This method changes the position of the marker to the given 'latlng' value.|7ab559bb70fd4867ac3639bea49ed714
move||This event is fired when the marker is moved via `setLatLng` or by dragging. The old and new coordinates are included in the event arguments as 'oldLatLng' and 'latlng'.|7ab559bb70fd4867ac3639bea49ed714
setzindexoffset|offset|changes the zIndex offset of the marker|d3da4f94f04d4ca5b606ebeedb2341e3
geticon|icon|returns the current icon used by the marker|d3da4f94f04d4ca5b606ebeedb2341e3
seticon|icon|changes the marker icon|d3da4f94f04d4ca5b606ebeedb2341e3
getelement|_icon|returns the element associated with the marker|d3da4f94f04d4ca5b606ebeedb2341e3
classtoadd|classtoadd|adds a class to the icon for zoom animation or hiding|d3da4f94f04d4ca5b606ebeedb2341e3
icon|_icon|creates and sets the icon associated with the marker|d3da4f94f04d4ca5b606ebeedb2341e3
title|icon.prototype.options.title|sets the title of the icon if specified|d3da4f94f04d4ca5b606ebeedb2341e3
alt|icon.prototype.src.tagname === 'img'|sets the alt attribute of the icon image if specified|d3da4f94f04d4ca5b606ebeedb2341e3
addclass|adds a class to the marker element for keyboard interaction or zoom animation/hiding||d3da4f94f04d4ca5b606ebeedb2341e3
path|interactive layer|Path is an abstract class that contains options and constants shared between vector overlays (Polygon, Polyline, Circle). It extends Interactive layer.|0d11ac129ac341ed8c3aca7984a0a5af
layer|interactive layer|Layer is a base class for all visible map components, including markers, polygons, circles, overlays, and popups. Interactive layer is a subclass of Layer.|0d11ac129ac341ed8c3aca7984a0a5af
polygon|path|Both Polygon and Path are vector overlays that inherit from Layer and Path respectively.|0d11ac129ac341ed8c3aca7984a0a5af
polyline|path|Similar to Polygon, both Polyline and Path are vector overlays that inherit from Layer and Path respectively.|0d11ac129ac341ed8c3aca7984a0a5af
circle|path|Both Circle and Path are vector overlays that inherit from Layer and Path respectively.|0d11ac129ac341ed8c3aca7984a0a5af
beforeadd|map|The method 'beforeAdd' is called on the path component before adding it to the map.|442d9101da0447159118132ebed2f0e3
onadd|path component|The method 'onAdd' is called on the path component after it has been added to the map.|442d9101da0447159118132ebed2f0e3
getrenderer|map|The method 'getRenderer' is called on the map to retrieve the renderer object.|442d9101da0447159118132ebed2f0e3
path component|_renderer|The '_renderer' property of the path component is set to the renderer object retrieved from the map.|442d9101da0447159118132ebed2f0e3
getevents|_renderer|The method 'getEvents' is called on the renderer object before initializing the path component.|442d9101da0447159118132ebed2f0e3
circlemarker|path|CircleMarker is an extension of Path.|add6e07bdc8c4236856ace8a976b195c
circlemarker|latlng|CircleMarker's position can be set using LatLng object via setLatLng() method.|add6e07bdc8c4236856ace8a976b195c
circlemarker.options|fill|CircleMarker options contains a fill property, which is a boolean value that determines whether the circle is filled or not.|add6e07bdc8c4236856ace8a976b195c
circlemarker.options|radius|CircleMarker options also contain a radius property, which specifies the size of the circle in pixels.|add6e07bdc8c4236856ace8a976b195c
circlemarker|latlng|CircleMarker is instantiated with a LatLng object|9097c1e3a3cf444b944ec56c209a434f
circlemarker|options|CircleMarker can be initialized with optional options object|9097c1e3a3cf444b944ec56c209a434f
circlemarker|getradius|_radius is a property of CircleMarker that can be accessed using getRadius()|9097c1e3a3cf444b944ec56c209a434f
circlemarker|setstyle|setStyle method of CircleMarker takes options object as argument and sets the radius from it or from the existing one|9097c1e3a3cf444b944ec56c209a434f
path.prototype|options|setStyle method also calls Path.prototype.setStyle to set styles for CircleMarker|9097c1e3a3cf444b944ec56c209a434f
circlemarker|_renderer._bounds|_radius and _radiusY properties are used to calculate the bounds of CircleMarker in _updateBounds method|9097c1e3a3cf444b944ec56c209a434f
circlemarker|_clicktolerance|a property called _clickTolerance is used in calculating the bounds of CircleMarker in _updateBounds method|9097c1e3a3cf444b944ec56c209a434f
canvas|_renderer._bounds|CircleMarker intersects with the Canvas renderer's bounds using _containsPoint method to check for interactivity|9097c1e3a3cf444b944ec56c209a434f
circle|circlemarker|extends 'CircleMarker'|f2f8979ffd134a9398be444bea3ff226
circle|latlngbounds|returns 'LatLngBounds'|f2f8979ffd134a9398be444bea3ff226
circle|map|belongs to 'map'|f2f8979ffd134a9398be444bea3ff226
circle.prototype._latlng|latlng|is initialized with|f2f8979ffd134a9398be444bea3ff226
circle.prototype._map|map|belongs to 'map'|f2f8979ffd134a9398be444bea3ff226
circle.prototype._point|pixel|is initialized with|f2f8979ffd134a9398be444bea3ff226
circle.prototype.getbounds|latlngbounds|returns 'LatLngBounds'|f2f8979ffd134a9398be444bea3ff226
circlemarker|circle|extends 'Circle'|f2f8979ffd134a9398be444bea3ff226
polyline|path|Polyline is a class that extends Path.|328f007ffc2c4e14b38d34f69c8209d3
options|polyline|options is an object that can be passed to the constructor of Polyline.|328f007ffc2c4e14b38d34f69c8209d3
smoothfactor|options|smoothFactor is a property of options that determines how much the polyline should be simplified on each zoom level.|328f007ffc2c4e14b38d34f69c8209d3
noclip|options|noClip is a property of options that allows disabling clipping for the polyline.|328f007ffc2c4e14b38d34f69c8209d3
getlatlngs|polyline|getLatLngs returns an array containing all the points in the polyline, or nested arrays if it's a multi-polyline.|328f007ffc2c4e14b38d34f69c8209d3
_setlatlngs|polyline|Sets the latlngs array of the Polyline with the given array of geographical points.|328f007ffc2c4e14b38d34f69c8209d3
isempty|polyline|Returns true if the polyline has no points, false otherwise.|328f007ffc2c4e14b38d34f69c8209d3
closestlayerpoint|polyline|Returns the point on the Polyline that is closest to the given point p.|328f007ffc2c4e14b38d34f69c8209d3
